[{"id":1,"knlg":"知识","pid":0,"path":"0-1","orderNum":1,"bindId":null},{"id":7,"knlg":"bootstrap","pid":154,"path":"0-1-154-7","orderNum":1,"bindId":null},{"id":8,"knlg":"container-fluid\n变宽容器100%,没有响应式","pid":7,"path":"0-1-154-7-8","orderNum":1,"bindId":null},{"id":10,"knlg":"hbuilder","pid":1150,"path":"0-1-154-1150-10","orderNum":1,"bindId":null},{"id":11,"knlg":"快捷键","pid":10,"path":"0-1-154-1150-10-11","orderNum":1,"bindId":null},{"id":12,"knlg":"查看类的定义\n<my示例>\nalt+鼠标左键\n或者f12","pid":11,"path":"0-1-154-1150-10-11-12","orderNum":1,"bindId":null},{"id":17,"knlg":"设置巨大字体","pid":7,"path":"0-1-154-7-17","orderNum":2,"bindId":null},{"id":18,"knlg":"display-1到display-4\n<my示例>\nclass=\"display-1\"\n</my示例>","pid":17,"path":"0-1-154-7-17-18","orderNum":1,"bindId":null},{"id":22,"knlg":"设定3边显示边框\n<my示例>\nclass=\"border border-left-0 border-warning\"\n</my示例>","pid":7,"path":"0-1-154-7-22","orderNum":3,"bindId":null},{"id":23,"knlg":"占满一行的按钮样式\n<my示例>\nclass=\"btn btn-block btn-danger\"\n</my示例>","pid":7,"path":"0-1-154-7-23","orderNum":4,"bindId":null},{"id":25,"knlg":"按钮组","pid":7,"path":"0-1-154-7-25","orderNum":5,"bindId":null},{"id":28,"knlg":"竖向按钮组<my示例><div class=\"btn-group-vertical\">\n    <button class =\"btn btn-outline-primary\">fdes</button>\n    <button class=\"btn btn-outline-primary\">gde</button>\n    <button class=\"btn btn-outline-primary\">fffffg</button>\n    <button class=\"btn btn-outline-primary\">desrftg</button>\n    <button class=\"btn btn-outline-primary\">deftgr</button>\n</div></my示例>","pid":25,"path":"0-1-154-7-25-28","orderNum":1,"bindId":null},{"id":29,"knlg":"水平按钮组<my示例>\n<div class=\"btn-group\">\n    <button class=\"btn btn-outline-primary\">fdes</button>\n    <button class=\"btn btn-outline-primary\">gde</button>\n    <button class=\"btn btn-outline-primary\">fffffg</button>\n    <button class=\"btn btn-outline-primary\">desrftg</button>\n    <button class=\"btn btn-outline-primary\">deftgr</button>\n</div>\n</my示例>","pid":25,"path":"0-1-154-7-25-29","orderNum":2,"bindId":null},{"id":31,"knlg":"注意","pid":154,"path":"0-1-154-31","orderNum":2,"bindId":null},{"id":32,"knlg":"console.log打印数组时是异步的","pid":31,"path":"0-1-154-31-32","orderNum":1,"bindId":null},{"id":33,"knlg":"forEach是同步的","pid":31,"path":"0-1-154-31-33","orderNum":2,"bindId":null},{"id":35,"knlg":"mysql","pid":154,"path":"0-1-154-35","orderNum":3,"bindId":null},{"id":36,"knlg":"导出数据库","pid":35,"path":"0-1-154-35-36","orderNum":1,"bindId":null},{"id":37,"knlg":"mysqldump -uroot 数据库名 [数据表名]>文件名.sql\n<my定义>不推荐{(此方法可能会出现导出后导入错误)}\n<my示例>\nmysqldump -uroot know>backupme.sql\n</my示例>","pid":36,"path":"0-1-154-35-36-37","orderNum":1,"bindId":null},{"id":44,"knlg":"css","pid":154,"path":"0-1-154-44","orderNum":4,"bindId":null},{"id":45,"knlg":"input高度设置100%后上方还出现空白","pid":49,"path":"0-1-154-44-49-45","orderNum":1,"bindId":null},{"id":46,"knlg":"input设置vertical-align:top;","pid":45,"path":"0-1-154-44-49-45-46","orderNum":1,"bindId":null},{"id":47,"knlg":"设置的整体宽度明明符合要求却还是排不下","pid":49,"path":"0-1-154-44-49-47","orderNum":2,"bindId":null},{"id":48,"knlg":"去除行内元素之间的空格","pid":47,"path":"0-1-154-44-49-47-48","orderNum":1,"bindId":null},{"id":49,"knlg":"css问题","pid":44,"path":"0-1-154-44-49","orderNum":1,"bindId":null},{"id":50,"knlg":"弹性布局元素排列顺序","pid":44,"path":"0-1-154-44-50","orderNum":2,"bindId":null},{"id":51,"knlg":"order:   +数字","pid":50,"path":"0-1-154-44-50-51","orderNum":1,"bindId":null},{"id":52,"knlg":"图片上方有空白区域","pid":49,"path":"0-1-154-44-49-52","orderNum":3,"bindId":null},{"id":53,"knlg":"图片设置其它vertical-align","pid":52,"path":"0-1-154-44-49-52-53","orderNum":1,"bindId":null},{"id":54,"knlg":"jQuery","pid":1152,"path":"0-1-154-1152-54","orderNum":1,"bindId":null},{"id":55,"knlg":"遍历查找到的元素\n<my示例>\n$('ul').each(function(){\n    let elem=$(this)\n})\n</my示例>","pid":54,"path":"0-1-154-1152-54-55","orderNum":1,"bindId":null},{"id":56,"knlg":"遍历类数组对象\n<my示例>\n$.each($('ul'),function(i,ul){\n    console.log(i,$(ul).html());\n})\n</my示例>","pid":54,"path":"0-1-154-1152-54-56","orderNum":2,"bindId":null},{"id":58,"knlg":"jQuery插件","pid":54,"path":"0-1-154-1152-54-58","orderNum":3,"bindId":null},{"id":59,"knlg":"https://jqueryui.com/","pid":58,"path":"0-1-154-1152-54-58-59","orderNum":1,"bindId":null},{"id":61,"knlg":"正则表达式","pid":154,"path":"0-1-154-61","orderNum":5,"bindId":null},{"id":62,"knlg":"定义方式","pid":61,"path":"0-1-154-61-62","orderNum":1,"bindId":null},{"id":63,"knlg":"var patt1  =  /pattern/attributes ;\n此方法适用于大多数情况\n<my示例>\nvar patt1  =  /\\n(?! *\\n) */g ;\n</my示例>","pid":62,"path":"0-1-154-61-62-63","orderNum":1,"bindId":null},{"id":64,"knlg":"var patt2 = new RegExp(pattern,  attributes);\n此方法适用于所有情况\n<my示例>\nlet regExp=new RegExp(`\\n {${min-1}}`,'g');\n</my示例>","pid":62,"path":"0-1-154-61-62-64","orderNum":2,"bindId":null},{"id":65,"knlg":"字符串中的\\n会被翻译成换行,\n实在要保持格式可以用String.raw `字符串\\n`","pid":31,"path":"0-1-154-31-65","orderNum":3,"bindId":null},{"id":67,"knlg":"str.replace","pid":61,"path":"0-1-154-61-67","orderNum":2,"bindId":null},{"id":68,"knlg":"回调函数格式","pid":67,"path":"0-1-154-61-67-68","orderNum":1,"bindId":null},{"id":69,"knlg":"keyword,p1,p2,offset,strOrig,groups\n\np1,p2代表第几个()中的内容被匹配,\noffset代表匹配到的字符的index\nstrOrig代表原字符串\ngroups代表存放的组名称数组\n<my示例>\nlet str = \"你在敢啥么\";\n\nstr=str.replaceAll(new RegExp('(感|敢)|(啥|沙)', 'g'), (keyword, p1, p2, offset, strOrig) => {\n    if(p1!==undefined){\n        return '干';\n    }\n    if(p2!==undefined){\n        return '什';\n    }\n    return kw;\n})\nconsole.log(str);\n\n//或\n\nlet str = \"你在敢啥么\";\n\nstr = str.replaceAll(new RegExp('(?<gr1>感|敢)|(?<gr2>啥|沙)', 'g'), function(kw,p1,p2,off,strO,groups){\n    if(groups.gr1!==undefined){\n        return '干';\n    }\n    if(groups.gr2!==undefined){\n        return '什';\n    }\n    return kw;\n})\nconsole.log(str);\n</my示例>","pid":68,"path":"0-1-154-61-67-68-69","orderNum":1,"bindId":null},{"id":70,"knlg":"单词","pid":999,"path":"0-1-999-70","orderNum":1,"bindId":null},{"id":71,"knlg":"knock over / upset\n<my切换>把东西打翻</my切换>","pid":70,"path":"0-1-999-70-71","orderNum":1,"bindId":null},{"id":75,"knlg":"优先匹配规则","pid":61,"path":"0-1-154-61-75","orderNum":3,"bindId":null},{"id":76,"knlg":". 优先匹配字符和符号, 不优先匹配空格","pid":75,"path":"0-1-154-61-75-76","orderNum":1,"bindId":null},{"id":77,"knlg":"\\s优先匹配空格和制表符, 不优先匹配换行符","pid":75,"path":"0-1-154-61-75-77","orderNum":2,"bindId":null},{"id":78,"knlg":"ajax注意事项","pid":158,"path":"0-1-154-158-78","orderNum":1,"bindId":null},{"id":79,"knlg":"传对象时要用JSON.stringify(obj)转换为字符串","pid":78,"path":"0-1-154-158-78-79","orderNum":1,"bindId":null},{"id":80,"knlg":"传$时要用decodeURIComponent(str)之后才能传","pid":78,"path":"0-1-154-158-78-80","orderNum":2,"bindId":null},{"id":81,"knlg":"传 % 时要自己实现一个decodeURIComponentSafe(str),\n将字符串中的 % 转化成不易重名的字符,如<(per)>,不然会\n与decodeURIComponent冲突.(后者用 % 来转化 $ 等字符)","pid":78,"path":"0-1-154-158-78-81","orderNum":3,"bindId":null},{"id":82,"knlg":"使用jQuery不用处理这些问题,因为已经被实现好了","pid":81,"path":"0-1-154-158-78-81-82","orderNum":1,"bindId":null},{"id":90,"knlg":"学子商城后台接口网址\n<my切换>https://xzserver.applinzi.com/details?lid=5</my切换>","pid":1,"path":"0-1-90","orderNum":1,"bindId":null},{"id":93,"knlg":"请求载入并直接执行js代码","pid":54,"path":"0-1-154-1152-54-93","orderNum":4,"bindId":null},{"id":94,"knlg":"getScript()","pid":93,"path":"0-1-154-1152-54-93-94","orderNum":1,"bindId":null},{"id":95,"knlg":"视频位置: day03  03  00:12","pid":94,"path":"0-1-154-1152-54-93-94-95","orderNum":1,"bindId":null},{"id":96,"knlg":"http模块","pid":157,"path":"0-1-154-157-96","orderNum":1,"bindId":null},{"id":97,"knlg":"返回响应","pid":96,"path":"0-1-154-157-96-97","orderNum":1,"bindId":null},{"id":98,"knlg":"res.write('响应')\nres.end()","pid":97,"path":"0-1-154-157-96-97-98","orderNum":1,"bindId":null},{"id":99,"knlg":"发的是script请求,不是ajax请求","pid":94,"path":"0-1-154-1152-54-93-94-99","orderNum":2,"bindId":null},{"id":100,"knlg":"ajax综合函数","pid":54,"path":"0-1-154-1152-54-100","orderNum":5,"bindId":null},{"id":101,"knlg":"$.ajax","pid":100,"path":"0-1-154-1152-54-100-101","orderNum":1,"bindId":null},{"id":102,"knlg":"day03 03 13:21","pid":101,"path":"0-1-154-1152-54-100-101-102","orderNum":1,"bindId":null},{"id":103,"knlg":"表单序列化","pid":54,"path":"0-1-154-1152-54-103","orderNum":6,"bindId":null},{"id":104,"knlg":"序列化就是将对象转为字符串","pid":103,"path":"0-1-154-1152-54-103-104","orderNum":1,"bindId":null},{"id":106,"knlg":"day03 04 3:39","pid":103,"path":"0-1-154-1152-54-103-106","orderNum":2,"bindId":null},{"id":107,"knlg":"表单的缺点","pid":156,"path":"0-1-154-156-107","orderNum":1,"bindId":null},{"id":108,"knlg":"提交时如果网速慢会卡住,影响用户体验","pid":107,"path":"0-1-154-156-107-108","orderNum":1,"bindId":null},{"id":109,"knlg":"label的正确用法","pid":156,"path":"0-1-154-156-109","orderNum":2,"bindId":null},{"id":110,"knlg":" <<my定义>label{(包裹起来)}>\n    <input type=\"checkbox\">\n    <span>我已阅读并同意用户注册协议</span>\n</label>","pid":109,"path":"0-1-154-156-109-110","orderNum":1,"bindId":null},{"id":112,"knlg":":checked选择器选择的是prop中的checked属性","pid":115,"path":"0-1-154-1152-54-115-112","orderNum":1,"bindId":null},{"id":115,"knlg":"选择器","pid":54,"path":"0-1-154-1152-54-115","orderNum":7,"bindId":null},{"id":116,"knlg":"[checked]选择器选择的是attr中的checked属性\n该值运行时不会变,始终是checked或undefined","pid":115,"path":"0-1-154-1152-54-115-116","orderNum":2,"bindId":null},{"id":117,"knlg":"表单元素中内容转为对象","pid":54,"path":"0-1-154-1152-54-117","orderNum":8,"bindId":null},{"id":118,"knlg":"serializeArray","pid":117,"path":"0-1-154-1152-54-117-118","orderNum":1,"bindId":null},{"id":119,"knlg":"day03 04 26:49","pid":118,"path":"0-1-154-1152-54-117-118-119","orderNum":1,"bindId":null},{"id":120,"knlg":"阻止按钮默认操作的方式","pid":155,"path":"0-1-154-155-120","orderNum":1,"bindId":null},{"id":121,"knlg":"点击事件中return false;","pid":120,"path":"0-1-154-155-120-121","orderNum":1,"bindId":null},{"id":122,"knlg":"e.preventDefault();","pid":120,"path":"0-1-154-155-120-122","orderNum":2,"bindId":null},{"id":123,"knlg":"js代码引入后执行的先后顺序","pid":54,"path":"0-1-154-1152-54-123","orderNum":9,"bindId":null},{"id":124,"knlg":"day01 05 24:49","pid":123,"path":"0-1-154-1152-54-123-124","orderNum":1,"bindId":null},{"id":125,"knlg":"jquery.min.js的$(document).ready()方法不起作用\n和$(window).load()一样","pid":31,"path":"0-1-154-31-125","orderNum":4,"bindId":null},{"id":126,"knlg":"ajax跨域","pid":54,"path":"0-1-154-1152-54-126","orderNum":10,"bindId":null},{"id":127,"knlg":"day03 05 00:00","pid":126,"path":"0-1-154-1152-54-126-127","orderNum":1,"bindId":null},{"id":128,"knlg":"禁止ajax跨域是浏览器的一个<my定义>同源策略{(只允许访问相同域名的ajax访问)}(安全功能)","pid":126,"path":"0-1-154-1152-54-126-128","orderNum":2,"bindId":null},{"id":131,"knlg":"什么情况算跨域","pid":126,"path":"0-1-154-1152-54-126-131","orderNum":3,"bindId":null},{"id":132,"knlg":"day03 05 17:45","pid":131,"path":"0-1-154-1152-54-126-131-132","orderNum":1,"bindId":null},{"id":134,"knlg":"CORS策略 详细原理","pid":126,"path":"0-1-154-1152-54-126-134","orderNum":4,"bindId":null},{"id":135,"knlg":"day03 05 24:03","pid":134,"path":"0-1-154-1152-54-126-134-135","orderNum":1,"bindId":null},{"id":136,"knlg":"解决方法","pid":126,"path":"0-1-154-1152-54-126-136","orderNum":5,"bindId":null},{"id":137,"knlg":"day03 06 00:00","pid":136,"path":"0-1-154-1152-54-126-136-137","orderNum":1,"bindId":null},{"id":138,"knlg":"代理请求","pid":136,"path":"0-1-154-1152-54-126-136-138","orderNum":2,"bindId":null},{"id":139,"knlg":"day03 06 06:17","pid":138,"path":"0-1-154-1152-54-126-136-138-139","orderNum":1,"bindId":null},{"id":140,"knlg":"JSONP\n<my来源>day03 06 17:31</my来源>","pid":1747,"path":"0-1-154-1152-54-126-136-1747-140","orderNum":3,"bindId":null},{"id":142,"knlg":"CORS方式\n<my示例>\nconst express=require('express')\nconst app=express()\n\n\napp.use(express.static('public'))\n\n\n\napp.listen(3000,()=>{\n    console.log('服务器已启动,端口3000')\n})\n\n//此处拦截所有请求,统一提交响应头\n//*是通配符匹配所有的请求\n//有next的是拦截器\napp.all('*',(req,res,next)=>{\n\n    res.setHeader('Access-Control-Allow-Origin','*');\n    next()\n})\n\n\n\napp.get('/skills',(req,res)=>{\n    const skills=['HTML','CSS','JS','VUE','DOM'];\n    res.send(skills);\n})\n</my示例>","pid":1747,"path":"0-1-154-1152-54-126-136-1747-142","orderNum":4,"bindId":null},{"id":143,"knlg":"day03 06 28:03","pid":142,"path":"0-1-154-1152-54-126-136-1747-142-143","orderNum":1,"bindId":null},{"id":144,"knlg":"表单序列化就是将对象转为\n类似查询字符串格式的字符串","pid":103,"path":"0-1-154-1152-54-103-144","orderNum":3,"bindId":null},{"id":145,"knlg":"$().serialize","pid":103,"path":"0-1-154-1152-54-103-145","orderNum":4,"bindId":null},{"id":146,"knlg":"转为查询字符串","pid":145,"path":"0-1-154-1152-54-103-145-146","orderNum":1,"bindId":null},{"id":147,"knlg":"$().serializeArray()","pid":103,"path":"0-1-154-1152-54-103-147","orderNum":5,"bindId":null},{"id":148,"knlg":"转为对象,$.ajax也可使用","pid":147,"path":"0-1-154-1152-54-103-147-148","orderNum":1,"bindId":null},{"id":149,"knlg":"下载网址\n<my来源>\n<my原生><a href=\"https://releases.jquery.com\" target=\"__blank\">https://releases.jquery.com</a></my原生>\n</my来源>","pid":54,"path":"0-1-154-1152-54-149","orderNum":11,"bindId":null},{"id":151,"knlg":"animate.css","pid":1127,"path":"0-1-154-44-1127-151","orderNum":1,"bindId":null},{"id":152,"knlg":"官网","pid":151,"path":"0-1-154-44-1127-151-152","orderNum":1,"bindId":null},{"id":153,"knlg":"https://animate.style/","pid":152,"path":"0-1-154-44-1127-151-152-153","orderNum":1,"bindId":null},{"id":154,"knlg":"程序","pid":1,"path":"0-1-154","orderNum":2,"bindId":null},{"id":155,"knlg":"DOM <my定义>全称{(Document Object Model)}","pid":154,"path":"0-1-154-155","orderNum":6,"bindId":null},{"id":156,"knlg":"HTML","pid":154,"path":"0-1-154-156","orderNum":7,"bindId":null},{"id":157,"knlg":"nodeJS","pid":154,"path":"0-1-154-157","orderNum":8,"bindId":null},{"id":158,"knlg":"ajax","pid":154,"path":"0-1-154-158","orderNum":9,"bindId":null},{"id":174,"knlg":"VUE <my定义>地位{(国内第一)}","pid":1152,"path":"0-1-154-1152-174","orderNum":2,"bindId":null},{"id":175,"knlg":"命令行工具","pid":174,"path":"0-1-154-1152-174-175","orderNum":1,"bindId":null},{"id":176,"knlg":"安装","pid":175,"path":"0-1-154-1152-174-175-176","orderNum":1,"bindId":null},{"id":177,"knlg":"npm i -g @vue/cli","pid":176,"path":"0-1-154-1152-174-175-176-177","orderNum":1,"bindId":null},{"id":182,"knlg":"面试题","pid":174,"path":"0-1-154-1152-174-182","orderNum":2,"bindId":null},{"id":183,"knlg":"v-show和v-if控制元素显示的方式区别","pid":182,"path":"0-1-154-1152-174-182-183","orderNum":1,"bindId":null},{"id":184,"knlg":"VUE-Day01 05 15:00","pid":183,"path":"0-1-154-1152-174-182-183-184","orderNum":1,"bindId":null},{"id":185,"knlg":"v-for中in和of作用一样","pid":192,"path":"0-1-154-1152-174-192-185","orderNum":1,"bindId":null},{"id":186,"knlg":"v-for原理","pid":192,"path":"0-1-154-1152-174-192-186","orderNum":2,"bindId":null},{"id":187,"knlg":"VUE-Day01 06 25:36","pid":186,"path":"0-1-154-1152-174-192-186-187","orderNum":1,"bindId":null},{"id":188,"knlg":"cdn","pid":154,"path":"0-1-154-188","orderNum":10,"bindId":null},{"id":189,"knlg":"内容分发网络, 可用于引入网络上的包","pid":188,"path":"0-1-154-188-189","orderNum":1,"bindId":null},{"id":190,"knlg":"下载网址","pid":7,"path":"0-1-154-7-190","orderNum":6,"bindId":null},{"id":191,"knlg":"https://bootcss.com/","pid":190,"path":"0-1-154-7-190-191","orderNum":1,"bindId":null},{"id":192,"knlg":"v-for","pid":174,"path":"0-1-154-1152-174-192","orderNum":3,"bindId":null},{"id":193,"knlg":"必须要在元素中添加属性:key","pid":192,"path":"0-1-154-1152-174-192-193","orderNum":3,"bindId":null},{"id":194,"knlg":"便于Vue进行查找更新元素","pid":193,"path":"0-1-154-1152-174-192-193-194","orderNum":1,"bindId":null},{"id":195,"knlg":"@click就相当于v-on:","pid":174,"path":"0-1-154-1152-174-195","orderNum":4,"bindId":null},{"id":196,"knlg":"事件","pid":155,"path":"0-1-154-155-196","orderNum":2,"bindId":null},{"id":197,"knlg":"鼠标位置","pid":1137,"path":"0-1-154-155-196-1137-197","orderNum":1,"bindId":null},{"id":198,"knlg":"e.offsetX","pid":200,"path":"0-1-154-155-196-1137-197-200-198","orderNum":1,"bindId":null},{"id":199,"knlg":"e.offsetY","pid":200,"path":"0-1-154-155-196-1137-197-200-199","orderNum":2,"bindId":null},{"id":200,"knlg":"所在元素中的位置","pid":197,"path":"0-1-154-155-196-1137-197-200","orderNum":1,"bindId":null},{"id":201,"knlg":"事件对象","pid":174,"path":"0-1-154-1152-174-201","orderNum":5,"bindId":null},{"id":202,"knlg":"$event会接住事件对象,放哪里由开发者决定","pid":201,"path":"0-1-154-1152-174-201-202","orderNum":1,"bindId":null},{"id":203,"knlg":"VUE-Day02 01 19:11","pid":201,"path":"0-1-154-1152-174-201-203","orderNum":2,"bindId":null},{"id":204,"knlg":"触发事件的元素对象","pid":1137,"path":"0-1-154-155-196-1137-204","orderNum":2,"bindId":null},{"id":205,"knlg":"e.target","pid":204,"path":"0-1-154-155-196-1137-204-205","orderNum":1,"bindId":null},{"id":206,"knlg":"JS","pid":154,"path":"0-1-154-206","orderNum":11,"bindId":null},{"id":207,"knlg":"Date对象","pid":206,"path":"0-1-154-206-207","orderNum":1,"bindId":null},{"id":208,"knlg":"返回距离1970年的毫秒数\nnew Date().getTime()","pid":207,"path":"0-1-154-206-207-208","orderNum":1,"bindId":null},{"id":209,"knlg":"元素只渲染一次\n防止收到变量修改的影响","pid":174,"path":"0-1-154-1152-174-209","orderNum":6,"bindId":null},{"id":210,"knlg":"v-once","pid":209,"path":"0-1-154-1152-174-209-210","orderNum":1,"bindId":null},{"id":215,"knlg":"v-cloak","pid":174,"path":"0-1-154-1152-174-215","orderNum":7,"bindId":null},{"id":216,"knlg":"解决{{}}在网速不好时显示问题","pid":215,"path":"0-1-154-1152-174-215-216","orderNum":1,"bindId":null},{"id":217,"knlg":"VUE-Day02 02 00:00","pid":215,"path":"0-1-154-1152-174-215-217","orderNum":2,"bindId":null},{"id":218,"knlg":"三目运算符代替if else\n<my示例>\nlet a = 700;\nconsole.log(\n    a < 50 ? '1' :\n        a < 100 ? '2' :\n            a < 200 ? '3' :\n                '4'\n)\n</my示例>","pid":206,"path":"0-1-154-206-218","orderNum":2,"bindId":null},{"id":219,"knlg":"interpolation\n<my切换>插值, 填空</my切换>","pid":70,"path":"0-1-999-70-219","orderNum":2,"bindId":null},{"id":221,"knlg":"/inˌtərpəˈlāSH(ə)n/","pid":219,"path":"0-1-999-70-219-221","orderNum":1,"bindId":null},{"id":222,"knlg":"colon\n<my切换>冒号</my切换>","pid":70,"path":"0-1-999-70-222","orderNum":3,"bindId":null},{"id":224,"knlg":"/ˈkōlən/","pid":222,"path":"0-1-999-70-222-224","orderNum":1,"bindId":null},{"id":225,"knlg":"shorthand\n<my切换>简写</my切换>","pid":70,"path":"0-1-999-70-225","orderNum":4,"bindId":null},{"id":227,"knlg":"v-bind:","pid":174,"path":"0-1-154-1152-174-227","orderNum":8,"bindId":null},{"id":229,"knlg":"WEB第三阶段-VUE-Day02 02 24:13","pid":227,"path":"0-1-154-1152-174-227-229","orderNum":1,"bindId":null},{"id":230,"knlg":"双引号可以跨多行","pid":156,"path":"0-1-154-156-230","orderNum":3,"bindId":null},{"id":231,"knlg":"可省略为:","pid":227,"path":"0-1-154-1152-174-227-231","orderNum":2,"bindId":null},{"id":232,"knlg":"v-model:","pid":174,"path":"0-1-154-1152-174-232","orderNum":9,"bindId":null},{"id":233,"knlg":"双向绑定","pid":232,"path":"0-1-154-1152-174-232-233","orderNum":1,"bindId":null},{"id":234,"knlg":"WEB第三阶段-VUE-Day02 02 36:16","pid":232,"path":"0-1-154-1152-174-232-234","orderNum":2,"bindId":null},{"id":235,"knlg":"简写v-model:value=为v-model=","pid":232,"path":"0-1-154-1152-174-232-235","orderNum":3,"bindId":null},{"id":236,"knlg":"属性中放变量","pid":227,"path":"0-1-154-1152-174-227-236","orderNum":3,"bindId":null},{"id":237,"knlg":"v-pre","pid":174,"path":"0-1-154-1152-174-237","orderNum":10,"bindId":null},{"id":238,"knlg":"阻止Vue编译此元素中的{{}}","pid":237,"path":"0-1-154-1152-174-237-238","orderNum":1,"bindId":null},{"id":239,"knlg":"组件","pid":174,"path":"0-1-154-1152-174-239","orderNum":11,"bindId":null},{"id":240,"knlg":"WEB第三阶段-VUE-Day02 03 00:00","pid":239,"path":"0-1-154-1152-174-239-240","orderNum":1,"bindId":null},{"id":241,"knlg":"要求","pid":239,"path":"0-1-154-1152-174-239-241","orderNum":2,"bindId":null},{"id":242,"knlg":"模板外有唯一父元素","pid":241,"path":"0-1-154-1152-174-239-241-242","orderNum":1,"bindId":null},{"id":243,"knlg":"下面有new Vue ,包含el属性","pid":241,"path":"0-1-154-1152-174-239-241-243","orderNum":2,"bindId":null},{"id":244,"knlg":"加载过程","pid":239,"path":"0-1-154-1152-174-239-244","orderNum":3,"bindId":null},{"id":245,"knlg":"VUE-Day02 04 9:36","pid":244,"path":"0-1-154-1152-174-239-244-245","orderNum":1,"bindId":null},{"id":246,"knlg":"子组件","pid":239,"path":"0-1-154-1152-174-239-246","orderNum":4,"bindId":null},{"id":247,"knlg":"VUE-Day02 04 28:36","pid":246,"path":"0-1-154-1152-174-239-246-247","orderNum":1,"bindId":null},{"id":248,"knlg":"组件生命周期及钩子函数","pid":239,"path":"0-1-154-1152-174-239-248","orderNum":5,"bindId":null},{"id":249,"knlg":"VUE-Day02 05 8:42","pid":248,"path":"0-1-154-1152-174-239-248-249","orderNum":1,"bindId":null},{"id":250,"knlg":"自定义指令","pid":174,"path":"0-1-154-1152-174-250","orderNum":12,"bindId":null},{"id":251,"knlg":"VUE-Day02 06 00:00","pid":250,"path":"0-1-154-1152-174-250-251","orderNum":1,"bindId":null},{"id":253,"knlg":"过滤器","pid":174,"path":"0-1-154-1152-174-253","orderNum":13,"bindId":null},{"id":254,"knlg":"VUE-Day02 06 13:31","pid":253,"path":"0-1-154-1152-174-253-254","orderNum":1,"bindId":null},{"id":255,"knlg":"详解WEB第三阶段-VUE-Day03 01 12:33","pid":248,"path":"0-1-154-1152-174-239-248-255","orderNum":2,"bindId":null},{"id":256,"knlg":"计算属性computed","pid":174,"path":"0-1-154-1152-174-256","orderNum":14,"bindId":null},{"id":257,"knlg":"VUE-Day03 01 23:46","pid":256,"path":"0-1-154-1152-174-256-257","orderNum":1,"bindId":null},{"id":258,"knlg":"特点","pid":256,"path":"0-1-154-1152-174-256-258","orderNum":2,"bindId":null},{"id":259,"knlg":"多次调用也只执行一次\n只有依赖的值改变时才会再执行","pid":258,"path":"0-1-154-1152-174-256-258-259","orderNum":1,"bindId":null},{"id":260,"knlg":"与methods中定义的计算函数不同","pid":259,"path":"0-1-154-1152-174-256-258-259-260","orderNum":1,"bindId":null},{"id":261,"knlg":"通过对象访问","pid":253,"path":"0-1-154-1152-174-253-261","orderNum":2,"bindId":null},{"id":262,"knlg":"$options.filters.filter名(要filter的值)\n<my示例>\n$options.filters.my(n)","pid":261,"path":"0-1-154-1152-174-253-261-262","orderNum":1,"bindId":null},{"id":263,"knlg":"watch","pid":174,"path":"0-1-154-1152-174-263","orderNum":15,"bindId":null},{"id":264,"knlg":"绑定的值一旦变化就进行某项操作","pid":263,"path":"0-1-154-1152-174-263-264","orderNum":1,"bindId":null},{"id":265,"knlg":"VUE-Day03 02 10:12","pid":263,"path":"0-1-154-1152-174-263-265","orderNum":2,"bindId":null},{"id":266,"knlg":"名字和要监视的属性名一样","pid":263,"path":"0-1-154-1152-174-263-266","orderNum":3,"bindId":null},{"id":267,"knlg":"防抖和节流","pid":174,"path":"0-1-154-1152-174-267","orderNum":16,"bindId":null},{"id":268,"knlg":"VUE-Day03 02 13:29","pid":267,"path":"0-1-154-1152-174-267-268","orderNum":1,"bindId":null},{"id":269,"knlg":"设置定时器","pid":267,"path":"0-1-154-1152-174-267-269","orderNum":2,"bindId":null},{"id":270,"knlg":"父组件与子组件通信(局限)","pid":239,"path":"0-1-154-1152-174-239-270","orderNum":6,"bindId":null},{"id":271,"knlg":"VUE-Day03 02 20:32","pid":283,"path":"0-1-154-1152-174-239-270-283-271","orderNum":1,"bindId":null},{"id":272,"knlg":"箭头函数","pid":206,"path":"0-1-154-206-272","orderNum":3,"bindId":null},{"id":273,"knlg":"不支持arguments对象解决办法","pid":272,"path":"0-1-154-206-272-273","orderNum":1,"bindId":null},{"id":274,"knlg":"JAVASCRIPTCORE-Day04 02 25:32","pid":273,"path":"0-1-154-206-272-273-274","orderNum":1,"bindId":null},{"id":276,"knlg":"函数调用父函数this的办法","pid":206,"path":"0-1-154-206-276","orderNum":4,"bindId":null},{"id":277,"knlg":"箭头函数","pid":276,"path":"0-1-154-206-276-277","orderNum":1,"bindId":null},{"id":278,"knlg":"bind","pid":276,"path":"0-1-154-206-276-278","orderNum":2,"bindId":null},{"id":279,"knlg":"JAVASCRIPTCORE-Day04 02 7:39","pid":278,"path":"0-1-154-206-276-278-279","orderNum":1,"bindId":null},{"id":280,"knlg":"bind","pid":206,"path":"0-1-154-206-280","orderNum":5,"bindId":null},{"id":281,"knlg":"JAVASCRIPTCORE-Day03 06 34:54","pid":280,"path":"0-1-154-206-280-281","orderNum":1,"bindId":null},{"id":282,"knlg":"第一个参数会替换函数里的this","pid":280,"path":"0-1-154-206-280-282","orderNum":2,"bindId":null},{"id":283,"knlg":"概念","pid":270,"path":"0-1-154-1152-174-239-270-283","orderNum":1,"bindId":null},{"id":284,"knlg":"详细操作","pid":270,"path":"0-1-154-1152-174-239-270-284","orderNum":2,"bindId":null},{"id":285,"knlg":"VUE-Day03 03 2:34","pid":284,"path":"0-1-154-1152-174-239-270-284-285","orderNum":1,"bindId":null},{"id":286,"knlg":"attr()和prop()的区别","pid":54,"path":"0-1-154-1152-54-286","orderNum":12,"bindId":null},{"id":287,"knlg":"prop方式用的是dom对象设置属性的\n新方式\n<my示例>\n<div>\n        <span id=\"yg\"></span>\n</div>\n<script src=\"./js/jquery-3.6.0.js\"></script>\n<script>\n        $('#yg').prop('ad',8);\n        console.log(yg.ad);\n\n</script>\n</my示例>","pid":286,"path":"0-1-154-1152-54-286-287","orderNum":1,"bindId":null},{"id":288,"knlg":"attr只能设置字符串值,prop可以设置任意值","pid":286,"path":"0-1-154-1152-54-286-288","orderNum":2,"bindId":null},{"id":289,"knlg":"jQuery1.6之前prop不可用","pid":286,"path":"0-1-154-1152-54-286-289","orderNum":3,"bindId":null},{"id":290,"knlg":"改版最终形态","pid":270,"path":"0-1-154-1152-174-239-270-290","orderNum":3,"bindId":null},{"id":291,"knlg":"VUE-Day03 04 16:23","pid":290,"path":"0-1-154-1152-174-239-270-290-291","orderNum":1,"bindId":null},{"id":292,"knlg":"自定义事件中的只要写函数名, 也可加括号\n如果加括号, 则要在括号中加实参,\n但也会覆盖掉传过来的参数\n<my示例>\n@del=\"del(1)","pid":290,"path":"0-1-154-1152-174-239-270-290-292","orderNum":2,"bindId":null},{"id":293,"knlg":"父组件与子组件全通信","pid":239,"path":"0-1-154-1152-174-239-293","orderNum":7,"bindId":null},{"id":294,"knlg":"VUE-Day03 05 11:26","pid":293,"path":"0-1-154-1152-174-239-293-294","orderNum":1,"bindId":null},{"id":295,"knlg":"可设置自动获取焦点指令","pid":250,"path":"0-1-154-1152-174-250-295","orderNum":2,"bindId":null},{"id":296,"knlg":"兄弟组件通信","pid":239,"path":"0-1-154-1152-174-239-296","orderNum":8,"bindId":null},{"id":297,"knlg":"VUE-Day03 06 00:00","pid":296,"path":"0-1-154-1152-174-239-296-297","orderNum":1,"bindId":null},{"id":298,"knlg":"路由图解","pid":174,"path":"0-1-154-1152-174-298","orderNum":17,"bindId":null},{"id":299,"knlg":"VUE-Day04 01 29:00","pid":298,"path":"0-1-154-1152-174-298-299","orderNum":1,"bindId":null},{"id":300,"knlg":"单页面应用的四个优势和\n已经被解决的一个缺点和懒加载","pid":174,"path":"0-1-154-1152-174-300","orderNum":18,"bindId":null},{"id":301,"knlg":"VUE-Day04 01 13:00","pid":300,"path":"0-1-154-1152-174-300-301","orderNum":1,"bindId":null},{"id":302,"knlg":"路由创建步骤","pid":174,"path":"0-1-154-1152-174-302","orderNum":19,"bindId":null},{"id":303,"knlg":"WEB第三阶段-VUE-Day04 02 00:00","pid":302,"path":"0-1-154-1152-174-302-303","orderNum":1,"bindId":null},{"id":304,"knlg":"路由404组件","pid":174,"path":"0-1-154-1152-174-304","orderNum":20,"bindId":null},{"id":305,"knlg":"WEB第三阶段-VUE-Day04 03 21:43","pid":304,"path":"0-1-154-1152-174-304-305","orderNum":1,"bindId":null},{"id":306,"knlg":"路由传参简写","pid":174,"path":"0-1-154-1152-174-306","orderNum":21,"bindId":null},{"id":307,"knlg":"WEB第三阶段-VUE-Day04 03 28:53","pid":306,"path":"0-1-154-1152-174-306-307","orderNum":1,"bindId":null},{"id":308,"knlg":"NotyFound不需要页头的解决办法","pid":174,"path":"0-1-154-1152-174-308","orderNum":22,"bindId":null},{"id":309,"knlg":"WEB第三阶段-VUE-Day04 04 00:00","pid":308,"path":"0-1-154-1152-174-308-309","orderNum":1,"bindId":null},{"id":310,"knlg":"Vue-resource cdn网址\nhttps://cdn.staticfile.org/vue-resource/1.5.1/vue-resource.min.js","pid":311,"path":"0-1-154-1152-174-311-310","orderNum":1,"bindId":null},{"id":311,"knlg":"Vue-resource","pid":174,"path":"0-1-154-1152-174-311","orderNum":23,"bindId":null},{"id":312,"knlg":"使用注意事项\nWEB第三阶段-VUE-Day04 05 07:06","pid":311,"path":"0-1-154-1152-174-311-312","orderNum":2,"bindId":null},{"id":313,"knlg":"axios","pid":174,"path":"0-1-154-1152-174-313","orderNum":24,"bindId":null},{"id":314,"knlg":"WEB第三阶段-VUE-Day04 05 08:47","pid":313,"path":"0-1-154-1152-174-313-314","orderNum":1,"bindId":null},{"id":315,"knlg":"已被axios取代","pid":311,"path":"0-1-154-1152-174-311-315","orderNum":3,"bindId":null},{"id":316,"knlg":"配置基础url","pid":313,"path":"0-1-154-1152-174-313-316","orderNum":2,"bindId":null},{"id":317,"knlg":"WEB第三阶段-VUE-Day04 05 16:07","pid":316,"path":"0-1-154-1152-174-313-316-317","orderNum":1,"bindId":null},{"id":318,"knlg":"和vue配合","pid":313,"path":"0-1-154-1152-174-313-318","orderNum":3,"bindId":null},{"id":319,"knlg":"WEB第三阶段-VUE-Day04 05 17:33","pid":318,"path":"0-1-154-1152-174-313-318-319","orderNum":1,"bindId":null},{"id":321,"knlg":"Vue.use执行原理","pid":174,"path":"0-1-154-1152-174-321","orderNum":25,"bindId":null},{"id":322,"knlg":"WEB第三阶段-VUE-Day04 05 20:42","pid":321,"path":"0-1-154-1152-174-321-322","orderNum":1,"bindId":null},{"id":323,"knlg":"拦截器","pid":313,"path":"0-1-154-1152-174-313-323","orderNum":4,"bindId":null},{"id":324,"knlg":"WEB第三阶段-VUE-Day04 05 27:03","pid":323,"path":"0-1-154-1152-174-313-323-324","orderNum":1,"bindId":null},{"id":325,"knlg":"注意返回结果","pid":323,"path":"0-1-154-1152-174-313-323-325","orderNum":2,"bindId":null},{"id":326,"knlg":"元素禁用的样式","pid":7,"path":"0-1-154-7-326","orderNum":7,"bindId":null},{"id":327,"knlg":"class=\"disabled\"","pid":326,"path":"0-1-154-7-326-327","orderNum":1,"bindId":null},{"id":328,"knlg":"table/表格","pid":156,"path":"0-1-154-156-328","orderNum":4,"bindId":null},{"id":329,"knlg":"注意\n要写上tbody和thead","pid":328,"path":"0-1-154-156-328-329","orderNum":1,"bindId":null},{"id":330,"knlg":"表格","pid":7,"path":"0-1-154-7-330","orderNum":8,"bindId":null},{"id":331,"knlg":"表头","pid":330,"path":"0-1-154-7-330-331","orderNum":1,"bindId":null},{"id":332,"knlg":"thead-light","pid":331,"path":"0-1-154-7-330-331-332","orderNum":1,"bindId":null},{"id":333,"knlg":"内边距","pid":7,"path":"0-1-154-7-333","orderNum":9,"bindId":null},{"id":334,"knlg":"p-1\n0.25rem","pid":333,"path":"0-1-154-7-333-334","orderNum":1,"bindId":null},{"id":335,"knlg":"p-2\n0.5rem","pid":333,"path":"0-1-154-7-333-335","orderNum":2,"bindId":null},{"id":336,"knlg":"p-3\n1rem","pid":333,"path":"0-1-154-7-333-336","orderNum":3,"bindId":null},{"id":337,"knlg":"p-3\n1.5rem","pid":333,"path":"0-1-154-7-333-337","orderNum":4,"bindId":null},{"id":338,"knlg":"p-3\n3rem","pid":333,"path":"0-1-154-7-333-338","orderNum":5,"bindId":null},{"id":340,"knlg":"居中\nm-auto","pid":7,"path":"0-1-154-7-340","orderNum":10,"bindId":null},{"id":343,"knlg":"地址带#的原因","pid":174,"path":"0-1-154-1152-174-343","orderNum":26,"bindId":null},{"id":344,"knlg":"带#就说明是客户端地址,浏览\n器不会向服务器端发请求","pid":343,"path":"0-1-154-1152-174-343-344","orderNum":1,"bindId":null},{"id":345,"knlg":"列表","pid":7,"path":"0-1-154-7-345","orderNum":11,"bindId":null},{"id":346,"knlg":"去掉标记(同时左内边距也被去除)","pid":345,"path":"0-1-154-7-345-346","orderNum":1,"bindId":null},{"id":347,"knlg":"list-unstyled","pid":346,"path":"0-1-154-7-345-346-347","orderNum":1,"bindId":null},{"id":349,"knlg":"列表","pid":44,"path":"0-1-154-44-349","orderNum":3,"bindId":null},{"id":350,"knlg":"li的display属性默认是list-item","pid":349,"path":"0-1-154-44-349-350","orderNum":1,"bindId":null},{"id":351,"knlg":"浮动清除","pid":7,"path":"0-1-154-7-351","orderNum":12,"bindId":null},{"id":352,"knlg":"写在父元素上","pid":351,"path":"0-1-154-7-351-352","orderNum":1,"bindId":null},{"id":353,"knlg":"style 中加scope 目的是写的css样式只在当前文件有效","pid":354,"path":"0-1-154-1152-174-354-353","orderNum":1,"bindId":null},{"id":354,"knlg":"脚手架","pid":174,"path":"0-1-154-1152-174-354","orderNum":27,"bindId":null},{"id":355,"knlg":"全局组件放置位置","pid":354,"path":"0-1-154-1152-174-354-355","orderNum":2,"bindId":null},{"id":356,"knlg":"components文件夹","pid":355,"path":"0-1-154-1152-174-354-355-356","orderNum":1,"bindId":null},{"id":357,"knlg":"引入axios","pid":354,"path":"0-1-154-1152-174-354-357","orderNum":3,"bindId":null},{"id":358,"knlg":"VUE-Day05 03 14:49","pid":357,"path":"0-1-154-1152-174-354-357-358","orderNum":1,"bindId":null},{"id":359,"knlg":".vue文件中 按住alt再折叠可以折叠全部","pid":354,"path":"0-1-154-1152-174-354-359","orderNum":4,"bindId":null},{"id":360,"knlg":"懒加载","pid":174,"path":"0-1-154-1152-174-360","orderNum":28,"bindId":null},{"id":361,"knlg":"注释不能删,是为了写打包后的js文件名","pid":360,"path":"0-1-154-1152-174-360-361","orderNum":1,"bindId":null},{"id":362,"knlg":"生成编译后的文件","pid":174,"path":"0-1-154-1152-174-362","orderNum":29,"bindId":null},{"id":363,"knlg":"VUE-Day05 05 11:53","pid":362,"path":"0-1-154-1152-174-362-363","orderNum":1,"bindId":null},{"id":364,"knlg":"生成后的文件详解","pid":362,"path":"0-1-154-1152-174-362-364","orderNum":2,"bindId":null},{"id":365,"knlg":"VUE-Day05 05 14:53","pid":364,"path":"0-1-154-1152-174-362-364-365","orderNum":1,"bindId":null},{"id":366,"knlg":"彻底的懒加载方式","pid":360,"path":"0-1-154-1152-174-360-366","orderNum":2,"bindId":null},{"id":367,"knlg":"VUE-Day05 05 26:52","pid":366,"path":"0-1-154-1152-174-360-366-367","orderNum":1,"bindId":null},{"id":368,"knlg":"vscode 代码提示插件","pid":174,"path":"0-1-154-1152-174-368","orderNum":30,"bindId":null},{"id":369,"knlg":"Vetur","pid":368,"path":"0-1-154-1152-174-368-369","orderNum":1,"bindId":null},{"id":370,"knlg":"$(function) 也相当于html页面中的script标签","pid":123,"path":"0-1-154-1152-54-123-370","orderNum":2,"bindId":null},{"id":371,"knlg":"组件生命周期在实际项目中的应用","pid":239,"path":"0-1-154-1152-174-239-371","orderNum":9,"bindId":null},{"id":372,"knlg":"VUE-Day05 06 12:57","pid":371,"path":"0-1-154-1152-174-239-371-372","orderNum":1,"bindId":null},{"id":373,"knlg":"钩子函数","pid":174,"path":"0-1-154-1152-174-373","orderNum":31,"bindId":null},{"id":374,"knlg":"就算什么都不写,它们也会被执行","pid":373,"path":"0-1-154-1152-174-373-374","orderNum":1,"bindId":null},{"id":375,"knlg":"mounted中进行ajax操作,dom元素已加载完毕\n能用dom操作","pid":371,"path":"0-1-154-1152-174-239-371-375","orderNum":2,"bindId":null},{"id":376,"knlg":"为什么会出现can not read property \nof undefined 但没有错误","pid":354,"path":"0-1-154-1152-174-354-376","orderNum":5,"bindId":null},{"id":377,"knlg":"因为请求还没完成数据就绑定了,\n后面请求成功也就没事了","pid":376,"path":"0-1-154-1152-174-354-376-377","orderNum":1,"bindId":null},{"id":378,"knlg":"可以用先设置空字符串等办法","pid":377,"path":"0-1-154-1152-174-354-376-377-378","orderNum":1,"bindId":null},{"id":379,"knlg":"其中的param参数相当于查询字符串","pid":313,"path":"0-1-154-1152-174-313-379","orderNum":5,"bindId":null},{"id":380,"knlg":"内连接时的笛卡尔积及解决办法","pid":35,"path":"0-1-154-35-380","orderNum":2,"bindId":null},{"id":381,"knlg":"JAVASCRIPTBASIC01-Day01 03 15:31","pid":380,"path":"0-1-154-35-380-381","orderNum":1,"bindId":null},{"id":382,"knlg":"SELF JOIN","pid":35,"path":"0-1-154-35-382","orderNum":3,"bindId":null},{"id":383,"knlg":"可用inner join 或left join\n<my示例>\nSELECT * FROM `know` AS a1 INNER JOIN `know` AS a2 ON a2.pid=a1.id WHERE a1.pid=1 GROUP BY a1.id\n</my示例>","pid":382,"path":"0-1-154-35-382-383","orderNum":1,"bindId":null},{"id":384,"knlg":"Promise对象","pid":1602,"path":"0-1-154-206-1602-384","orderNum":6,"bindId":null},{"id":385,"knlg":"new Promise中的函数会在准备完成后执行,\nthen中的函数会看情况执行","pid":389,"path":"0-1-154-206-1602-384-389-385","orderNum":1,"bindId":null},{"id":386,"knlg":"如果resolve,则执行then中的函数,\nresolve中传入的参数会传递到then中\n<my示例>\nnew Promise((resolve, reject) => {\n        setTimeout(() => {\n                resolve(88888)\n        }, 1000)\n})\n        .then(res => {\n                console.log(res)\n        })\n</my示例>","pid":389,"path":"0-1-154-206-1602-384-389-386","orderNum":2,"bindId":null},{"id":387,"knlg":"then中必须要放回调函数, 函数中返回一个\nPromise对象, 不然异步无法做到排队执行\n<my示例>\n//这里会正常执行\nPromise.resolve()\n    .then((arr) => {\n        return new Promise((open, err) => {\n            setTimeout(() => {\n                console.log(111111111)\n                open()\n            }, 3000)\n        })\n    })\n\n    .then((arr) => {\n        return new Promise((open, err) => {\n            setTimeout(() => {\n                console.log(2222222222)\n                open()\n            }, 2000)\n        })\n\n    })\n\n    .then(() => {\n        return new Promise((open, err) => {\n            setTimeout(() => {\n                console.log(333333333)\n                open()\n            }, 1000)\n        })\n    })\n\n//这里不会正常执行, 输出结果\n//333333333\n//2222222222\n//111111111\nPromise.resolve()\n.then((arr) => {\n    new Promise((open, err) => {\n        setTimeout(() => {\n            console.log(111111111)\n            open()\n        }, 3000)\n    })\n})\n\n.then((arr) => {\n    new Promise((open, err) => {\n        setTimeout(() => {\n            console.log(2222222222)\n            open()\n        }, 2000)\n    })\n\n})\n\n.then(() => {\n    new Promise((open, err) => {\n        setTimeout(() => {\n            console.log(333333333)\n            open()\n        }, 1000)\n    })\n})\n\n//这里也不会正常执行\nPromise.resolve()\n.then(new Promise((open, err) => {\n        setTimeout(() => {\n                console.log(111111111)\n                open()\n        }, 1000)\n}))\n\n.then(new Promise((open, err) => {\n        setTimeout(() => {\n                console.log(2222222222)\n                open()\n        }, 1000)\n}))\n\n.then(new Promise((open, err) => {\n        setTimeout(() => {\n                console.log(333333333)\n                open()\n        }, 1000)\n}))\n\n</my示例>","pid":389,"path":"0-1-154-206-1602-384-389-387","orderNum":3,"bindId":null},{"id":388,"knlg":"如果reject,则执行catch中的函数,\nreject中传入的参数会传递到catch中\n<my示例>\nnew Promise((resolve, reject) => {\n        setTimeout(() => {\n                reject(88888)\n        }, 1000)\n})\n        .catch(err => {\n                console.log(err)\n        })\n</my示例>","pid":389,"path":"0-1-154-206-1602-384-389-388","orderNum":4,"bindId":null},{"id":389,"knlg":"排队执行 <my定义>固定格式{(new Promise((resolve,reject)=>{}).then(res=>{}).catch(err=>{}))}\n<my示例>\nfunction check1() {\n        return new Promise((resolve, reject) => {\n                setTimeout(() => {\n                        if(Math.random()>0.3){\n                                console.log('下一步');\n                                resolve();\n                        }else{\n                                reject('停止');\n                        }\n                }, 1000);\n        })\n}\ncheck1()\n        .then(() => check1())\n        .then(() => check1())\n        .then(() => check1())\n        .then(() => check1())\n        .then(() => check1())\n        .catch(()=>console.log('停止'))\n</my示例>","pid":384,"path":"0-1-154-206-1602-384-389","orderNum":1,"bindId":null},{"id":390,"knlg":"并发执行\n<my示例>\nlet p1 = new Promise((open, err) => {\n  setTimeout(() => {\n    console.log(7777777777);\n    open();\n  }, 1000);\n})\nlet p2 = new Promise((open, err) => {\n  setTimeout(() => {\n    console.log(555555555);\n    open();\n  }, 1000);\n})\nlet p3 = new Promise((open, err) => {\n  setTimeout(() => {\n    console.log(66666666);\n    let arr=[6,5]\n    open(arr);\n\n  }, 1000);\n})\nPromise.all([p1,p2,p3]).then(function(values){\n  console.log(values)\n})\n</my示例>","pid":384,"path":"0-1-154-206-1602-384-390","orderNum":2,"bindId":null},{"id":391,"knlg":"Promise.all中放入Promise类型的数组,\n在之后的.then中处理执行结果","pid":390,"path":"0-1-154-206-1602-384-390-391","orderNum":1,"bindId":null},{"id":392,"knlg":"绑定类","pid":174,"path":"0-1-154-1152-174-392","orderNum":32,"bindId":null},{"id":393,"knlg":"class和:class可同时存在","pid":392,"path":"0-1-154-1152-174-392-393","orderNum":1,"bindId":null},{"id":395,"knlg":"VUE-Day06 05 23:30","pid":371,"path":"0-1-154-1152-174-239-371-395","orderNum":3,"bindId":null},{"id":397,"knlg":"返回上一个光标位置","pid":919,"path":"0-1-154-1150-919-397","orderNum":1,"bindId":null},{"id":398,"knlg":"alt+←","pid":397,"path":"0-1-154-1150-919-397-398","orderNum":1,"bindId":null},{"id":399,"knlg":"style属性绑定","pid":174,"path":"0-1-154-1152-174-399","orderNum":33,"bindId":null},{"id":400,"knlg":"VUE-Day06 06 4:58","pid":399,"path":"0-1-154-1152-174-399-400","orderNum":1,"bindId":null},{"id":403,"knlg":"class属性绑定","pid":174,"path":"0-1-154-1152-174-403","orderNum":34,"bindId":null},{"id":404,"knlg":"VUE-Day06 06 19:58","pid":403,"path":"0-1-154-1152-174-403-404","orderNum":1,"bindId":null},{"id":405,"knlg":"以对象形式,可设置条件表达式","pid":403,"path":"0-1-154-1152-174-403-405","orderNum":2,"bindId":null},{"id":406,"knlg":"鼠标悬停移走事件\nhover","pid":174,"path":"0-1-154-1152-174-406","orderNum":35,"bindId":null},{"id":407,"knlg":"VUE-Day06 06 25:44  26:46","pid":406,"path":"0-1-154-1152-174-406-407","orderNum":1,"bindId":null},{"id":408,"knlg":"组件","pid":7,"path":"0-1-154-7-408","orderNum":13,"bindId":null},{"id":409,"knlg":"下拉菜单<my示例><div class=\"container\">\n    <div class=\"dropdown\">\n        <button class=\"btn btn-success dropdown-toggle\" data-toggle=\"dropdown\">下拉菜单</button>\n        <div class=\"dropdown-menu\">\n            <a href=\"\" class=\"dropdown-item\">11111</a>\n            <a href=\"\" class=\"dropdown-item\">22222</a>\n            <a href=\"\" class=\"dropdown-item\">33333</a>\n        </div>\n    </div>\n</div></my示例>","pid":408,"path":"0-1-154-7-408-409","orderNum":1,"bindId":null},{"id":411,"knlg":"信息提示框<my示例><div class=\"container\">\n    <div class=\"alert alert-warning\">\n        <span>信息提示框</span>\n        <span data-dismiss=\"alert\" class=\"close\">&times;</span>\n    </div>\n</div></my示例>","pid":408,"path":"0-1-154-7-408-411","orderNum":2,"bindId":null},{"id":412,"knlg":"导航栏\n\n<my示例>\n<div class=\"container\">\n    <ul class=\"nav\">\n        <li class=\"nav-item\"><a class=\"nav-link\" href=\"\">导航1</a></li>\n        <li class=\"nav-item\"><a class=\"nav-link\" href=\"\">导航2</a></li>\n        <li class=\"nav-item\"><a class=\"nav-link\" href=\"\">导航3</a></li>\n    </ul>\n</div>\n</my示例>","pid":408,"path":"0-1-154-7-408-412","orderNum":3,"bindId":null},{"id":414,"knlg":"选项卡效果<my示例><div class=\"container\">\n    <ul class=\"nav nav-tabs\">\n        <li class=\"nav-item\"><a data-toggle=\"tab\" class=\"nav-link active\" href=\"#d1\">导航1</a></li>\n        <li class=\"nav-item\" ><a data-toggle=\"tab\" class=\"nav-link\" href=\"#d2\">导航2</a></li>\n        <li class=\"nav-item\" ><a data-toggle=\"tab\" class=\"nav-link\" href=\"#d3\">导航3</a></li>\n    </ul>\n    <div class=\"tab-content\">\n        <div id=\"d1\" class=\"tab-pane active\">内容1</div>\n        <div id=\"d2\" class=\"tab-pane\">内容2</div>\n        <div id=\"d3\" class=\"tab-pane\">内容3</div>\n    </div>\n</div></my示例>","pid":408,"path":"0-1-154-7-408-414","orderNum":4,"bindId":null},{"id":415,"knlg":"胶囊选项卡<my示例><div class=\"container\">\n    <ul class=\"nav nav-pills\">\n        <li class=\"nav-item\"><a data-toggle=\"pill\" class=\"nav-link active\" href=\"#d1\">导航1</a></li>\n        <li class=\"nav-item\" ><a data-toggle=\"pill\" class=\"nav-link\" href=\"#d2\">导航2</a></li>\n        <li class=\"nav-item\" ><a data-toggle=\"pill\" class=\"nav-link\" href=\"#d3\">导航3</a></li>\n    </ul>\n    <div class=\"tab-content\">\n        <div id=\"d1\" class=\"tab-pane active\">内容1</div>\n        <div id=\"d2\" class=\"tab-pane\">内容2</div>\n        <div id=\"d3\" class=\"tab-pane\">内容3</div>\n    </div>\n</div></my示例>","pid":408,"path":"0-1-154-7-408-415","orderNum":5,"bindId":null},{"id":417,"knlg":"设置保镖\n<my示例>\n    sliding: false,\n    toShow: 0,\n  };\n},\n\nbeforeCreate() {},\ncreated() {\n  Object.defineProperties(this, {\n    _toShow: {\n      value: 4,\n      writable: true,\n    },\n    toShow: {\n      get() {\n        return this._toShow;\n      },\n      set(value) {\n        value < 0 && (value = this.imgs.length - 1);\n        value == this.imgs.length && (value = 0);\n        this._toShow = value;\n      },\n    },\n</my示例>","pid":206,"path":"0-1-154-206-417","orderNum":7,"bindId":null},{"id":418,"knlg":"媒体<my示例><div class=\"container\">\n    <div class=\"media\">\n        <img src=\"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fp3.itc.cn%2Fimages01%2F20210114%2Fcf6c60564d45421ba6fa97ceaa483c9f.jpeg&refer=http%3A%2F%2Fp3.itc.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1647221514&t=9768ac8071e6c43dff309513a8eb427b\" alt=\"\">\n        <div class=\"media-body\">\n            <h5>ukgytuf</h5>\n            <p>tyfygtfkyt</p>\n        </div>\n    </div>\n</div></my示例>","pid":408,"path":"0-1-154-7-408-418","orderNum":6,"bindId":null},{"id":419,"knlg":"点击折叠效果<my示例><div class=\"container\">\n    <button data-target=\"#d1\" data-toggle=\"collapse\" class=\"btn btn-success\">折叠按钮</button>\n    <div id=\"d1\" class=\"collapse\">\n        这是一段文本\n    </div>\n    \n</div></my示例>","pid":408,"path":"0-1-154-7-408-419","orderNum":7,"bindId":null},{"id":420,"knlg":"软件","pid":1,"path":"0-1-420","orderNum":3,"bindId":null},{"id":421,"knlg":"截屏","pid":420,"path":"0-1-420-421","orderNum":1,"bindId":null},{"id":422,"knlg":"fscapture","pid":421,"path":"0-1-420-421-422","orderNum":1,"bindId":null},{"id":423,"knlg":"data-target中也可以加类实现多个控制<my示例><div class=\"container\">\n    <button type=\"button\" class=\"btn\" data-toggle=\"collapse\" data-target=\"#box1\">按钮1</button>\n    <button type=\"button\" class=\"btn\" data-toggle=\"collapse\" data-target=\"#box2\">按钮2</button>\n    <button type=\"button\" class=\"btn\" data-target=\".mybox\" data-toggle=\"collapse\" >按钮3</button>\n    <div id=\"box1\" class=\"collapse mybox\">内容1</div>\n    <div id=\"box2\" class=\"collapse mybox\">内容2</div>\n</div></my示例>","pid":408,"path":"0-1-154-7-408-423","orderNum":8,"bindId":null},{"id":424,"knlg":"data-toggle事实上是addclass 及removeClass\ndata-target是要控制的元素","pid":408,"path":"0-1-154-7-408-424","orderNum":9,"bindId":null},{"id":425,"knlg":"响应式折叠导航<my示例><!DOCTYPE html>\n<html lang=\"en\">\n\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Document</title>\n        <link rel=\"stylesheet\" href=\"css/bootstrap.css\">\n        <script src=\"js/jquery.min.js\"></script>\n        <script src=\"js/popper.min.js\"></script>\n        <script src=\"js/bootstrap.min.js\"></script>\n\n        <style>\n            .xz-navbar{background-color: #F5F5F5;}\n            .xz-search{width: 50%;}\n            .xz-search input{\n                background: url(http://www.codeboy.com:9999/img/header/search.png) no-repeat right;\n                background-size: auto 100%;\n\n                width: 100%;\n                outline: 0;\n            }\n            @media  (max-width:992px) {\n                .xz-search{\n                    width: 100%;\n                    margin: 15px 0;\n                }\n            }\n        </style>\n    </head>\n\n    <body>\n        <div class=\"xz-navbar\">\n            <div class=\"container\">\n                <div class=\"navbar navbar-expand-lg navbar-light\">\n\n                    <a href=\"\">\n                        <img src=\"http://www.codeboy.com:9999/img/header/logo.png\">\n                    </a>\n                    \n                    <button class=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#xzmenu\">\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n\n\n                    <div class=\"collapse navbar-collapse justify-content-between ml-xl-5\" id=\"xzmenu\">\n                        <div class=\"xz-search\">\n                            <input type=\"\" name=\"\" id=\"\" value=\"\" />\n                        </div>\n\n                        <ul class=\"nav\">\n                            <a href=\"\" class=\"nav-link\"><img src=\"http://www.codeboy.com:9999/img/header/care.png\"\n                                    alt=\"\"></a>\n                            <a href=\"\" class=\"nav-link\"><img src=\"http://www.codeboy.com:9999/img/header/order.png\"\n                                    alt=\"\"></a>\n                            <a href=\"\" class=\"nav-link\"><img src=\"http://www.codeboy.com:9999/img/header/shop_car.png\"\n                                    alt=\"\"></a>\n                            <a href=\"\" class=\"nav-link\">注册</a>\n                            <a href=\"\" class=\"nav-link\">登录</a>\n                        </ul>\n                    </div>\n\n\n                </div>\n            </div>\n\n        </div>\n    </body>\n\n</html></my示例>","pid":408,"path":"0-1-154-7-408-425","orderNum":10,"bindId":null},{"id":426,"knlg":"格式化代码\nctrl+k","pid":11,"path":"0-1-154-1150-10-11-426","orderNum":2,"bindId":null},{"id":428,"knlg":"卡片布局<my示例><div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-header\">\n            <h4>TEDU</h4>\n        </div>\n        <div class=\"card-body\">\n            <p>urdshg</p>\n            <p>urdshg</p>\n            <p>urdshg</p>\n        </div>\n        <div class=\"card-footer\">\n            <p>tgyf</p>\n        </div>\n    </div>\n</div></my示例>","pid":408,"path":"0-1-154-7-408-428","orderNum":11,"bindId":null},{"id":429,"knlg":"可以出现多个card-body或card-header或\ncard-footer, 也可以没有","pid":428,"path":"0-1-154-7-408-428-429","orderNum":1,"bindId":null},{"id":430,"knlg":"card-img-top设置图片样式","pid":428,"path":"0-1-154-7-408-428-430","orderNum":2,"bindId":null},{"id":431,"knlg":"响应式折叠导航2<my示例><!DOCTYPE html>\n<html lang=\"en\">\n\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Document</title>\n        <link rel=\"stylesheet\" href=\"css/bootstrap.css\">\n        <script src=\"js/jquery.min.js\"></script>\n        <script src=\"js/popper.min.js\"></script>\n        <script src=\"js/bootstrap.min.js\"></script>\n\n        <style>\n            .xz-navbar {\n                background-color: #F5F5F5;\n            }\n\n            .xz-search {\n                width: 50%;\n            }\n\n            .xz-search input {\n                background: url(http://www.codeboy.com:9999/img/header/search.png) no-repeat right;\n                background-size: auto 100%;\n\n                width: 100%;\n                outline: 0;\n            }\n\n            @media (max-width:992px) {\n                .xz-search {\n                    width: 100%;\n                    margin: 15px 0;\n                }\n            }\n        </style>\n    </head>\n\n    <body>\n        <div class=\"xz-navbar\">\n            <div class=\"container\">\n                <div class=\"navbar navbar-expand-lg navbar-light\">\n\n                    <a class=\"navbar-brand\" href=\"\">\n                        <img src=\"http://www.codeboy.com:9999/img/header/logo.png\">\n                    </a>\n\n                    <button class=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#xzmenu\">\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n\n\n                    <div class=\"collapse navbar-collapse justify-content-between ml-xl-5\" id=\"xzmenu\">\n\n\n                        <ul class=\"navbar-nav\">\n                            <li class=\"nav-item\"><a href=\"\" class=\"nav-link\"><img\n                                        src=\"http://www.codeboy.com:9999/img/header/care.png\" alt=\"\"></a></li>\n                            <li class=\"nav-item\"><a href=\"\" class=\"nav-link\"><img\n                                        src=\"http://www.codeboy.com:9999/img/header/order.png\" alt=\"\"></a></li>\n                            <li class=\"nav-item\"><a href=\"\" class=\"nav-link\"><img\n                                        src=\"http://www.codeboy.com:9999/img/header/shop_car.png\" alt=\"\"></a></li>\n                            <li class=\"nav-item\"><a href=\"\" class=\"nav-link\">注册</a></li>\n                            <li class=\"nav-item\"><a href=\"\" class=\"nav-link\">登录</a></li>\n                        </ul>\n                    </div>\n\n\n                </div>\n            </div>\n\n        </div>\n    </body>\n\n</html></my示例>","pid":408,"path":"0-1-154-7-408-431","orderNum":12,"bindId":null},{"id":432,"knlg":"分页导航栏<my示例><div class=\"container\">\n    <ul class=\"list-group\">\n        <li class=\"list-group-item list-group-item-primary list-group-item-action\">老夫子</li>\n        <li class=\"list-group-item list-group-item-primary list-group-item-action\">老夫子</li>\n        <li class=\"list-group-item list-group-item-primary list-group-item-action\">老夫子</li>\n        <li class=\"list-group-item list-group-item-primary list-group-item-action\">老夫子</li>\n    </ul>\n    \n    <ol class=\"pagination\">\n        <li class=\"page-item\"><a href=\"\" class=\"page-link\">上一页</a></li>\n        <li class=\"page-item\"><a href=\"\" class=\"page-link\">1</a></li>\n        <li class=\"page-item\"><a href=\"\" class=\"page-link\">2</a></li>\n        <li class=\"page-item\"><a href=\"\" class=\"page-link\">3</a></li>\n        <li class=\"page-item\"><a href=\"\" class=\"page-link\">3</a></li>\n        <li class=\"page-item\"><a href=\"\" class=\"page-link\">下一页</a></li>\n    </ol>\n    \n</div></my示例>","pid":408,"path":"0-1-154-7-408-432","orderNum":13,"bindId":null},{"id":434,"knlg":"list -goup-item-action作用是宽度100%","pid":432,"path":"0-1-154-7-408-432-434","orderNum":1,"bindId":null},{"id":491,"knlg":"定制下载","pid":7,"path":"0-1-154-7-491","orderNum":14,"bindId":null},{"id":493,"knlg":"https://v3.bootcss.com/customize/","pid":491,"path":"0-1-154-7-491-493","orderNum":1,"bindId":null},{"id":494,"knlg":"sass/scss","pid":154,"path":"0-1-154-494","orderNum":12,"bindId":null},{"id":495,"knlg":"安装","pid":494,"path":"0-1-154-494-495","orderNum":1,"bindId":null},{"id":496,"knlg":"cmd中\nnpm i -g sass","pid":495,"path":"0-1-154-494-495-496","orderNum":1,"bindId":null},{"id":497,"knlg":"- 如果上面的方法因为网的问题没有安装成功，可以使用淘宝镜像\n  - 打开`cmd`,输入`npm install -g cnpm --registry=https://registry.npm.taobao.org`\n- 再使用cnpm安装sass` cnpm install sass`","pid":495,"path":"0-1-154-494-495-497","orderNum":2,"bindId":null},{"id":498,"knlg":"也可以用ruby安装, 但比较麻烦,\n安装方法见笔记","pid":495,"path":"0-1-154-494-495-498","orderNum":3,"bindId":null},{"id":499,"knlg":"监听","pid":494,"path":"0-1-154-494-499","orderNum":2,"bindId":null},{"id":500,"knlg":"需要创建css和scss目录\nsass -w scss:css","pid":499,"path":"0-1-154-494-499-500","orderNum":1,"bindId":null},{"id":501,"knlg":"强制更新","pid":494,"path":"0-1-154-494-501","orderNum":3,"bindId":null},{"id":502,"knlg":"按一下ctrl+c","pid":501,"path":"0-1-154-494-501-502","orderNum":1,"bindId":null},{"id":503,"knlg":"不允许有中文路径","pid":494,"path":"0-1-154-494-503","orderNum":4,"bindId":null},{"id":504,"knlg":"注释","pid":494,"path":"0-1-154-494-504","orderNum":5,"bindId":null},{"id":505,"knlg":"想让注释跑到css文件中","pid":504,"path":"0-1-154-494-504-505","orderNum":1,"bindId":null},{"id":506,"knlg":"不想让注释跑到css文件中","pid":504,"path":"0-1-154-494-504-506","orderNum":2,"bindId":null},{"id":507,"knlg":"//注释","pid":506,"path":"0-1-154-494-504-506-507","orderNum":1,"bindId":null},{"id":508,"knlg":"/*注释*/","pid":505,"path":"0-1-154-494-504-505-508","orderNum":1,"bindId":null},{"id":509,"knlg":"嵌套","pid":494,"path":"0-1-154-494-509","orderNum":6,"bindId":null},{"id":510,"knlg":"示例\n<my示例>\nscss:\n\ndiv {\n    width: 200px;\n    p {\n        height: 200px;\n        span {\n            background-color: blue;\n        }\n    }\n}\n\ncss:\n\ndiv {\n  width: 200px;\n}\ndiv p {\n  height: 200px;\n}\ndiv p span {\n  background-color: blue;\n}","pid":509,"path":"0-1-154-494-509-510","orderNum":1,"bindId":null},{"id":511,"knlg":"变量","pid":494,"path":"0-1-154-494-511","orderNum":7,"bindId":null},{"id":512,"knlg":"$开头\n<my示例>\n$boxW:200px;\n\ndiv{\n    width: $boxW;\n}","pid":511,"path":"0-1-154-494-511-512","orderNum":1,"bindId":null},{"id":514,"knlg":"变量也有作用域\n以大括号为作用域","pid":511,"path":"0-1-154-494-511-514","orderNum":2,"bindId":null},{"id":515,"knlg":"面包屑导航\n<my示例>\n    <style>\n        .breadcrumb-item+ .breadcrumb-item::before{\n            content: \">\";\n        }\n    </style>\n</head>\n\n<body>\n    <div class=\"container\">\n        <ul class=\"breadcrumb\">\n            <li class=\"breadcrumb-item\"><a href=\"\">sedawf</a></li>\n            <li class=\"breadcrumb-item\"><a href=\"\">sedawf</a></li>\n            <li class=\"breadcrumb-item\"><a href=\"\">sedawf</a></li>\n            <li class=\"breadcrumb-item\"><a href=\"\">sedawf</a></li>\n        </ul>\n    </div>\n</body>\n</my示例>","pid":408,"path":"0-1-154-7-408-515","orderNum":14,"bindId":null},{"id":516,"knlg":"轮播图\n<my示例>\n<div class=\"container\">\n    <div id=\"banner\" class=\"carousel slide\" data-ride=\"carousel\">\n        <div class=\"carousel-inner\">\n            <div class=\"carousel-item active\">\n                <img src=\"http://www.codeboy.com:9999/img/index/banner1.png\" class=\"w-100\" alt=\"\">\n            </div>\n            <div class=\"carousel-item\">\n                <img src=\"http://www.codeboy.com:9999/img/index/banner2.png\" class=\"w-100\" alt=\"\">\n            </div>\n            <div class=\"carousel-item\">\n                <img src=\"http://www.codeboy.com:9999/img/index/banner3.png\" class=\"w-100\" alt=\"\">\n            </div>\n            <div class=\"carousel-item\">\n                <img src=\"http://www.codeboy.com:9999/img/index/banner4.png\" class=\"w-100\" alt=\"\">\n            </div>\n            <a href=\"#banner\" class=\"carousel-control-prev\" data-slide=\"prev\">\n                <span class=\"carousel-control-prev-icon\"></span>\n            </a>\n            <a href=\"#banner\" class=\"carousel-control-next\" data-slide=\"next\">\n                <span class=\"carousel-control-next-icon\"></span>\n            </a>\n\n            <ul class=\"carousel-indicators\">\n                <li data-target=\"#banner\" data-slide-to=\"0\" class=\"active\"></li>\n                <li data-target=\"#banner\" data-slide-to=\"1\" class=\"\"></li>\n                <li data-target=\"#banner\" data-slide-to=\"2\" class=\"\"></li>\n                <li data-target=\"#banner\" data-slide-to=\"3\" class=\"\"></li>\n            </ul>\n        </div>\n    </div>\n\n</div>\n</my示例>","pid":408,"path":"0-1-154-7-408-516","orderNum":15,"bindId":null},{"id":517,"knlg":"模态框\n<my示例>\n<div class=\"container\">\n    <button class=\"btn btn-warning\" data-toggle=\"modal\" data-target=\"#mt\">打开模态框</button>\n    <div id=\"mt\" class=\"modal\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h5>请输入内容</h5>\n                    <span data-dismidd=\"modal\" class=\"close\"></span>\n                </div>\n                <div class=\"modal-body\">\n                    <input type=\"text\">\n                </div>\n                <div class=\"modal-footer\"><button class=\"btn btn-success\">确认</button>\n                    <button class=\"btn btn-danger\" data-dismiss=\"modal\">取消</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n</my示例>","pid":408,"path":"0-1-154-7-408-517","orderNum":16,"bindId":null},{"id":518,"knlg":"进度条\n<my示例>\n<div class=\"container\">\n    <div class=\"progress\">\n        <div class=\"progress-bar w-25 bg-success\"></div>\n        <div class=\"progress-bar w-75 bg-warning progress-bar-striped progress-bar-animated\"></div>\n        <div class=\"progress-bar w-75 bg-danger progress-bar-striped progress-bar-animated\"></div>\n        \n    </div>\n</div>\n</my示例>","pid":408,"path":"0-1-154-7-408-518","orderNum":17,"bindId":null},{"id":519,"knlg":"进度条也会自动按照比例分配,而不是只根据父元素的大小","pid":518,"path":"0-1-154-7-408-518-519","orderNum":1,"bindId":null},{"id":520,"knlg":"手风琴效果\n<my示例>\n<div class=\"container\">\n    <div id=\"sfq\">\n        <div class=\"card\"><button class=\"btn btn-success\" data-toggle=\"collapse\" data-target=\"#a\"></button>\n            <div class=\"collapse\" id=\"a\" data-parent=\"#sfq\">111111111</div>\n        </div>\n        <div class=\"card\"><button class=\"btn btn-success\" data-toggle=\"collapse\" data-target=\"#b\"></button>\n            <div class=\"collapse\" id=\"b\" data-parent=\"#sfq\">111111111</div>\n        </div>\n        <div class=\"card\"><button class=\"btn btn-success\" data-toggle=\"collapse\" data-target=\"#c\"></button>\n            <div class=\"collapse\" id=\"c\" data-parent=\"#sfq\">111111111</div>\n        </div>\n    </div>\n</div>\n</my示例>","pid":408,"path":"0-1-154-7-408-520","orderNum":18,"bindId":null},{"id":593,"knlg":"必须在每个promise中调用open\n不然Promise.all(arr).then(func)中的函数不会执行","pid":390,"path":"0-1-154-206-1602-384-390-593","orderNum":2,"bindId":null},{"id":594,"knlg":"比较对象中的元素是否相等","pid":54,"path":"0-1-154-1152-54-594","orderNum":13,"bindId":null},{"id":595,"knlg":"$a.is($b)","pid":594,"path":"0-1-154-1152-54-594-595","orderNum":1,"bindId":null},{"id":601,"knlg":"建筑","pid":1,"path":"0-1-601","orderNum":4,"bindId":null},{"id":602,"knlg":"渣土车出入口要有视频监控","pid":601,"path":"0-1-601-602","orderNum":1,"bindId":null},{"id":603,"knlg":"渣土处置手续","pid":601,"path":"0-1-601-603","orderNum":2,"bindId":null},{"id":604,"knlg":"信号司索工","pid":601,"path":"0-1-601-604","orderNum":3,"bindId":null},{"id":605,"knlg":"指挥吊装,不能离开吊装现场","pid":604,"path":"0-1-601-604-605","orderNum":1,"bindId":null},{"id":606,"knlg":"施工项目经理需要到岗","pid":601,"path":"0-1-601-606","orderNum":4,"bindId":null},{"id":607,"knlg":"只有他才能进入现场","pid":604,"path":"0-1-601-604-607","orderNum":2,"bindId":null},{"id":608,"knlg":"吊机进来以后要到质监站备案","pid":601,"path":"0-1-601-608","orderNum":5,"bindId":null},{"id":609,"knlg":"要查看特殊工种的证","pid":601,"path":"0-1-601-609","orderNum":6,"bindId":null},{"id":610,"knlg":"至少要有证","pid":609,"path":"0-1-601-609-610","orderNum":1,"bindId":null},{"id":611,"knlg":"最好是本地的建设部门发的证","pid":610,"path":"0-1-601-609-610-611","orderNum":1,"bindId":null},{"id":612,"knlg":"智慧快速路","pid":601,"path":"0-1-601-612","orderNum":7,"bindId":null},{"id":613,"knlg":"有限作业空间","pid":601,"path":"0-1-601-613","orderNum":8,"bindId":null},{"id":614,"knlg":"桥梁吊杆要型式检验\n且要进行出厂检验","pid":601,"path":"0-1-601-614","orderNum":9,"bindId":null},{"id":615,"knlg":"桥梁吊杆张拉要旁站","pid":601,"path":"0-1-601-615","orderNum":10,"bindId":null},{"id":616,"knlg":"桥梁有监控单位","pid":601,"path":"0-1-601-616","orderNum":11,"bindId":null},{"id":617,"knlg":"分包必须按照合同\n有业主同意","pid":601,"path":"0-1-601-617","orderNum":12,"bindId":null},{"id":618,"knlg":"工程不能分包给个人","pid":601,"path":"0-1-601-618","orderNum":13,"bindId":null},{"id":619,"knlg":"主体结构不允许分包\n钢结构允许分包","pid":618,"path":"0-1-601-618-619","orderNum":1,"bindId":null},{"id":636,"knlg":"$.ajax","pid":54,"path":"0-1-154-1152-54-636","orderNum":14,"bindId":null},{"id":637,"knlg":"then","pid":636,"path":"0-1-154-1152-54-636-637","orderNum":1,"bindId":null},{"id":638,"knlg":"发送多个请求最好用这个,\nthen中返回的值会在下一个then中得到\n<my示例>\n$.ajax({\n    url: `/know/v1/searchKnlg/${0}`,\n    method: 'get',\n    type: 'json',\n\n})\n    .then((arr) => {\n        // arr就是返回的响应\n        return 'aaa'\n    })\n    .then((a) => {\n        console.log(a);\n        //a就是'aaa'\n    })\n</my示例>","pid":637,"path":"0-1-154-1152-54-636-637-638","orderNum":1,"bindId":null},{"id":639,"knlg":"done","pid":636,"path":"0-1-154-1152-54-636-639","orderNum":2,"bindId":null},{"id":640,"knlg":"只能接收到第一次请求得到的响应\n<my示例>\n$.ajax({\n    url: `/know/v1/searchKnlg/${0}`,\n    method: 'get',\n    type: 'json',\n\n})\n    .done((arr) => {\n        // arr就是返回的响应\n        return $.ajax({\n            url: `/know/v1/searchKnlg/${1}`,\n            method: 'get',\n            type: 'json',\n\n        })\n    })\n    .done((a) => {\n        console.log(a);\n        //a还是前面的arr\n    })\n</my示例>","pid":639,"path":"0-1-154-1152-54-636-639-640","orderNum":1,"bindId":null},{"id":648,"knlg":"中文unicode编码范围","pid":61,"path":"0-1-154-61-648","orderNum":4,"bindId":null},{"id":649,"knlg":"\\u4E00-\\u9FA5","pid":648,"path":"0-1-154-61-648-649","orderNum":1,"bindId":null},{"id":650,"knlg":"作用域","pid":494,"path":"0-1-154-494-650","orderNum":8,"bindId":null},{"id":652,"knlg":"以大括号为作用域","pid":650,"path":"0-1-154-494-650-652","orderNum":1,"bindId":null},{"id":653,"knlg":"伪类及伪元素用法\n<my示例>\ndiv{\n    &:hover{\n        background-color: black;\n    }\n    span{\n        &::after{\n            background-color: aqua;\n        }\n    }\n}\n//变成\n\ndiv:hover {\n  background-color: black;\n}\ndiv span::after {\n  background-color: aqua;\n}\n</my示例>","pid":494,"path":"0-1-154-494-653","orderNum":9,"bindId":null},{"id":654,"knlg":"变量插值, 可在选择器中使用变量","pid":494,"path":"0-1-154-494-654","orderNum":10,"bindId":null},{"id":655,"knlg":"#{变量名}\n<my示例>\nscss\n\ndiv{\n    .my-#{$button}{\n        background-color: red;\n    }\n}\n\ncss\n\ndiv .my-button {\n  background-color: red;\n}\n</my示例>","pid":654,"path":"0-1-154-494-654-655","orderNum":1,"bindId":null},{"id":656,"knlg":"可以运算","pid":494,"path":"0-1-154-494-656","orderNum":11,"bindId":null},{"id":657,"knlg":"避免运算(css中显示运算符)\n<my示例>\n//这样不对\n$a:5;\n$b:6;\n\ndiv{\n    .my-bu{\n        border-radius: $a / $b;\n    }\n}\n\n//正确做法\n$a:5;\n$b:6;\n\ndiv{\n    .my-bu{\n        border-radius: #{$a} / #{$b};\n    }\n}\n</my示例>","pid":494,"path":"0-1-154-494-657","orderNum":12,"bindId":null},{"id":658,"knlg":"混合器\n类似与宏\n<my示例>\n@mixin btnStyle($w,$h) {\n    width: $w;\n    height: $h;\n    border-radius: 3px;\n    color: wheat;\n    background-color: gray;\n}\n\n.btn1{@include btnStyle(100px,40px)}\n</my示例>","pid":494,"path":"0-1-154-494-658","orderNum":13,"bindId":null},{"id":659,"knlg":"最好在分支的最后返回keyword, 如示例, \n不然可能出现undefined","pid":68,"path":"0-1-154-61-67-68-659","orderNum":2,"bindId":null},{"id":661,"knlg":"组查询时要用\nif(groupName!==undefined){\n    ...\n}\n不然会出现查询到的''无法被处理","pid":68,"path":"0-1-154-61-67-68-661","orderNum":3,"bindId":null},{"id":664,"knlg":"每个变量可以传入带空格的值\n<my示例>\n@mixin btnStyle($m) {\n    margin: $m;\n}\n\n.btn1{@include btnStyle(0 auto)}","pid":511,"path":"0-1-154-494-511-664","orderNum":3,"bindId":null},{"id":665,"knlg":"继承样式\n<my示例>\n.d1 {\n    width: 100px;\n}\n.d2 {\n    @extend .d1;\n    height: 200px;\n}\n\n变成\n\n.d1, .d2 {\n  width: 100px;\n}\n\n.d2 {\n  height: 200px;\n}\n</my示例>","pid":494,"path":"0-1-154-494-665","orderNum":14,"bindId":null},{"id":667,"knlg":"选择直接子元素\n<my示例>\n.d1 {\n    width: 100px;\n}\n.d2 {\n    &>.d1{\n        height: 200px;\n    }\n}\n</my示例>","pid":494,"path":"0-1-154-494-667","orderNum":15,"bindId":null},{"id":668,"knlg":"继承占位符%..,不会被编译,\n避免样式污染\n<my示例>\n%style {\n    width: 100px;\n}\n.d2 {\n    @extend %style;\n    height: 200px;\n}\n\n变成\n\n.d2 {\n  width: 100px;\n}\n\n.d2 {\n  height: 200px;\n}\n</my示例>","pid":665,"path":"0-1-154-494-665-668","orderNum":1,"bindId":null},{"id":669,"knlg":"条件判断\n类似宏\n<my示例>\n$a: 16px;\n.d1 {\n    @if $a>10 {\n        p {\n            color: red;\n        }\n    } @else if $a>5{\n        p {\n            color: black;\n        }\n    } @else{\n        p {\n            color:aqua;\n        }\n    }\n}\n</my示例>","pid":494,"path":"0-1-154-494-669","orderNum":16,"bindId":null},{"id":670,"knlg":"比较运算符","pid":494,"path":"0-1-154-494-670","orderNum":17,"bindId":null},{"id":671,"knlg":"带单位的值可以和不带单位的值比较\n<my示例>\n$a: 13rem;\n@if $a>10 and $a<15 {\n    p {\n        color: red;\n    }\n}","pid":670,"path":"0-1-154-494-670-671","orderNum":1,"bindId":null},{"id":672,"knlg":"多条件判断and or\n<my示例>\n$a: 16px;\n.d1 {\n    @if $a>10 and $a<15{\n        p {\n            color: red;\n        }\n    } @else if $a>5{\n        p {\n            color: black;\n        }\n    } @else{\n        p {\n            color:aqua;\n        }\n    }\n}","pid":669,"path":"0-1-154-494-669-672","orderNum":1,"bindId":null},{"id":673,"knlg":"但单位不同会报错","pid":670,"path":"0-1-154-494-670-673","orderNum":2,"bindId":null},{"id":674,"knlg":"循环\n<my示例>\n@for $i from 1 to 10{\n    ul>li:nth-child(#{$i}){\n        background-color: unquote('#'+(222 * $i));\n    }\n}\n</my示例>","pid":494,"path":"0-1-154-494-674","orderNum":18,"bindId":null},{"id":675,"knlg":"","pid":1,"path":"0-1-675","orderNum":5,"bindId":null},{"id":676,"knlg":"抹灰","pid":601,"path":"0-1-601-676","orderNum":14,"bindId":null},{"id":677,"knlg":"加气混凝土、混凝土墙板要喷浆","pid":676,"path":"0-1-601-676-677","orderNum":1,"bindId":null},{"id":685,"knlg":"比较运算","pid":206,"path":"0-1-154-206-685","orderNum":8,"bindId":null},{"id":686,"knlg":"字符串和字符串比较是一种模式","pid":685,"path":"0-1-154-206-685-686","orderNum":1,"bindId":null},{"id":687,"knlg":"其它类型(除了null)和数字比较会转换成数字","pid":685,"path":"0-1-154-206-685-687","orderNum":2,"bindId":null},{"id":689,"knlg":"yug\n<my示例>\n<div class=\"col-3 text-center\">\n    <img src=\"img/footer/icon1.png\" alt=\"\">\n    <p>品质保障</p>\n</div>\n<div class=\"col-3 text-center\">\n    <img src=\"img/footer/icon1.png\" alt=\"\">\n    <p>品质保障</p>\n</div>\nui高洪波\n</my示例>\n<my切换>yugvyhgv</my切换>\n<my来源>u教育规划衣服v</my来源>","pid":762,"path":"0-1-675-762-689","orderNum":1,"bindId":null},{"id":730,"knlg":" <<my定义>label{(标签)}><input type=\"<my定义>checkbox{(多选框)}\">fdbgh</label>","pid":675,"path":"0-1-675-730","orderNum":1,"bindId":null},{"id":731,"knlg":"预定义函数\n($...都可省略)\n<my示例>\n.d1{\n    content: ceil($number: 3.5px);\n}\n也可写成\n.d1{\n    content: ceil(3.5px);\n}\n</my示例>","pid":494,"path":"0-1-154-494-731","orderNum":19,"bindId":null},{"id":732,"knlg":"去除字符串引号","pid":731,"path":"0-1-154-494-731-732","orderNum":1,"bindId":null},{"id":733,"knlg":"unquote\n<my示例>\n.d1{\n    content: unquote($string: \"ewds\");\n}\n</my示例>","pid":732,"path":"0-1-154-494-731-732-733","orderNum":1,"bindId":null},{"id":734,"knlg":"加引号","pid":731,"path":"0-1-154-494-731-734","orderNum":2,"bindId":null},{"id":735,"knlg":"quote\n<my示例>\n.d1{\n    content: quote($string: ewds);\n}\n</my示例>","pid":734,"path":"0-1-154-494-731-734-735","orderNum":1,"bindId":null},{"id":736,"knlg":"四舍五入","pid":731,"path":"0-1-154-494-731-736","orderNum":3,"bindId":null},{"id":737,"knlg":"round\n<my示例>\n.d13{\n    content: round(1.7);\n}","pid":736,"path":"0-1-154-494-731-736-737","orderNum":1,"bindId":null},{"id":738,"knlg":"向上取整","pid":731,"path":"0-1-154-494-731-738","orderNum":4,"bindId":null},{"id":739,"knlg":"ceil\n<my示例>\n.d1{\n    content: ceil($number: 3.5px);\n}","pid":738,"path":"0-1-154-494-731-738-739","orderNum":1,"bindId":null},{"id":740,"knlg":"向下取整","pid":731,"path":"0-1-154-494-731-740","orderNum":5,"bindId":null},{"id":741,"knlg":"floor\n<my示例>\n.d2{\n    content: floor($number: 3.5px);\n}","pid":740,"path":"0-1-154-494-731-740-741","orderNum":1,"bindId":null},{"id":742,"knlg":"元素个数","pid":731,"path":"0-1-154-494-731-742","orderNum":6,"bindId":null},{"id":743,"knlg":"length\n<my示例>\n.d7{\n    content: length($list: 5px 2px);\n}","pid":742,"path":"0-1-154-494-731-742-743","orderNum":1,"bindId":null},{"id":744,"knlg":"随机整数","pid":731,"path":"0-1-154-494-731-744","orderNum":7,"bindId":null},{"id":745,"knlg":"random\n<my示例>\n.d12{\n    content: random($limit: 10);\n}\n</my示例>","pid":744,"path":"0-1-154-494-731-744-745","orderNum":1,"bindId":null},{"id":746,"knlg":"颜色转为rgba","pid":731,"path":"0-1-154-494-731-746","orderNum":8,"bindId":null},{"id":747,"knlg":"rgba\n<my示例>\ndiv{\n    color:rgba(6,2,100,1);\n}\n转为\ndiv{\n    color:#060264\n}\n</my示例>","pid":746,"path":"0-1-154-494-731-746-747","orderNum":1,"bindId":null},{"id":748,"knlg":"自定义函数\n<my示例>\n@function ag($w){\n    @return 8+$w;\n}\n\n.d13{\n    color: ag(7);\n}\n</my示例>","pid":494,"path":"0-1-154-494-748","orderNum":20,"bindId":null},{"id":750,"knlg":"还可以用来设置默认值\n<my示例>\nscss\n\n@function mg($m...) {\n    @if (length($m) >0) {\n        @return $m;\n    }@else{\n        @return (3px 3px 5px 7px)\n    }\n}\n\n.d13 {\n    margin: mg(7px);\n}\n\ncss\n\n.d13 {\n  margin: 7px;\n}\n</my示例>","pid":748,"path":"0-1-154-494-748-750","orderNum":1,"bindId":null},{"id":751,"knlg":"传入不定个数参数用...","pid":748,"path":"0-1-154-494-748-751","orderNum":2,"bindId":null},{"id":752,"knlg":"不能返回mixin, 只能返回一个值","pid":748,"path":"0-1-154-494-748-752","orderNum":3,"bindId":null},{"id":753,"knlg":"文字不自动换行","pid":44,"path":"0-1-154-44-753","orderNum":4,"bindId":null},{"id":754,"knlg":"white-space:nowrap;","pid":753,"path":"0-1-154-44-753-754","orderNum":1,"bindId":null},{"id":755,"knlg":"文字超出部分变成...","pid":44,"path":"0-1-154-44-755","orderNum":5,"bindId":null},{"id":756,"knlg":"white-space: nowrap;\ntext-overflow:ellipsis;\noverflow: hidden;","pid":755,"path":"0-1-154-44-755-756","orderNum":1,"bindId":null},{"id":757,"knlg":"去掉按钮点击后的边框","pid":7,"path":"0-1-154-7-757","orderNum":15,"bindId":null},{"id":758,"knlg":".btn:focus,.btn.focus{\n    box-shadow: 0 0 !important;\n}","pid":757,"path":"0-1-154-7-757-758","orderNum":1,"bindId":null},{"id":759,"knlg":"toString方法能够让对象在需要时自动转化成string\n如在模板字符串插值中","pid":206,"path":"0-1-154-206-759","orderNum":9,"bindId":null},{"id":762,"knlg":"","pid":675,"path":"0-1-675-762","orderNum":2,"bindId":null},{"id":763,"knlg":"","pid":730,"path":"0-1-675-730-763","orderNum":1,"bindId":null},{"id":774,"knlg":"已完成效果","pid":44,"path":"0-1-154-44-774","orderNum":6,"bindId":null},{"id":775,"knlg":"滚动图","pid":774,"path":"0-1-154-44-774-775","orderNum":1,"bindId":null},{"id":776,"knlg":"通过设置连续播放的动画\n<my示例>\n        @keyframes scroll {\n            to {\n                transform: translateX(-50%);\n            }\n        }\n\n        .d1 {\n            width: 2000px;\n            animation: scroll 5s linear infinite;\n        }\n        .d1>img{\n            width: 12.5%;\n            cursor: pointer;\n        }\n\n        .d0 {\n            width: 1000px;\n            border: solid;\n            overflow: hidden;\n            /* border: solid; */\n        }\n        .d0:hover>.d1{\n            animation-play-state: paused;\n        }\n    </style>\n</head>\n\n<body>\n    <div class=\"d0\">\n        <div class=\"d1\"><img src=\"http://www.codeboy.com:9999/img/product_detail/product_detail_2.png\" alt=\"\"><img\n                src=\"http://www.codeboy.com:9999/img/product_detail/product_detail_3.png\" alt=\"\"><img\n                src=\"http://www.codeboy.com:9999/img/product_detail/product_detail_2.png\" alt=\"\"><img src=\"http://www.codeboy.com:9999/img/product_detail/product_detail_3.png\" alt=\"\"><img src=\"http://www.codeboy.com:9999/img/product_detail/product_detail_2.png\" alt=\"\"><img src=\"http://www.codeboy.com:9999/img/product_detail/product_detail_3.png\" alt=\"\"><img src=\"http://www.codeboy.com:9999/img/product_detail/product_detail_2.png\" alt=\"\"><img src=\"http://www.codeboy.com:9999/img/product_detail/product_detail_3.png\" alt=\"\">\n        </div>\n    </div>\n</my示例>","pid":775,"path":"0-1-154-44-774-775-776","orderNum":1,"bindId":null},{"id":779,"knlg":"<my定义>\n列表组\n{(长度默认100%, \n且列表项自带内边距)}\n<my示例>\n<div class=\"container\">\n        <ul class=\"list-group\">\n                <li class=\"list-group-item\">fd</li>\n                <li class=\"list-group-item\">rsfgt</li>\n                <li class=\"list-group-item\">yghgy</li>\n                <li class=\"list-group-item\">rtg</li>\n                <li class=\"list-group-item\">hyg</li>\n        </ul>\n</div>\n</my示例>","pid":345,"path":"0-1-154-7-345-779","orderNum":2,"bindId":null},{"id":780,"knlg":"百度 正则表达式在线测试工具\n菜鸟工具","pid":61,"path":"0-1-154-61-780","orderNum":5,"bindId":null},{"id":781,"knlg":"str.search也可使用正则表达式\n返回的是索引下标","pid":61,"path":"0-1-154-61-781","orderNum":6,"bindId":null},{"id":782,"knlg":"数字\\d","pid":61,"path":"0-1-154-61-782","orderNum":7,"bindId":null},{"id":783,"knlg":"reg.test\n验证是否能匹配","pid":61,"path":"0-1-154-61-783","orderNum":8,"bindId":null},{"id":784,"knlg":"存在或不存在\n?\n<my示例>\n1?代表有1或没1\n</my示例>","pid":61,"path":"0-1-154-61-784","orderNum":9,"bindId":null},{"id":785,"knlg":"注意","pid":61,"path":"0-1-154-61-785","orderNum":10,"bindId":null},{"id":786,"knlg":"常规字符串中写正则表达式必须\n考虑转义字符\\的问题","pid":785,"path":"0-1-154-61-785-786","orderNum":1,"bindId":null},{"id":787,"knlg":"reg.exec\n获取匹配到的字符","pid":61,"path":"0-1-154-61-787","orderNum":11,"bindId":null},{"id":788,"knlg":"全局匹配要用循环\n<my示例>\nlet jo=/[\\u4e00-\\u9fa5]/g;\nlet str='yug更应该yghy百'\nlet result;\ndo{\n        result=jo.exec(str);\n        if(result!=null){\n                console.log(`在位置${result.index}中找到${result[0]}`)\n        }\n}while(result!=null)\n</my示例>","pid":787,"path":"0-1-154-61-787-788","orderNum":1,"bindId":null},{"id":789,"knlg":"数组其实都是关联数组,\n正确写法都是arr[字符串]\n<my示例>\narr['0']\n</my示例>","pid":206,"path":"0-1-154-206-789","orderNum":10,"bindId":null},{"id":790,"knlg":"https://c.runoob.com/front-end/854/","pid":780,"path":"0-1-154-61-780-790","orderNum":1,"bindId":null},{"id":791,"knlg":"正则表达式只要自己会写,\n有些表达式可以直接用网上的,\n如菜鸟工具","pid":61,"path":"0-1-154-61-791","orderNum":12,"bindId":null},{"id":794,"knlg":"","pid":762,"path":"0-1-675-762-794","orderNum":2,"bindId":null},{"id":795,"knlg":"<my示例>\n<my原生>\n<div id=\"fhj\" class=\"afgh\"></div>\n<style>\n   .afgh{\n           width:20px;height:20px;background:red;\n\n    }\n</style>\n<script>\nfhj.innerHTML=\"tyfgtyd\"\n</script>\n</my原生>\n何必久困就好比\n</my示例>","pid":762,"path":"0-1-675-762-795","orderNum":3,"bindId":null},{"id":796,"knlg":"","pid":794,"path":"0-1-675-762-794-796","orderNum":1,"bindId":null},{"id":815,"knlg":"选择器","pid":44,"path":"0-1-154-44-815","orderNum":7,"bindId":null},{"id":816,"knlg":"选择不可用的","pid":815,"path":"0-1-154-44-815-816","orderNum":1,"bindId":null},{"id":817,"knlg":":disabled或[disable]都可以","pid":816,"path":"0-1-154-44-815-816-817","orderNum":1,"bindId":null},{"id":818,"knlg":"作用域门\n<my切换>scope</my切换>","pid":206,"path":"0-1-154-206-818","orderNum":11,"bindId":null},{"id":819,"knlg":"查看方式","pid":818,"path":"0-1-154-206-818-819","orderNum":1,"bindId":null},{"id":820,"knlg":"浏览器中对象的\nscopes属性","pid":819,"path":"0-1-154-206-818-819-820","orderNum":1,"bindId":null},{"id":821,"knlg":"<my定义>闭包{(函数作用域门中的变量中的属于函数作用域的,非全局作用域的变量)}\n<my切换>英文closure</my切换>\n<my示例>\n<script>\n        (function(){\n                var a=8;\n                window.fun1=function(){\n                        a++;\n                        console.log(a);\n                }\n                window.fun2=function(){\n                        a--;\n                        console.log(a);                                \n                }\n        })()\n\n        fun1();\n        fun2();\n\n</script>\n</my示例>","pid":206,"path":"0-1-154-206-821","orderNum":12,"bindId":null},{"id":822,"knlg":"函数声明(书写)时,函数中使用的变量\n(非本函数的)会被放到作用域门\n<my切换>\n一般浏览器在扫描时会创建函数\n</my切换>","pid":818,"path":"0-1-154-206-818-822","orderNum":2,"bindId":null},{"id":824,"knlg":"作用","pid":821,"path":"0-1-154-206-821-824","orderNum":1,"bindId":null},{"id":825,"knlg":"函数用到的变量,都放在函数身上,不能被其它函数访问,\n保证了函数在任何地方都能正常使用","pid":824,"path":"0-1-154-206-821-824-825","orderNum":1,"bindId":null},{"id":826,"knlg":"作用域门中必然有window","pid":818,"path":"0-1-154-206-818-826","orderNum":3,"bindId":null},{"id":827,"knlg":"打印","pid":206,"path":"0-1-154-206-827","orderNum":13,"bindId":null},{"id":828,"knlg":"<my定义>console.dir{(意思是console.direct)}打印的是对象结构, 只能接受一个参数","pid":827,"path":"0-1-154-206-827-828","orderNum":1,"bindId":null},{"id":829,"knlg":"匿名函数自调用,\n必须在前面加; 否则会报错\n<my示例>\nvar a\n;(function(){})\n\n或\n\nvar a;\n(function(){})\n</my示例>","pid":206,"path":"0-1-154-206-829","orderNum":14,"bindId":null},{"id":831,"knlg":"类比: 函数被动技能","pid":821,"path":"0-1-154-206-821-831","orderNum":2,"bindId":null},{"id":832,"knlg":"柯里化写法(面试题 实际只有框架会用)\n多参数函数转为多个单参数函数\n<my示例>\n<script>\n        function ke_add(a){\n                return function(b){\n                        return function(c){\n                                return a+b+c;\n                        }\n                }\n        }\n        let sum=ke_add(1)(2)(3);\n        console.log(sum);\n</script>\n</my示例>","pid":821,"path":"0-1-154-206-821-832","orderNum":3,"bindId":null},{"id":833,"knlg":"构造函数","pid":206,"path":"0-1-154-206-833","orderNum":15,"bindId":null},{"id":834,"knlg":"调用函数就会返回新对象,\n不一定要new创造","pid":833,"path":"0-1-154-206-833-834","orderNum":1,"bindId":null},{"id":835,"knlg":"new的作用","pid":206,"path":"0-1-154-206-835","orderNum":16,"bindId":null},{"id":836,"knlg":"创建空对象, 分配继承, 返回对象\n<my示例>\n类似于:\nlet this={};\nthis.__proto__=<my定义>this.constructor{(即构造函数)}().prototype;\nreturn this;\n</my示例>","pid":835,"path":"0-1-154-206-835-836","orderNum":1,"bindId":null},{"id":837,"knlg":"<my定义>原型链{(__proto__链)}","pid":206,"path":"0-1-154-206-837","orderNum":17,"bindId":null},{"id":838,"knlg":"360浏览器看的最舒服会直接显示\n__proto__而不是[[Prototype]]: Object","pid":837,"path":"0-1-154-206-837-838","orderNum":1,"bindId":null},{"id":840,"knlg":"对象中没有的属性会到<my定义>原型链{(__proto__链)}\n中查找","pid":837,"path":"0-1-154-206-837-840","orderNum":2,"bindId":null},{"id":841,"knlg":"<my原生>\n<a class=\"btn1 btn-slide-black\" href=\"javascript:;\"><span>为他选购</span></a>\n<a class=\"btn1 btn-slide-black\" href=\"javascript:;\"><span>为他选购</span></a>\n<style>\na{\n    text-decoration: none;\n    color: black;\n}\n.btn1{\n    padding:5px;\n}\n.btn-slide-white, .btn-slide-black {\n    display: inline-block;\n    box-sizing: border-box;\n    text-align: center;\n    overflow: hidden;\n    position: relative;\n    line-height: 1;\n}\n\n.btn-slide-white span,.btn-slide-black span {\n    position: relative;\n    z-index: 100;\n    transition: .3s;\n}\n\n.btn-slide-white::after,.btn-slide-black::after{\n    position: absolute;\n    left: 0;\n    top: 100%;\n    width: 100%;\n    height: 100%;\n    transition: .3s;\n    display: block;\n    content: '';\n}\n\n.btn-slide-white:hover::after,.btn-slide-black:hover::after {\n    top:0;\n}\n\n.btn-slide-black {\n    border-bottom: 1px solid black;\n}\n\n.btn-slide-white {\n    border-bottom: 1px solid white;\n}\n\n.btn-slide-white::after {\n    background-color: white;\n}\n.btn-slide-black::after {\n    background-color: black;\n}\n\n.btn-slide-white:hover span {\n    color: black !important;\n}\n.btn-slide-black:hover span {\n    color: white !important;\n}\n\n.btn-slide-white span {\n    color: white !important;\n}\n.btn-slide-black span {\n    color: black !important;\n}\n</style>\n</my原生>","pid":762,"path":"0-1-675-762-841","orderNum":4,"bindId":null},{"id":843,"knlg":"百度图片<my原生><a href=\"https://www.baidu.com/\" target=\"__blank\">百度</a><input></my原生>\n<my示例>\n<my原生>\n<img src=\"https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png\">\n\n</my原生>\n</my示例>","pid":762,"path":"0-1-675-762-843","orderNum":5,"bindId":null},{"id":844,"knlg":"电脑操作","pid":1,"path":"0-1-844","orderNum":6,"bindId":null},{"id":845,"knlg":"关闭休眠模式\n<my切换>\n管理员身份运行cmd\n敲入Powercfg -H OFF\n</my切换>","pid":844,"path":"0-1-844-845","orderNum":1,"bindId":null},{"id":846,"knlg":"看图纸步骤","pid":601,"path":"0-1-601-846","orderNum":15,"bindId":null},{"id":847,"knlg":"先看材料，再看工序","pid":846,"path":"0-1-601-846-847","orderNum":1,"bindId":null},{"id":848,"knlg":"<my定义>方法体{(函数体)}","pid":206,"path":"0-1-154-206-848","orderNum":18,"bindId":null},{"id":849,"knlg":"作用\n<my切换>\n把对象使用的共享方法统一\n存放到一个对象中\n</my切换>\n<my示例>\nfunction A(){\n        this.__proto__=prototype;\n}\n\nlet prototype={\n        a(){\n                console.log(1)\n        },\n        b(){\n                console.log(2)\n        },\n        c(){\n                console.log(3)\n        }\n}\nconsole.log(new A())\n</my示例>","pid":837,"path":"0-1-154-206-837-849","orderNum":3,"bindId":null},{"id":850,"knlg":"js引擎自带","pid":837,"path":"0-1-154-206-837-850","orderNum":4,"bindId":null},{"id":851,"knlg":"console.log打印的是美化后的结果","pid":827,"path":"0-1-154-206-827-851","orderNum":2,"bindId":null},{"id":853,"knlg":"arguments对象","pid":206,"path":"0-1-154-206-853","orderNum":19,"bindId":null},{"id":854,"knlg":"存放函数传入的参数","pid":853,"path":"0-1-154-206-853-854","orderNum":1,"bindId":null},{"id":856,"knlg":"类数组/伪数组对象","pid":206,"path":"0-1-154-206-856","orderNum":20,"bindId":null},{"id":857,"knlg":"类似数组,但原型对象不是Array","pid":856,"path":"0-1-154-206-856-857","orderNum":1,"bindId":null},{"id":858,"knlg":"Object.create\n<my切换>创建对象同时指定原型</my切换>\n<my示例>\nlet a={\n    a:2,\n    b:3\n}\n\nlet b=Object.create(a);\nconsole.dir(b);\n相当于\nlet a={\n    a:2,\n    b:3\n}\n\nlet b={};\nObject.setPrototypeOf(b,a);\nconsole.dir(b);\n</my示例>","pid":206,"path":"0-1-154-206-858","orderNum":21,"bindId":null},{"id":859,"knlg":"行内块会根据行高改变大小,而行内元素不会","pid":44,"path":"0-1-154-44-859","orderNum":8,"bindId":null},{"id":860,"knlg":"fade in\n<my切换>淡入</my切换>","pid":70,"path":"0-1-999-70-860","orderNum":5,"bindId":null},{"id":861,"knlg":"fade out\n<my切换>淡出</my切换>","pid":70,"path":"0-1-999-70-861","orderNum":6,"bindId":null},{"id":862,"knlg":"类型","pid":206,"path":"0-1-154-206-862","orderNum":22,"bindId":null},{"id":863,"knlg":"新增","pid":868,"path":"0-1-154-206-862-868-863","orderNum":1,"bindId":null},{"id":864,"knlg":"bigInt","pid":863,"path":"0-1-154-206-862-868-863-864","orderNum":1,"bindId":null},{"id":865,"knlg":"symbol","pid":863,"path":"0-1-154-206-862-868-863-865","orderNum":2,"bindId":null},{"id":866,"knlg":"大整型","pid":864,"path":"0-1-154-206-862-868-863-864-866","orderNum":1,"bindId":null},{"id":867,"knlg":"对象唯一的属性名","pid":865,"path":"0-1-154-206-862-868-863-865-867","orderNum":1,"bindId":null},{"id":868,"knlg":"七种基础类型","pid":862,"path":"0-1-154-206-862-868","orderNum":1,"bindId":null},{"id":869,"knlg":"引用类型","pid":862,"path":"0-1-154-206-862-869","orderNum":2,"bindId":null},{"id":870,"knlg":"原有","pid":868,"path":"0-1-154-206-862-868-870","orderNum":2,"bindId":null},{"id":871,"knlg":"存放在栈内存中\n变量赋值是值传递,","pid":868,"path":"0-1-154-206-862-868-871","orderNum":3,"bindId":null},{"id":872,"knlg":"存放在堆内存中,\n变量赋值是地址传递","pid":869,"path":"0-1-154-206-862-869-872","orderNum":1,"bindId":null},{"id":873,"knlg":"变量提升","pid":206,"path":"0-1-154-206-873","orderNum":23,"bindId":null},{"id":874,"knlg":"先通篇查找所有声明操作, 将<my定义>其它声明{(var,const,let,class)}\n提升到所在作用域最顶端, 将function\n关键字的函数体提升到最顶端","pid":876,"path":"0-1-154-206-873-876-874","orderNum":1,"bindId":null},{"id":875,"knlg":"再执行剩余代码","pid":874,"path":"0-1-154-206-873-876-874-875","orderNum":1,"bindId":null},{"id":876,"knlg":"执行过程","pid":873,"path":"0-1-154-206-873-876","orderNum":1,"bindId":null},{"id":877,"knlg":"函数名和变量名冲突,优先函数","pid":873,"path":"0-1-154-206-873-877","orderNum":2,"bindId":null},{"id":878,"knlg":"各版本新增功能","pid":206,"path":"0-1-154-206-878","orderNum":24,"bindId":null},{"id":879,"knlg":"<my定义>es5{(EcmaScript5)}","pid":878,"path":"0-1-154-206-878-879","orderNum":1,"bindId":null},{"id":880,"knlg":"严格模式\n<my示例>\n'use strict';\n</my示例>","pid":879,"path":"0-1-154-206-878-879-880","orderNum":1,"bindId":null},{"id":881,"knlg":"作用\n<my切换>让不规范的做法报错, 减少风险</my切换>","pid":880,"path":"0-1-154-206-878-879-880-881","orderNum":1,"bindId":null},{"id":882,"knlg":"报错情况","pid":880,"path":"0-1-154-206-878-879-880-882","orderNum":2,"bindId":null},{"id":883,"knlg":"不声明, 直接赋值a=2\n<my定义>本来{(会在window中创建a:2)}","pid":882,"path":"0-1-154-206-878-879-880-882-883","orderNum":1,"bindId":null},{"id":884,"knlg":"调用构造函数时忘记写new\n<my定义>原理{(函数中的this如果指向window, 则会修改为undefined)}","pid":882,"path":"0-1-154-206-878-879-880-882-884","orderNum":2,"bindId":null},{"id":885,"knlg":"静默失败(<my定义>造成困扰{(\n在实际开发中会造成很多\n困扰, 很难查出问题)})\n<my示例>\nlet a={\n        oi:9\n}\n//冻结\nObject.freeze(a);\n//无法修改但不报错\na.oi=10;\n</my示例>","pid":882,"path":"0-1-154-206-878-879-880-882-885","orderNum":3,"bindId":null},{"id":886,"knlg":"推出时间","pid":879,"path":"0-1-154-206-878-879-886","orderNum":2,"bindId":null},{"id":887,"knlg":"2009年","pid":886,"path":"0-1-154-206-878-879-886-887","orderNum":1,"bindId":null},{"id":888,"knlg":"es6","pid":878,"path":"0-1-154-206-878-888","orderNum":2,"bindId":null},{"id":889,"knlg":"推出时间","pid":888,"path":"0-1-154-206-878-888-889","orderNum":1,"bindId":null},{"id":890,"knlg":"2015年","pid":889,"path":"0-1-154-206-878-888-889-890","orderNum":1,"bindId":null},{"id":891,"knlg":"推荐学习网站","pid":888,"path":"0-1-154-206-878-888-891","orderNum":2,"bindId":null},{"id":892,"knlg":"<my原生>\n<a href=\"https://es6.ruanyifeng.com/\" target=\"__blank\">ES6 入门教程 阮一峰</a>\n</my原生>","pid":891,"path":"0-1-154-206-878-888-891-892","orderNum":1,"bindId":null},{"id":893,"knlg":"新增变量声明方式","pid":888,"path":"0-1-154-206-878-888-893","orderNum":3,"bindId":null},{"id":894,"knlg":"let","pid":893,"path":"0-1-154-206-878-888-893-894","orderNum":1,"bindId":null},{"id":895,"knlg":"const","pid":893,"path":"0-1-154-206-878-888-893-895","orderNum":2,"bindId":null},{"id":896,"knlg":"实际上有提升, 但会提升到脚本区(非全局区)","pid":894,"path":"0-1-154-206-878-888-893-894-896","orderNum":1,"bindId":null},{"id":897,"knlg":"查看方法","pid":873,"path":"0-1-154-206-873-897","orderNum":3,"bindId":null},{"id":898,"knlg":"提升后处于<my定义>暂存死区{(存在但不允许用)}状态\n可通过浏览器查看","pid":894,"path":"0-1-154-206-878-888-893-894-898","orderNum":2,"bindId":null},{"id":899,"knlg":"浏览器>源代码>断点>查看旁边的全局作用域\n<my示例>\n<my原生><img src=\"img/变量提升查看.png\"></my原生>\n</my示例>","pid":897,"path":"0-1-154-206-873-897-899","orderNum":1,"bindId":null},{"id":900,"knlg":"执行到let后才会脱离暂存死区","pid":894,"path":"0-1-154-206-878-888-893-894-900","orderNum":3,"bindId":null},{"id":901,"knlg":"常量,声明时必须赋值,\n不可更改","pid":895,"path":"0-1-154-206-878-888-893-895-901","orderNum":1,"bindId":null},{"id":902,"knlg":"可更改属性的值","pid":895,"path":"0-1-154-206-878-888-893-895-902","orderNum":2,"bindId":null},{"id":903,"knlg":"实际上有提升, 但会提升到脚本区(非全局区)","pid":895,"path":"0-1-154-206-878-888-893-895-903","orderNum":3,"bindId":null},{"id":904,"knlg":"提升后处于<my定义>暂存死区{(存在但不允许用)}状态\n可通过浏览器查看","pid":895,"path":"0-1-154-206-878-888-893-895-904","orderNum":4,"bindId":null},{"id":905,"knlg":"块级作用域  <my定义>\n要求{(里面放let和const, 不能放var)}\n<my示例>\nlet j;\n{\n        let a=8;\n        console.log(a);\n}\n</my示例>","pid":888,"path":"0-1-154-206-878-888-905","orderNum":4,"bindId":null},{"id":908,"knlg":"阻止对象增加属性\n<my切换>Object.preventExtensions(obj)</my切换>","pid":888,"path":"0-1-154-206-878-888-908","orderNum":5,"bindId":null},{"id":909,"knlg":"阻止对象增加删除属性\n<my切换>Object.seal(obj)</my切换>","pid":888,"path":"0-1-154-206-878-888-909","orderNum":6,"bindId":null},{"id":910,"knlg":"阻止对象增加删除修改属性\n<my切换>Object.freeze(obj)</my切换>","pid":888,"path":"0-1-154-206-878-888-910","orderNum":7,"bindId":null},{"id":912,"knlg":"uiygh","pid":762,"path":"0-1-675-762-912","orderNum":6,"bindId":null},{"id":919,"knlg":"vscode","pid":1150,"path":"0-1-154-1150-919","orderNum":2,"bindId":null},{"id":920,"knlg":"获取提示快捷键\n<my切换>ctrl+i</my切换>","pid":919,"path":"0-1-154-1150-919-920","orderNum":2,"bindId":null},{"id":921,"knlg":"单独属性配置","pid":888,"path":"0-1-154-206-878-888-921","orderNum":8,"bindId":null},{"id":922,"knlg":"设置属性不可修改\n<my示例>\n'use strict';\nlet obj={eid:7}\nObject.defineProperty(obj,'eid',{\n        writable:false\n})\n\n//报错\nobj.eid=8;\n</my示例>","pid":925,"path":"0-1-154-206-878-888-921-925-922","orderNum":1,"bindId":null},{"id":923,"knlg":"设置属性不可配置(删除属性或改变访问控制, 见示例)\n<my示例>\n'use strict';\nlet obj={eid:7}\nObject.defineProperty(obj,'eid',{\n        configurable:false\n})\n\n//报错\ndelete obj.eid;\n\n//报错\nObject.defineProperty(obj, 'eid', {\n        configurable: true\n})\n</my示例>","pid":925,"path":"0-1-154-206-878-888-921-925-923","orderNum":2,"bindId":null},{"id":924,"knlg":"设置属性不可遍历(浏览器中显示浅色)\n<my示例>\n'use strict';\nlet obj={eid:7}\nObject.defineProperty(obj,'eid',{\n        enumerable:false\n})\n\n//无结果\nfor(let key in obj){\n        console.log(key);\n}\n</my示例>","pid":925,"path":"0-1-154-206-878-888-921-925-924","orderNum":3,"bindId":null},{"id":925,"knlg":"defineProperty\n<my切换>改变单个属性访问控制</my切换>","pid":921,"path":"0-1-154-206-878-888-921-925","orderNum":1,"bindId":null},{"id":926,"knlg":"新增属性 <my定义>注意\n{(新增的属性默认writable,\nconfigurable,enumerable都是false)}\n<my示例>\n'use strict';\nlet obj = { eid: 7 }\nObject.defineProperty(obj, 'ename', {\n        value:'uedfder',\n        configurable: false\n})\n\nconsole.log(obj.ename)\n</my示例>","pid":925,"path":"0-1-154-206-878-888-921-925-926","orderNum":4,"bindId":null},{"id":928,"knlg":"defineProperties\n<my切换>改变多个属性访问控制</my切换>\n<my示例>\n'use strict';\nlet obj = { eid: 7 }\nObject.defineProperties(obj,{\n\n        eid:{\n                configurable: false                        \n        },\n        //新增属性根据需要打开访问控制\n        ename:{\n                value:'uedfder',\n                configurable:true,\n                enumerable:true,\n                writable:true                \n        }\n\n\n})\n\nconsole.log(obj)\n</my示例>","pid":921,"path":"0-1-154-206-878-888-921-928","orderNum":2,"bindId":null},{"id":929,"knlg":"计算属性(get set)\n<my切换>读取或修改属性时自动调用get或set函数</my切换>\n<my示例>\n'use strict';\nlet obj = { _eid: 7 }\nObject.defineProperty(obj,'eid',{\n        get:function(){\n                console.log('员工id',this._eid);\n        }\n\n\n})\n\nobj.eid;\n</my示例>","pid":888,"path":"0-1-154-206-878-888-929","orderNum":9,"bindId":null},{"id":944,"knlg":"<my定义>语法糖{(代码简化写法)}","pid":206,"path":"0-1-154-206-944","orderNum":25,"bindId":null},{"id":945,"knlg":"对象中的函数简写\n<my示例>\n'use strict';\nlet obj={\n        log(){\n                console.log('wfgder')\n        }\n}\n\nobj.log();\n</my示例>","pid":944,"path":"0-1-154-206-944-945","orderNum":1,"bindId":null},{"id":946,"knlg":"计算属性(get set)简写\n<my示例>\nlet obj={\n        get phone(){\n                return this._phone;\n        },\n        set phone(value){\n                this._phone=value;\n        }\n}\n</my示例>","pid":944,"path":"0-1-154-206-944-946","orderNum":2,"bindId":null},{"id":947,"knlg":"作用\n<my切换>\nget可少写一个括号\nset可监听属性变化\n</my切换>","pid":929,"path":"0-1-154-206-878-888-929-947","orderNum":1,"bindId":null},{"id":948,"knlg":"常见应用(属性保镖)\n<my示例>\n'use strict';\nlet obj = { eid: 7 }\nObject.defineProperty(obj, 'eid', {\n        eid: {\n                get: function () {\n                        return this._eid;\n                },\n                set: function (value) {\n                        this._eid = value;\n                }\n        }\n})\nObject.defineProperty(obj, '_eid', {\n        writable: true\n})\nobj.eid = 7;\n\nconsole.log(obj.eid);\n</my示例>","pid":929,"path":"0-1-154-206-878-888-929-948","orderNum":2,"bindId":null},{"id":949,"knlg":"让一个构造函数既可用new也可不用new\n调用的暂时解决办法\n<my示例>\nfunction Emp() {\n\n        if (!this || this === window) {\n                let obj = {}\n                init.bind(obj)();\n                Object.setPrototypeOf(obj, Emp.prototype);\n                return obj;\n        }\n        //这么写一下Emp才会变构造函数的颜色\n        this.id = 9;\n        init.bind(this)();\n        function init() {\n                this.id = 9;\n        }\n}\n\nlet emp1 =Emp();\n\nconsole.log(emp1);\n</my示例>","pid":206,"path":"0-1-154-206-949","orderNum":26,"bindId":null},{"id":950,"knlg":"","pid":912,"path":"0-1-675-762-912-950","orderNum":1,"bindId":null},{"id":951,"knlg":"","pid":950,"path":"0-1-675-762-912-950-951","orderNum":1,"bindId":null},{"id":956,"knlg":"this指向","pid":206,"path":"0-1-154-206-956","orderNum":27,"bindId":null},{"id":957,"knlg":"箭头函数 <my定义>作用{(简化匿名函数写法, 改变this指向)}","pid":888,"path":"0-1-154-206-878-888-957","orderNum":10,"bindId":null},{"id":959,"knlg":"单参数\n<my示例>\n(a)=>{}\n可简写成\na=>{}\n</my示例>","pid":964,"path":"0-1-154-206-878-888-957-964-959","orderNum":1,"bindId":null},{"id":960,"knlg":"函数体只有一行代码且返回值\n<my示例>\n()=>{return 1;}\n可省略成\n()=>1\n\n</my示例>","pid":964,"path":"0-1-154-206-878-888-957-964-960","orderNum":2,"bindId":null},{"id":962,"knlg":"普通写法\n<my示例>\n(a,b)=>{}\n</my示例>","pid":964,"path":"0-1-154-206-878-888-957-964-962","orderNum":3,"bindId":null},{"id":963,"knlg":"函数体只有一行代码\n且返回对象\n<my示例>\n                let fun = () => {\n                        return { name: 'mike', age: 44 }\n                }\n                console.log(fun())\n\n                可省略成\n\n                let fun=()=>({name:'mike',age:44})\n                console.log(fun())\n\n\n</my示例>","pid":964,"path":"0-1-154-206-878-888-957-964-963","orderNum":4,"bindId":null},{"id":964,"knlg":"简写","pid":957,"path":"0-1-154-206-878-888-957-964","orderNum":1,"bindId":null},{"id":965,"knlg":".前的对象","pid":969,"path":"0-1-154-206-956-969-965","orderNum":1,"bindId":null},{"id":966,"knlg":"new创建的对象","pid":969,"path":"0-1-154-206-956-969-966","orderNum":2,"bindId":null},{"id":967,"knlg":"箭头函数情况","pid":956,"path":"0-1-154-206-956-967","orderNum":1,"bindId":null},{"id":968,"knlg":"<my定义>改变this的指向{(this是箭头函数声明时[执行到时]所在作用域\n的this,且不会随.前对象的改变而改变)}","pid":957,"path":"0-1-154-206-878-888-957-968","orderNum":2,"bindId":null},{"id":969,"knlg":"普通函数","pid":956,"path":"0-1-154-206-956-969","orderNum":2,"bindId":null},{"id":971,"knlg":"也可理解成this和外部函数的this一样","pid":968,"path":"0-1-154-206-878-888-957-968-971","orderNum":1,"bindId":null},{"id":972,"knlg":"迷惑的情况","pid":956,"path":"0-1-154-206-956-972","orderNum":3,"bindId":null},{"id":973,"knlg":"a[2]()实际上相当于是a.'2'()","pid":972,"path":"0-1-154-206-956-972-973","orderNum":1,"bindId":null},{"id":975,"knlg":"没有new和.则指向window","pid":969,"path":"0-1-154-206-956-969-975","orderNum":3,"bindId":null},{"id":976,"knlg":"<my定义>高阶函数{(函数体中包含其它函数的函数)}","pid":206,"path":"0-1-154-206-976","orderNum":28,"bindId":null},{"id":977,"knlg":"数组高阶函数","pid":206,"path":"0-1-154-206-977","orderNum":29,"bindId":null},{"id":978,"knlg":"every <my定义>作用{(判断数组元素是否都符合要求)}\n<my示例>\nlet arr=[68,94,87,-7,9];\nlet res=arr.every((value,index,array)=>{\n    return value>0;\n})\n\nconsole.log(res);\n\n\n\n</my示例>","pid":977,"path":"0-1-154-206-977-978","orderNum":1,"bindId":null},{"id":979,"knlg":"some <my定义>作用{(判断数组元素中是否有符合要求的)}\n<my示例>\nlet arr=[68,94,87,-7,9];\nlet res=arr.some((value,index,array)=>{\n    return value>0;\n})\n\nconsole.log(res);\n\n\n\n</my示例>","pid":977,"path":"0-1-154-206-977-979","orderNum":2,"bindId":null},{"id":980,"knlg":"如果return true则不遍历下去","pid":979,"path":"0-1-154-206-977-979-980","orderNum":1,"bindId":null},{"id":981,"knlg":"如果return false则不遍历下去","pid":978,"path":"0-1-154-206-977-978-981","orderNum":1,"bindId":null},{"id":982,"knlg":"filter <my定义>作用{(筛选出数组中符合要求的元素)}\n<my示例>\nlet arr=[68,94,87,-7,9];\nlet res=arr.filter((value,index,array)=>{\n    return value>0;\n})\n\nconsole.log(res);\n\n\n\n</my示例>","pid":977,"path":"0-1-154-206-977-982","orderNum":3,"bindId":null},{"id":983,"knlg":"return true就筛选出来","pid":982,"path":"0-1-154-206-977-982-983","orderNum":1,"bindId":null},{"id":984,"knlg":"map <my定义>作用{(将数组元素修改后建立新数组)}\n<my示例>\nlet arr=[68,94,87,-7,9];\nlet res=arr.map((value,index,array)=>{\n    return value*2;\n})\n\nconsole.log(res);\n\n\n\n</my示例>","pid":977,"path":"0-1-154-206-977-984","orderNum":4,"bindId":null},{"id":989,"knlg":"一般操作","pid":1031,"path":"0-1-1031-989","orderNum":1,"bindId":null},{"id":990,"knlg":"外墙抗裂砂浆","pid":989,"path":"0-1-1031-989-990","orderNum":1,"bindId":null},{"id":991,"knlg":"允许3-5毫米","pid":990,"path":"0-1-1031-989-990-991","orderNum":1,"bindId":null},{"id":992,"knlg":"沥青","pid":989,"path":"0-1-1031-989-992","orderNum":2,"bindId":null},{"id":993,"knlg":"要看质保单，对比图纸","pid":992,"path":"0-1-1031-989-992-993","orderNum":1,"bindId":null},{"id":994,"knlg":"油漆材料品牌","pid":989,"path":"0-1-1031-989-994","orderNum":3,"bindId":null},{"id":995,"knlg":"快可美(中德合资)","pid":994,"path":"0-1-1031-989-994-995","orderNum":1,"bindId":null},{"id":997,"knlg":"<my原生><a target=\"_blank\" href=\"https://youglish.com/pronounce/you%20are%20quite%20welcome/english?\">单词及词组读音及视频演示</a></my原生>","pid":1000,"path":"0-1-999-1000-997","orderNum":1,"bindId":null},{"id":999,"knlg":"英文","pid":1,"path":"0-1-999","orderNum":7,"bindId":null},{"id":1000,"knlg":"软件及网站","pid":999,"path":"0-1-999-1000","orderNum":2,"bindId":null},{"id":1001,"knlg":"base\n<my切换>进制</my切换>","pid":70,"path":"0-1-999-70-1001","orderNum":7,"bindId":null},{"id":1002,"knlg":"引入@import\n<my示例>\n@import '_base';\n引入_base.scss文件\n\n</my示例>","pid":494,"path":"0-1-154-494-1002","orderNum":21,"bindId":null},{"id":1003,"knlg":"单排脚手架脚手眼设置规范\n<my来源>JGJ 130-2011 7.3.6条</my来源>","pid":989,"path":"0-1-1031-989-1003","orderNum":5,"bindId":null},{"id":1004,"knlg":"井架拆除","pid":989,"path":"0-1-1031-989-1004","orderNum":6,"bindId":null},{"id":1005,"knlg":"检查作业人员证书","pid":1004,"path":"0-1-1031-989-1004-1005","orderNum":1,"bindId":null},{"id":1006,"knlg":"粉刷/抹灰","pid":989,"path":"0-1-1031-989-1006","orderNum":7,"bindId":null},{"id":1007,"knlg":"空鼓锤敲空鼓","pid":1006,"path":"0-1-1031-989-1006-1007","orderNum":1,"bindId":null},{"id":1008,"knlg":"遍历数组、类数组、字符串\n<my切换>for of</my切换>\n<my示例>\nlet arr=[6,8,9]\n\nfor(let value of arr){\n        console.log(value);\n}\n</my示例>","pid":206,"path":"0-1-154-206-1008","orderNum":30,"bindId":null},{"id":1011,"knlg":"forEach <my定义>作用{(遍历)}\n<my示例>\nlet arr=[68,94,87,-7,9];\narr.forEach((value,index,array)=>{\n    console.log(value);\n})\n\n</my示例>","pid":977,"path":"0-1-154-206-977-1011","orderNum":5,"bindId":null},{"id":1012,"knlg":"reduce <my定义>作用{(累加)}\n<my示例>\nlet arr=[68,94,87,-7,9];\nlet res=arr.reduce((total,value)=>{\n    return total+value;\n})\n\nconsole.log(res);\n\n</my示例>","pid":977,"path":"0-1-154-206-977-1012","orderNum":6,"bindId":null},{"id":1013,"knlg":"参数2(就是0)代表total的起始值, 如果不写参数2, 则默认是0","pid":1012,"path":"0-1-154-206-977-1012-1013","orderNum":1,"bindId":null},{"id":1014,"knlg":"函数触发方式","pid":206,"path":"0-1-154-206-1014","orderNum":31,"bindId":null},{"id":1015,"knlg":"()","pid":1014,"path":"0-1-154-206-1014-1015","orderNum":1,"bindId":null},{"id":1017,"knlg":"函数.call() <my定义>特点{(指定函数中的this,\n其余参数直接传递)}\n<my示例>\nlet obj = { a: 1, b: 2 }\n\n\nfunction fun(a, b) {\n        console.log(a, b);\n        console.log(this);\n}\n\nfun.call(obj, 4, 8);\n\n\n</my示例>","pid":1014,"path":"0-1-154-206-1014-1017","orderNum":2,"bindId":null},{"id":1018,"knlg":"函数.apply() <my定义>特点{(指定函数中的this, \n其余参数必须用数组形式传递)}\n<my示例>\nlet obj = { a: 1, b: 2 }\n\n\nfunction fun(a, b) {\n        console.log(a, b);\n        console.log(this);\n}\n\nfun.apply(obj, [4, 8]);\n\n\n</my示例>","pid":1014,"path":"0-1-154-206-1014-1018","orderNum":3,"bindId":null},{"id":1020,"knlg":"函数.bind() <my定义>特点{(绑定参数及zhis)} <my定义>原理{(创建了一个绑定函数, 函数中有[[BoundThis]]和\n[[BoundArgs]]属性)}\n<my示例>\nlet obj = { a: 1, b: 2 }\n\n\nfunction fun(a, b) {\n        console.log(a, b);\n}\n\nlet fun2=fun.bind(obj, 4, 8);\n\n\n</my示例>","pid":1014,"path":"0-1-154-206-1014-1020","orderNum":4,"bindId":null},{"id":1021,"knlg":"默认参数\n<my示例>\nfunction fun(a=8, b=5) {\n        console.log(a, b);\n}\n\nfun()\n\n\n</my示例>","pid":888,"path":"0-1-154-206-878-888-1021","orderNum":11,"bindId":null},{"id":1022,"knlg":"新运算符...","pid":888,"path":"0-1-154-206-878-888-1022","orderNum":12,"bindId":null},{"id":1023,"knlg":"可用于取代arguments , \n可以直接使用数组函数\n<my示例>\nfunction fun(...args) {\n        console.log(args);\n}\n\nfun(5,9,8)\n\n</my示例>","pid":1022,"path":"0-1-154-206-878-888-1022-1023","orderNum":1,"bindId":null},{"id":1024,"knlg":"接收剩余参数\n<my示例>\nfunction fun(a,b,...args) {\n        //args中只有一个8\n        console.log(args);\n}\n\nfun(5,9,8)\n</my示例>","pid":1022,"path":"0-1-154-206-878-888-1022-1024","orderNum":2,"bindId":null},{"id":1025,"knlg":"数组展开(打散数组, 去掉数组中括号)\n<my示例>\nlet arr=[7,9,4];\n\nfunction add(a,b,c){\n        console.log(a+b+c);\n}\n\nadd(...arr)\n\n</my示例>","pid":1022,"path":"0-1-154-206-878-888-1022-1025","orderNum":3,"bindId":null},{"id":1026,"knlg":"对象展开(打散对象, 去掉对象大括号) <my定义>同名情况{(后写的覆盖先写的)}\n<my示例>\nlet obj = {a:1, b:2, c:3};\n\nfunction add(obj) {\n    console.log(obj)\n}\n\nadd({b:7,e:9,...obj})\n\n</my示例>","pid":1022,"path":"0-1-154-206-878-888-1022-1026","orderNum":4,"bindId":null},{"id":1027,"knlg":"模板字符串\n<my示例>\nlet num=876;\nlet str=`a${num}b`;\nconsole.log(str);\n\n</my示例>","pid":888,"path":"0-1-154-206-878-888-1027","orderNum":13,"bindId":null},{"id":1028,"knlg":"优势1:字符串拼接方便了","pid":1027,"path":"0-1-154-206-878-888-1027-1028","orderNum":1,"bindId":null},{"id":1029,"knlg":"优势2:字符串书写可换行了","pid":1027,"path":"0-1-154-206-878-888-1027-1029","orderNum":2,"bindId":null},{"id":1031,"knlg":"监理","pid":1,"path":"0-1-1031","orderNum":8,"bindId":null},{"id":1032,"knlg":"当前工程","pid":1031,"path":"0-1-1031-1032","orderNum":2,"bindId":null},{"id":1033,"knlg":"监理人员考勤查看方式","pid":1032,"path":"0-1-1031-1032-1033","orderNum":1,"bindId":null},{"id":1034,"knlg":"在异常查询中查询","pid":1033,"path":"0-1-1031-1032-1033-1034","orderNum":1,"bindId":null},{"id":1035,"knlg":"油漆步骤","pid":989,"path":"0-1-1031-989-1035","orderNum":8,"bindId":null},{"id":1036,"knlg":"抗裂砂浆加护角一层","pid":1035,"path":"0-1-1031-989-1035-1036","orderNum":1,"bindId":null},{"id":1037,"knlg":"网格布铺贴","pid":1036,"path":"0-1-1031-989-1035-1036-1037","orderNum":1,"bindId":null},{"id":1038,"knlg":"抗裂砂浆再一层","pid":1037,"path":"0-1-1031-989-1035-1036-1037-1038","orderNum":1,"bindId":null},{"id":1039,"knlg":"弹线，贴美纹纸","pid":1038,"path":"0-1-1031-989-1035-1036-1037-1038-1039","orderNum":1,"bindId":null},{"id":1040,"knlg":"披刮腻子","pid":1039,"path":"0-1-1031-989-1035-1036-1037-1038-1039-1040","orderNum":1,"bindId":null},{"id":1041,"knlg":"施工步骤","pid":1048,"path":"0-1-1031-989-1048-1041","orderNum":1,"bindId":null},{"id":1042,"knlg":"安装锚板","pid":1041,"path":"0-1-1031-989-1048-1041-1042","orderNum":1,"bindId":null},{"id":1043,"knlg":"安装竖向龙骨","pid":1042,"path":"0-1-1031-989-1048-1041-1042-1043","orderNum":1,"bindId":null},{"id":1044,"knlg":"安装水平龙骨","pid":1043,"path":"0-1-1031-989-1048-1041-1042-1043-1044","orderNum":1,"bindId":null},{"id":1045,"knlg":"覆盖彩条布，防止扬尘","pid":1044,"path":"0-1-1031-989-1048-1041-1042-1043-1044-1045","orderNum":1,"bindId":null},{"id":1046,"knlg":"石材在彩条布里切割，并干挂","pid":1045,"path":"0-1-1031-989-1048-1041-1042-1043-1044-1045-1046","orderNum":1,"bindId":null},{"id":1047,"knlg":"石材缝隙中填满装饰胶","pid":1046,"path":"0-1-1031-989-1048-1041-1042-1043-1044-1045-1046-1047","orderNum":1,"bindId":null},{"id":1048,"knlg":"石材幕墙","pid":989,"path":"0-1-1031-989-1048","orderNum":9,"bindId":null},{"id":1049,"knlg":"石材与龙骨连接处用结构密封胶","pid":1050,"path":"0-1-1031-989-1048-1050-1049","orderNum":1,"bindId":null},{"id":1050,"knlg":"注意点","pid":1048,"path":"0-1-1031-989-1048-1050","orderNum":2,"bindId":null},{"id":1051,"knlg":"石材缝隙嵌填用耐候密封胶","pid":1050,"path":"0-1-1031-989-1048-1050-1051","orderNum":2,"bindId":null},{"id":1052,"knlg":"栏杆扶手要有接地","pid":989,"path":"0-1-1031-989-1052","orderNum":10,"bindId":null},{"id":1053,"knlg":"云服务器购买","pid":1131,"path":"0-1-154-1131-1053","orderNum":1,"bindId":null},{"id":1054,"knlg":"购买优惠站点<my原生><a href=\"https://cloud.tencent.com/act/2022season?from=16224\" target=\"_blank\">腾讯云优惠</a></my原生>","pid":1053,"path":"0-1-154-1131-1053-1054","orderNum":1,"bindId":null},{"id":1055,"knlg":"域名购买","pid":1131,"path":"0-1-154-1131-1055","orderNum":2,"bindId":null},{"id":1056,"knlg":"阿里云万网","pid":1055,"path":"0-1-154-1131-1055-1056","orderNum":1,"bindId":null},{"id":1057,"knlg":"配置服务器操作","pid":1131,"path":"0-1-154-1131-1057","orderNum":3,"bindId":null},{"id":1058,"knlg":"<my原生><a href=\"other/proj setup.pdf\" target=\"_blank\">项目上线.pdf</a></my原生>","pid":1057,"path":"0-1-154-1131-1057-1058","orderNum":1,"bindId":null},{"id":1059,"knlg":"数组解构","pid":206,"path":"0-1-154-206-1059","orderNum":32,"bindId":null},{"id":1060,"knlg":"完全解构\n<my示例>\nlet arr1=[6,8,9];\nlet [a,b,c]=arr1;\n\n</my示例>","pid":1059,"path":"0-1-154-206-1059-1060","orderNum":1,"bindId":null},{"id":1061,"knlg":"不完全解构\n<my示例>\nlet arr1=[6,8,9];\nlet [a,,c]=arr1;\n\n</my示例>","pid":1059,"path":"0-1-154-206-1059-1061","orderNum":2,"bindId":null},{"id":1062,"knlg":"对象解构","pid":206,"path":"0-1-154-206-1062","orderNum":33,"bindId":null},{"id":1063,"knlg":"完全解构\n<my示例>\nlet obj1=[a:6,b:8,c:9];\nlet {a,b,c}=obj1;\n\n</my示例>","pid":1062,"path":"0-1-154-206-1062-1063","orderNum":1,"bindId":null},{"id":1064,"knlg":"不完全解构\n<my示例>\nlet obj1=[a:6,b:8,c:9];\nlet {a,c}=obj1;\n\n</my示例>","pid":1062,"path":"0-1-154-206-1062-1064","orderNum":2,"bindId":null},{"id":1065,"knlg":"解构时用别名\n<my示例>\nlet obj1=[a:6,b:8,c:9];\nlet {a:别名1,c:别名2}=obj1;\nconsole.log(别名1,别名2)\n\n</my示例>","pid":1062,"path":"0-1-154-206-1062-1065","orderNum":3,"bindId":null},{"id":1066,"knlg":"复杂解构\n<my示例>\nlet obj = {\n        arr1: [8, 7, 4],\n        phone: {\n                price: 76,\n                name1: 'call'\n        }\n}\n\nlet {\n        arr1: [a, b, c],\n        phone: {\n                price, name1\n        }\n} = obj;\n\nconsole.log(a, b, c, price, name1)\n</my示例>","pid":206,"path":"0-1-154-206-1066","orderNum":34,"bindId":null},{"id":1067,"knlg":"<my定义>关闭贪婪模式{(在+或*后面加上?)}\n<my示例>\n.*?\n\n</my示例>","pid":61,"path":"0-1-154-61-1067","orderNum":13,"bindId":null},{"id":1068,"knlg":"解构提示","pid":1062,"path":"0-1-154-206-1062-1068","orderNum":4,"bindId":null},{"id":1069,"knlg":"先写let {}=data;, 再用ctrl+i获取提示","pid":1068,"path":"0-1-154-206-1062-1068-1069","orderNum":1,"bindId":null},{"id":1070,"knlg":"函数参数解构","pid":206,"path":"0-1-154-206-1070","orderNum":35,"bindId":null},{"id":1071,"knlg":"数组参数\n<my示例>\nfunction fun([a,b,c]){\n        console.log(a,b,c)\n}\n\nlet arr=[6,9,4];\n</my示例>","pid":1070,"path":"0-1-154-206-1070-1071","orderNum":1,"bindId":null},{"id":1072,"knlg":"对象参数\n<my示例>\nfunction fun({name,age}){\n        console.log(name,age)\n}\n\nlet obj={name:'yug',age:9};\n\nfun(obj)\n</my示例>","pid":1070,"path":"0-1-154-206-1070-1072","orderNum":2,"bindId":null},{"id":1073,"knlg":"class <my定义>本质{(函数)}","pid":206,"path":"0-1-154-206-1073","orderNum":36,"bindId":null},{"id":1074,"knlg":"静态属性及静态方法 <my定义>存储位置{(构造函数中)} <my定义>使用方法{(构造函数名.属性名)}\n<my示例>\nclass A {\n        static a = 4\n        static b = 5\n        static sum() {\n                return this.a+this.b;\n        }\n}\n\nconsole.log(A.sum());\n\n</my示例>","pid":1073,"path":"0-1-154-206-1073-1074","orderNum":1,"bindId":null},{"id":1075,"knlg":"创建对象及方法\n<my示例>\n\nclass A{\n        constructor(a,b){\n                this.a=a;\n                this.b=b;\n        }\n        sum(){\n                return this.a+this.b;\n        }\n}\n\nconsole.log(new A(2,3).sum());\n\n</my示例>","pid":1073,"path":"0-1-154-206-1073-1075","orderNum":2,"bindId":null},{"id":1076,"knlg":"继承\n<my示例>\nclass A {\n        constructor(a,b){\n                this.a=a;\n                this.b=b;\n        }\n        sum() {\n                return this.a+this.b;\n        }\n}\n\nclass B extends A{\n        constructor(a,b,c){\n                \n                super(a,b)\n                this.c=c;\n        }\n        sum(){\n                return this.c+super.sum();\n        }\n}\n\nconsole.log(new B(4,8,3).sum());\n\n</my示例>","pid":1073,"path":"0-1-154-206-1073-1076","orderNum":3,"bindId":null},{"id":1077,"knlg":"原理(原型链实现同样功能)\n<my示例>\nfunction A(a,b){\n        this.a=a;\n        this.b=b;\n}\n\nA.prototype.sum=function(){\n        return this.a+this.b;\n}\n\nfunction B(a,b,c){\n        A.call(this,a,b);\n        this.c=c;\n}\nObject.setPrototypeOf(B.prototype,A.prototype)\n\nB.prototype.sum=function(){\n        return this.c+Object.getPrototypeOf(Object.getPrototypeOf(this)).sum.call(this);\n}\n\nconsole.log(new B(4,8,3).sum());\n\n</my示例>","pid":1076,"path":"0-1-154-206-1073-1076-1077","orderNum":1,"bindId":null},{"id":1078,"knlg":"回调地狱 <my定义>由来{(代码横放好像倒金字塔)}","pid":206,"path":"0-1-154-206-1078","orderNum":37,"bindId":null},{"id":1079,"knlg":"解决方法Promise","pid":1078,"path":"0-1-154-206-1078-1079","orderNum":1,"bindId":null},{"id":1082,"knlg":"如果resolve和reject都调用,则先调用的生效","pid":389,"path":"0-1-154-206-1602-384-389-1082","orderNum":6,"bindId":null},{"id":1084,"knlg":"三种状态  <my定义>状态切换特点{(状态只能从pending切换成其它两个, \n一旦切换就不会改变了)}","pid":384,"path":"0-1-154-206-1602-384-1084","orderNum":3,"bindId":null},{"id":1085,"knlg":"<my定义>pending{(new Promise之后)}","pid":1084,"path":"0-1-154-206-1602-384-1084-1085","orderNum":1,"bindId":null},{"id":1086,"knlg":"<my定义>fullfilled{(调用resolve后)}","pid":1084,"path":"0-1-154-206-1602-384-1084-1086","orderNum":2,"bindId":null},{"id":1087,"knlg":"<my定义>rejected{(调用reject后)}","pid":1084,"path":"0-1-154-206-1602-384-1084-1087","orderNum":3,"bindId":null},{"id":1088,"knlg":"插件","pid":919,"path":"0-1-154-1150-919-1088","orderNum":3,"bindId":null},{"id":1089,"knlg":"JavaScript (ES6) code snippets (charalampos karypidis)","pid":1088,"path":"0-1-154-1150-919-1088-1089","orderNum":1,"bindId":null},{"id":1090,"knlg":"prom可快捷生成Promise代码","pid":1089,"path":"0-1-154-1150-919-1088-1089-1090","orderNum":1,"bindId":null},{"id":1093,"knlg":"设置网站标题","pid":155,"path":"0-1-154-155-1093","orderNum":3,"bindId":null},{"id":1094,"knlg":"document.title=\"标题\"","pid":1093,"path":"0-1-154-155-1093-1094","orderNum":1,"bindId":null},{"id":1095,"knlg":"<my定义>网页显示流程{( HTML代码先转换成JS对象再显示在网页上 )}","pid":155,"path":"0-1-154-155-1095","orderNum":4,"bindId":null},{"id":1096,"knlg":"DOM树 <my定义>结构特点{(和html元素嵌套一致)}","pid":155,"path":"0-1-154-155-1096","orderNum":5,"bindId":null},{"id":1098,"knlg":"<my定义>节点{(HTML的标签转换成的DOM元素)}","pid":155,"path":"0-1-154-155-1098","orderNum":6,"bindId":null},{"id":1099,"knlg":"获取html对象\n<my切换>document.documentElement</my切换>","pid":1106,"path":"0-1-154-155-1096-1106-1099","orderNum":1,"bindId":null},{"id":1100,"knlg":"获取body对象\n<my切换>document.body</my切换>","pid":1106,"path":"0-1-154-155-1096-1106-1100","orderNum":2,"bindId":null},{"id":1101,"knlg":"获取head对象\n<my切换>document.head</my切换>","pid":1106,"path":"0-1-154-155-1096-1106-1101","orderNum":3,"bindId":null},{"id":1102,"knlg":"获取或修改元素的css属性","pid":155,"path":"0-1-154-155-1102","orderNum":7,"bindId":null},{"id":1103,"knlg":"节点.style.样式=''\n<my示例>\n<body>\n        <div>edfswaf</div>\n        <script>\n                'use strict';\n                document.body.style.color=\"red\";\n\n        </script>\n</body>\n</my示例>","pid":1102,"path":"0-1-154-155-1102-1103","orderNum":1,"bindId":null},{"id":1104,"knlg":"概率 <my定义>实现方式{(Math.random)}\n<my示例>\nif(Math.random()>0.3){\n\n}\n</my示例>","pid":206,"path":"0-1-154-206-1104","orderNum":38,"bindId":null},{"id":1106,"knlg":"获取固定节点","pid":1096,"path":"0-1-154-155-1096-1106","orderNum":1,"bindId":null},{"id":1109,"knlg":"获取非固定节点","pid":1096,"path":"0-1-154-155-1096-1109","orderNum":2,"bindId":null},{"id":1110,"knlg":"利用与已知节点的关系","pid":1114,"path":"0-1-154-155-1096-1109-1114-1110","orderNum":1,"bindId":null},{"id":1111,"knlg":"children\n<my示例>\n<body>\n        <div>edfswaf</div>\n        <script>\n                'use strict';\n                document.body.children[0].innerHTML='tyufydrt';\n\n        </script>\n</body>\n</my示例>","pid":1112,"path":"0-1-154-155-1096-1109-1114-1110-1112-1111","orderNum":1,"bindId":null},{"id":1112,"knlg":"子元素","pid":1110,"path":"0-1-154-155-1096-1109-1114-1110-1112","orderNum":1,"bindId":null},{"id":1114,"knlg":"元素节点","pid":1109,"path":"0-1-154-155-1096-1109-1114","orderNum":1,"bindId":null},{"id":1115,"knlg":"firstElementChild","pid":1112,"path":"0-1-154-155-1096-1109-1114-1110-1112-1115","orderNum":2,"bindId":null},{"id":1116,"knlg":"lastElementChild","pid":1112,"path":"0-1-154-155-1096-1109-1114-1110-1112-1116","orderNum":3,"bindId":null},{"id":1117,"knlg":"所有节点(包含文本及元素节点)","pid":1109,"path":"0-1-154-155-1096-1109-1117","orderNum":2,"bindId":null},{"id":1118,"knlg":"子节点","pid":1117,"path":"0-1-154-155-1096-1109-1117-1118","orderNum":1,"bindId":null},{"id":1119,"knlg":"childNodes\n<my示例>\n<body>\n        <div>edfswaf</div>\n        <script>\n                'use strict';\n                document.body.childNodes[0].nodeValue=\"yuhgtuyfgfgt\";\n\n        </script>\n</body>\n</my示例>","pid":1118,"path":"0-1-154-155-1096-1109-1117-1118-1119","orderNum":1,"bindId":null},{"id":1120,"knlg":"firstChild","pid":1118,"path":"0-1-154-155-1096-1109-1117-1118-1120","orderNum":2,"bindId":null},{"id":1121,"knlg":"lastChild","pid":1118,"path":"0-1-154-155-1096-1109-1117-1118-1121","orderNum":3,"bindId":null},{"id":1122,"knlg":"根据id获取 <my定义>特点{(只能全局获取)}","pid":1114,"path":"0-1-154-155-1096-1109-1114-1122","orderNum":2,"bindId":null},{"id":1123,"knlg":"document.getElementById('d1') <my定义>简写代码提示{(gid)}","pid":1122,"path":"0-1-154-155-1096-1109-1114-1122-1123","orderNum":1,"bindId":null},{"id":1124,"knlg":"直接写id名 <my定义>不推荐=>{(\n1.浏览器兼容性问题\n2.书写时没有代码提示\n)}\n<my示例>\n<body>\n        <div id=\"h\">edfswaf</div>\n        <script>\n                'use strict';\n                h.innerHTML=\"tgydcrtsdx\"\n                \n        </script>\n</body>\n</my示例>","pid":1122,"path":"0-1-154-155-1096-1109-1114-1122-1124","orderNum":2,"bindId":null},{"id":1125,"knlg":"浏览器兼容性问题","pid":1124,"path":"0-1-154-155-1096-1109-1114-1122-1124-1125","orderNum":1,"bindId":null},{"id":1126,"knlg":"书写时没有代码提示","pid":1124,"path":"0-1-154-155-1096-1109-1114-1122-1124-1126","orderNum":2,"bindId":null},{"id":1127,"knlg":"第三方动画库","pid":44,"path":"0-1-154-44-1127","orderNum":9,"bindId":null},{"id":1129,"knlg":"根据标签名获取 <my定义>特点{(也能局部获取, 获取到的是类数组对象)}\n<my示例>\n<body>\n        <div id=\"h\">edfswaf</div>\n        <div>edfswaf</div>\n        <div>edfswaf</div>\n        <div>edfswaf</div>\n        <script>\n                'use strict';\n                let divs=document.getElementsByTagName('div')\n                console.log(divs)\n                \n        </script>\n</body>\n</my示例>","pid":1114,"path":"0-1-154-155-1096-1109-1114-1129","orderNum":3,"bindId":null},{"id":1130,"knlg":"根据类class名获取 <my定义>特点{(也能局部获取, 获取到的是类数组对象)}\n<my示例>\n<body>\n        <div id=\"h\" class=\"hi\">edfswaf</div>\n        <div class=\"hi\">edfswaf</div>\n        <div class=\"hi\">edfswaf</div>\n        <div class=\"hi\">edfswaf</div>\n        <script>\n                'use strict';\n                let divs=document.getElementsByClassName('hi')\n                console.log(divs)\n                \n        </script>\n</body>\n</my示例>","pid":1114,"path":"0-1-154-155-1096-1109-1114-1130","orderNum":4,"bindId":null},{"id":1131,"knlg":"自己配置服务器","pid":154,"path":"0-1-154-1131","orderNum":13,"bindId":null},{"id":1132,"knlg":"根据表单元素name获取 <my定义>特点{(也能局部获取, 获取到的是类数组对象)}\n<my示例>\n<body>\n        <input type=\"radio\" name=\"gender\" value=\"男\">\n        <input type=\"radio\" name=\"gender\" value=\"女\">\n        <script>\n                'use strict';\n                let inputs=document.getElementsByName('gender')\n                console.log(inputs)\n                \n        </script>\n</body>\n</my示例>","pid":1114,"path":"0-1-154-155-1096-1109-1114-1132","orderNum":5,"bindId":null},{"id":1133,"knlg":"让用户无法选中文本","pid":44,"path":"0-1-154-44-1133","orderNum":10,"bindId":null},{"id":1134,"knlg":"user-select: none;","pid":1133,"path":"0-1-154-44-1133-1134","orderNum":1,"bindId":null},{"id":1135,"knlg":"<my原生><a href=\"https://www.runoob.com/jsref/dom-obj-event.html\" target=\"_blank\">说明文档网址</a></my原生>","pid":196,"path":"0-1-154-155-196-1135","orderNum":1,"bindId":null},{"id":1137,"knlg":"事件对象","pid":196,"path":"0-1-154-155-196-1137","orderNum":2,"bindId":null},{"id":1138,"knlg":"点击onclick\n<my示例>\n<body>\n        <div id=\"pages\">\n                <span class=\"current\">1</span>\n                <span>2</span>\n                <span>3</span>\n                <span>4</span>\n                <span>5</span>\n        </div>\n        <script>\n                'use strict';\n                let pages=document.getElementById('pages');\n                for(const span of pages.children){\n                        span.onclick=function(){\n                                pages.getElementsByClassName('current')[0].className='';\n                                this.className='current';\n                        }\n                }\n\n        </script>\n</body>\n</my示例>","pid":196,"path":"0-1-154-155-196-1138","orderNum":3,"bindId":null},{"id":1139,"knlg":"class操作","pid":155,"path":"0-1-154-155-1139","orderNum":8,"bindId":null},{"id":1140,"knlg":"className存放值\n<my示例>\n<body>\n        <div class=\"normal danger\">DANGER</div>\n        <div class=\"normal disabled\">DISABLED</div>\n        <script>\n                'use strict';\n                let div=document.body.firstElementChild.className='';\n\n        </script>\n</body>\n</my示例>","pid":1139,"path":"0-1-154-155-1139-1140","orderNum":1,"bindId":null},{"id":1141,"knlg":"classList存放数组及操作数组的方法\n<my示例>\n<body>\n        <div class=\"normal danger\">DANGER</div>\n        <div class=\"normal disabled\">DISABLED</div>\n        <script>\n                'use strict';\n                let div=document.body.firstElementChild.classList.remove('danger','normal');\n\n        </script>\n</body>\n</my示例>","pid":1139,"path":"0-1-154-155-1139-1141","orderNum":2,"bindId":null},{"id":1142,"knlg":"移除class\n<my切换>\nremove\n</my切换>","pid":1141,"path":"0-1-154-155-1139-1141-1142","orderNum":1,"bindId":null},{"id":1143,"knlg":"<my定义>切换class{(让指定class在添加和删除之间切换)} <my定义>不足{(只能切换单个class)}\n<my切换>\ntoggle\n</my切换>","pid":1141,"path":"0-1-154-155-1139-1141-1143","orderNum":2,"bindId":null},{"id":1145,"knlg":"添加class\n<my切换>\nadd\n</my切换>","pid":1141,"path":"0-1-154-155-1139-1141-1145","orderNum":3,"bindId":null},{"id":1147,"knlg":"思索","pid":1,"path":"0-1-1147","orderNum":10,"bindId":null},{"id":1148,"knlg":"老人要有一个场所让他们不容易跌倒","pid":1147,"path":"0-1-1147-1148","orderNum":1,"bindId":null},{"id":1150,"knlg":"编辑器","pid":154,"path":"0-1-154-1150","orderNum":14,"bindId":null},{"id":1152,"knlg":"框架","pid":154,"path":"0-1-154-1152","orderNum":15,"bindId":null},{"id":1159,"knlg":"<my定义>选择器{(类似css的选择器)} <my定义>简写提示{(qs)}","pid":1109,"path":"0-1-154-155-1096-1109-1159","orderNum":3,"bindId":null},{"id":1160,"knlg":"选择单个\n<my示例>\n<body>\n        <div>\n                <span></span>\n                <span>1</span>\n        </div>\n        <div>\n                <span></span>\n                <span>1</span>\n        </div>\n        <script>\n                'use strict';\n                let span=document.querySelector('div>span:last-child');\n                console.log(span)\n\n        </script>\n</body>\n</my示例>","pid":1159,"path":"0-1-154-155-1096-1109-1159-1160","orderNum":1,"bindId":null},{"id":1161,"knlg":"选择多个 <my定义>遍历简便方法{(forEach)}\n<my示例>\n<body>\n        <div>\n                <span></span>\n                <span>1</span>\n        </div>\n        <div>\n                <span></span>\n                <span>1</span>\n        </div>\n        <script>\n                'use strict';\n                document.querySelectorAll('div>span:last-child')\n                        .forEach(value => value.innerHTML = 'tgfgtf')\n\n\n        </script>\n</body>\n</my示例>","pid":1159,"path":"0-1-154-155-1096-1109-1159-1161","orderNum":2,"bindId":null},{"id":1162,"knlg":"onmouseenter","pid":1164,"path":"0-1-154-155-196-1164-1162","orderNum":1,"bindId":null},{"id":1163,"knlg":"鼠标从子元素移到父元素上也会触发","pid":1162,"path":"0-1-154-155-196-1164-1162-1163","orderNum":1,"bindId":null},{"id":1164,"knlg":"鼠标移到某个元素上触发","pid":196,"path":"0-1-154-155-196-1164","orderNum":4,"bindId":null},{"id":1165,"knlg":"onmouseover","pid":1164,"path":"0-1-154-155-196-1164-1165","orderNum":2,"bindId":null},{"id":1166,"knlg":"鼠标从子元素移到父元素上不会触发","pid":1165,"path":"0-1-154-155-196-1164-1165-1166","orderNum":1,"bindId":null},{"id":1167,"knlg":"开关\n<my示例>\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n        <meta charset=\"UTF-8\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Document</title>\n\n        <style>\n                #switch{\n                        width: 40px;\n                        height: 20px;\n                        border-radius: 10px;\n                        padding: 1px;\n                        background-color: gray;\n                        display: flex;\n                        transition: .4s;\n                }\n                #switch>span{\n                        width: 20px;\n                        height: 20px;\n                        border-radius: 50%;\n                        background-color: white;\n                        transition: .4s;\n                }\n                #switch.on{\n                        background-color: green;\n                }\n                #switch.on>span{\n                        margin-left: 20px;\n                }\n        </style>\n\n</head>\n\n<body>\n        <div id=\"switch\" class=\"on\">\n                \n                <span></span>\n        </div>\n        <script>\n                'use strict';\n\n                document.querySelector('#switch').onclick=function(){\n                        this.classList.toggle('on')\n                }\n        </script>\n</body>\n\n</html>\n</my示例>","pid":774,"path":"0-1-154-44-774-1167","orderNum":2,"bindId":null},{"id":1169,"knlg":"弹性布局","pid":44,"path":"0-1-154-44-1169","orderNum":11,"bindId":null},{"id":1170,"knlg":"默认","pid":1169,"path":"0-1-154-44-1169-1170","orderNum":1,"bindId":null},{"id":1171,"knlg":"不自动换行","pid":1170,"path":"0-1-154-44-1169-1170-1171","orderNum":1,"bindId":null},{"id":1172,"knlg":"flex-shrink不为0","pid":1170,"path":"0-1-154-44-1169-1170-1172","orderNum":2,"bindId":null},{"id":1173,"knlg":"拷贝对象简单方法","pid":206,"path":"0-1-154-206-1173","orderNum":39,"bindId":null},{"id":1174,"knlg":"JSON.stringify之后 JSON.parse","pid":1173,"path":"0-1-154-206-1173-1174","orderNum":1,"bindId":null},{"id":1185,"knlg":"临时用电","pid":989,"path":"0-1-1031-989-1185","orderNum":11,"bindId":null},{"id":1186,"knlg":"三相四线制","pid":1185,"path":"0-1-1031-989-1185-1186","orderNum":1,"bindId":null},{"id":1187,"knlg":"采用<my定义>三级配电系统{(总配、分配、开关箱)}\n<my来源>工程建设标准强制性条文2013 房屋建筑部分 10-1-1 1.0.3</my来源>","pid":1186,"path":"0-1-1031-989-1185-1186-1187","orderNum":1,"bindId":null},{"id":1188,"knlg":"电学","pid":1,"path":"0-1-1188","orderNum":11,"bindId":null},{"id":1189,"knlg":"零线形成方式","pid":1188,"path":"0-1-1188-1189","orderNum":1,"bindId":null},{"id":1190,"knlg":"3条相线<my定义>星形连接{(三条相线扭在一起)}形成接近0电压的线","pid":1189,"path":"0-1-1188-1189-1190","orderNum":1,"bindId":null},{"id":1191,"knlg":"零线确保零电压措施","pid":1188,"path":"0-1-1188-1191","orderNum":2,"bindId":null},{"id":1192,"knlg":"在<my定义>二次侧{(电源输出端, 也就是进户线处)}接地","pid":1191,"path":"0-1-1188-1191-1192","orderNum":1,"bindId":null},{"id":1193,"knlg":"采用<my定义>TN-S接零保护系统{(工作零线与保护零线(地线)分开设置)}\n<my来源>工程建设标准强制性条文2013 房屋建筑部分 10-1-1 1.0.3</my来源>","pid":1186,"path":"0-1-1031-989-1185-1186-1193","orderNum":2,"bindId":null},{"id":1194,"knlg":"采用<my定义>二级漏电保护系统{(总配和开关箱都有漏电保护)}\n<my来源>工程建设标准强制性条文2013 房屋建筑部分 10.1.1 1.0.3</my来源>","pid":1186,"path":"0-1-1031-989-1185-1186-1194","orderNum":3,"bindId":null},{"id":1195,"knlg":"临时用电组织设计","pid":1185,"path":"0-1-1031-989-1185-1195","orderNum":2,"bindId":null},{"id":1196,"knlg":"设计后","pid":1195,"path":"0-1-1031-989-1185-1195-1196","orderNum":1,"bindId":null},{"id":1197,"knlg":"电气工程技术人员编制\n<my来源>工程建设标准强制性条文2013 房屋建筑部分 10-1-1 3.1.4</my来源>","pid":1196,"path":"0-1-1031-989-1185-1195-1196-1197","orderNum":1,"bindId":null},{"id":1198,"knlg":"相关部门(供电局)审核\n<my来源>工程建设标准强制性条文2013 房屋建筑部分 10-1-1 3.1.4</my来源>","pid":1196,"path":"0-1-1031-989-1185-1195-1196-1198","orderNum":2,"bindId":null},{"id":1199,"knlg":"具有法人资格的施工企业负责人批准\n<my来源>工程建设标准强制性条文2013 房屋建筑部分 10-1-1 3.1.4</my来源>","pid":1196,"path":"0-1-1031-989-1185-1195-1196-1199","orderNum":3,"bindId":null},{"id":1200,"knlg":"变更后","pid":1195,"path":"0-1-1031-989-1185-1195-1200","orderNum":2,"bindId":null},{"id":1201,"knlg":"电气工程技术人员编制\n<my来源>工程建设标准强制性条文2013 房屋建筑部分 10-1-1 3.1.4</my来源>","pid":1200,"path":"0-1-1031-989-1185-1195-1200-1201","orderNum":1,"bindId":null},{"id":1202,"knlg":"相关部门(供电局)审核\n<my来源>工程建设标准强制性条文2013 房屋建筑部分 10-1-1 3.1.4</my来源>","pid":1200,"path":"0-1-1031-989-1185-1195-1200-1202","orderNum":2,"bindId":null},{"id":1203,"knlg":"具有法人资格的施工企业负责人批准\n<my来源>工程建设标准强制性条文2013 房屋建筑部分 10-1-1 3.1.4</my来源>","pid":1200,"path":"0-1-1031-989-1185-1195-1200-1203","orderNum":3,"bindId":null},{"id":1204,"knlg":"补充有关图纸\n<my来源>工程建设标准强制性条文2013 房屋建筑部分 10-1-1 3.1.4</my来源>","pid":1200,"path":"0-1-1031-989-1185-1195-1200-1204","orderNum":4,"bindId":null},{"id":1205,"knlg":"使用前","pid":1185,"path":"0-1-1031-989-1185-1205","orderNum":3,"bindId":null},{"id":1206,"knlg":"经编制部门、审核部门、批准部门、使用部门共同验收成功\n<my来源>工程建设标准强制性条文2013 房屋建筑部分 10-1-1 3.1.5</my来源>","pid":1205,"path":"0-1-1031-989-1185-1205-1206","orderNum":1,"bindId":null},{"id":1207,"knlg":"定期检查","pid":1185,"path":"0-1-1031-989-1185-1207","orderNum":4,"bindId":null},{"id":1208,"knlg":"按照分部、分项工程进行\n<my来源>工程建设标准强制性条文2013 房屋建筑部分 10-1-1 3.3.4</my来源>","pid":1207,"path":"0-1-1031-989-1185-1207-1208","orderNum":1,"bindId":null},{"id":1209,"knlg":"履行复查验收手续\n<my来源>工程建设标准强制性条文2013 房屋建筑部分 10-1-1 3.3.4</my来源>","pid":1207,"path":"0-1-1031-989-1185-1207-1209","orderNum":2,"bindId":null},{"id":1210,"knlg":"TN-S接零保护系统要求","pid":1185,"path":"0-1-1031-989-1185-1210","orderNum":5,"bindId":null},{"id":1211,"knlg":"电气设备金属外壳必须与保护零线连接","pid":1210,"path":"0-1-1031-989-1185-1210-1211","orderNum":1,"bindId":null},{"id":1212,"knlg":"保护零线由工作接地线 或 配电室(总配电箱)\n电源处零线 或 总漏电保护器电源处零线引出\n<my来源>工程建设标准强制性条文2013 房屋建筑部分 10-1-1 5.1.1</my来源>","pid":1210,"path":"0-1-1031-989-1185-1210-1212","orderNum":2,"bindId":null},{"id":1213,"knlg":"保护零线重复接地要求","pid":1185,"path":"0-1-1031-989-1185-1213","orderNum":6,"bindId":null},{"id":1214,"knlg":"总配电箱处","pid":1213,"path":"0-1-1031-989-1185-1213-1214","orderNum":1,"bindId":null},{"id":1215,"knlg":"配电系统中间（分配）","pid":1213,"path":"0-1-1031-989-1185-1213-1215","orderNum":2,"bindId":null},{"id":1216,"knlg":"配电系统末端（开关箱）","pid":1213,"path":"0-1-1031-989-1185-1213-1216","orderNum":3,"bindId":null},{"id":1217,"knlg":"<my定义>PE线{(保护零线，接地线)}要求","pid":1185,"path":"0-1-1031-989-1185-1217","orderNum":7,"bindId":null},{"id":1218,"knlg":"严禁装开关或熔断器及断线","pid":1217,"path":"0-1-1031-989-1185-1217-1218","orderNum":1,"bindId":null},{"id":1219,"knlg":"严禁通过工作电流","pid":1217,"path":"0-1-1031-989-1185-1217-1219","orderNum":2,"bindId":null},{"id":1221,"knlg":"读取属性","pid":1226,"path":"0-1-154-155-1226-1221","orderNum":9,"bindId":null},{"id":1222,"knlg":"新方法","pid":1221,"path":"0-1-154-155-1226-1221-1222","orderNum":1,"bindId":null},{"id":1223,"knlg":"旧方法","pid":1221,"path":"0-1-154-155-1226-1221-1223","orderNum":2,"bindId":null},{"id":1224,"knlg":"dom对象.属性名","pid":1222,"path":"0-1-154-155-1226-1221-1222-1224","orderNum":1,"bindId":null},{"id":1225,"knlg":"dom对象.getAttribute('属性名')","pid":1223,"path":"0-1-154-155-1226-1221-1223-1225","orderNum":1,"bindId":null},{"id":1226,"knlg":"属性操作","pid":155,"path":"0-1-154-155-1226","orderNum":10,"bindId":null},{"id":1227,"knlg":"增加或修改属性","pid":1226,"path":"0-1-154-155-1226-1227","orderNum":2,"bindId":null},{"id":1228,"knlg":"新方法","pid":1227,"path":"0-1-154-155-1226-1227-1228","orderNum":1,"bindId":null},{"id":1230,"knlg":"旧方法","pid":1227,"path":"0-1-154-155-1226-1227-1230","orderNum":2,"bindId":null},{"id":1231,"knlg":"dom对象.属性名=值","pid":1228,"path":"0-1-154-155-1226-1227-1228-1231","orderNum":1,"bindId":null},{"id":1232,"knlg":"dom对象.setAttribute('属性名',值)","pid":1230,"path":"0-1-154-155-1226-1227-1230-1232","orderNum":1,"bindId":null},{"id":1233,"knlg":"删除属性","pid":1226,"path":"0-1-154-155-1226-1233","orderNum":3,"bindId":null},{"id":1234,"knlg":"新方法","pid":1233,"path":"0-1-154-155-1226-1233-1234","orderNum":1,"bindId":null},{"id":1235,"knlg":"旧方法","pid":1233,"path":"0-1-154-155-1226-1233-1235","orderNum":2,"bindId":null},{"id":1236,"knlg":"dom对象.属性名=''","pid":1234,"path":"0-1-154-155-1226-1233-1234-1236","orderNum":1,"bindId":null},{"id":1237,"knlg":"dom对象.removeAttribute('属性名')","pid":1235,"path":"0-1-154-155-1226-1233-1235-1237","orderNum":1,"bindId":null},{"id":1238,"knlg":"判断属性是否存在","pid":1226,"path":"0-1-154-155-1226-1238","orderNum":4,"bindId":null},{"id":1239,"knlg":"新方法","pid":1238,"path":"0-1-154-155-1226-1238-1239","orderNum":1,"bindId":null},{"id":1240,"knlg":"dom对象.属性名==''?","pid":1239,"path":"0-1-154-155-1226-1238-1239-1240","orderNum":1,"bindId":null},{"id":1241,"knlg":"旧方法","pid":1238,"path":"0-1-154-155-1226-1238-1241","orderNum":2,"bindId":null},{"id":1242,"knlg":"dom对象.hasAttribute('属性名')?","pid":1241,"path":"0-1-154-155-1226-1238-1241-1242","orderNum":1,"bindId":null},{"id":1243,"knlg":"多选框是否选中","pid":155,"path":"0-1-154-155-1243","orderNum":10,"bindId":null},{"id":1244,"knlg":"dom对象.checked","pid":1243,"path":"0-1-154-155-1243-1244","orderNum":1,"bindId":null},{"id":1245,"knlg":"禁用","pid":155,"path":"0-1-154-155-1245","orderNum":11,"bindId":null},{"id":1246,"knlg":"dom对象.disabled=true","pid":1245,"path":"0-1-154-155-1245-1246","orderNum":1,"bindId":null},{"id":1247,"knlg":"单选框、多选框状态变化时触发","pid":196,"path":"0-1-154-155-196-1247","orderNum":5,"bindId":null},{"id":1248,"knlg":"onchange","pid":1247,"path":"0-1-154-155-196-1247-1248","orderNum":1,"bindId":null},{"id":1249,"knlg":"禁用鼠标事件","pid":44,"path":"0-1-154-44-1249","orderNum":12,"bindId":null},{"id":1250,"knlg":"pointer-events:none","pid":1249,"path":"0-1-154-44-1249-1250","orderNum":1,"bindId":null},{"id":1251,"knlg":"span完成的按钮\n<my示例>\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n        <meta charset=\"UTF-8\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Document</title>\n\n        <style>\n                .btn {\n                        display: inline-block;\n                        background-color: yellowgreen;\n                        border-radius: 4px;\n                        transition: .2s;\n                        padding: 5px 50px;\n                        color: white;\n                        user-select: none;\n\n                }\n\n                .btn:active {\n                        opacity: .7;\n                }\n\n                .btn.disabled {\n                        background-color: lightgray;\n                        pointer-events: none;\n                }\n        </style>\n\n</head>\n\n<body>\n        <span class=\"btn disabled\">注册</span>\n        <span class=\"btn\">注册</span>\n</body>\n\n</html>\n</my示例>","pid":774,"path":"0-1-154-44-774-1251","orderNum":3,"bindId":null},{"id":1252,"knlg":"自定义属性 <my定义>定义方式{(html元素中写 data-属性名=\"内容\")}\n<my示例>\n<body>\n        <span class=\"btn\" data-gu=\"内容\">注册</span>\n\n        <script>\n                let btn=document.querySelector('.btn')\n                console.log(btn.dataset.gu)\n        </script>\n</body>\n</my示例>","pid":155,"path":"0-1-154-155-1252","orderNum":12,"bindId":null},{"id":1253,"knlg":"存储位置","pid":1252,"path":"0-1-154-155-1252-1253","orderNum":1,"bindId":null},{"id":1254,"knlg":"dom对象.dataset中","pid":1253,"path":"0-1-154-155-1252-1253-1254","orderNum":1,"bindId":null},{"id":1261,"knlg":"实际操作","pid":1031,"path":"0-1-1031-1261","orderNum":3,"bindId":null},{"id":1262,"knlg":"<my定义>成品保护{(本工序会影响到前一道工序外观的情\n况下要对前一道工序做保护)}","pid":989,"path":"0-1-1031-989-1262","orderNum":1,"bindId":null},{"id":1263,"knlg":"防水层","pid":989,"path":"0-1-1031-989-1263","orderNum":12,"bindId":null},{"id":1264,"knlg":"不能有渗漏或积水现象<my来源>验收规范汇编 7-9</my来源>","pid":1263,"path":"0-1-1031-989-1263-1264","orderNum":1,"bindId":null},{"id":1265,"knlg":"平瓦","pid":2001,"path":"0-1-1031-989-2001-1265","orderNum":13,"bindId":null},{"id":1266,"knlg":"必须铺装牢固，抗震设防或坡度大于\n50%的屋面，要采取固定加强措施（强制性）<my来源>验收规范汇编7.1.5</my来源>","pid":1265,"path":"0-1-1031-989-2001-1265-1266","orderNum":1,"bindId":null},{"id":1271,"knlg":"输入框事件","pid":196,"path":"0-1-154-155-196-1271","orderNum":6,"bindId":null},{"id":1272,"knlg":"获得焦点onfocus\n<my示例>\n<div id=\"banner\">\n\n        <div>\n                <input id=\"ip\" type=\"text\">\n        </div>\n</div>\n<script>\n        const ip=document.getElementById('ip');\n        ip.onfocus=function(){\n                console.log('获得焦点')\n        }\n        ip.onblur=function(){\n                console.log('失去焦点')\n        }\n</script>\n</my示例>","pid":1271,"path":"0-1-154-155-196-1271-1272","orderNum":1,"bindId":null},{"id":1273,"knlg":"失去焦点onblur","pid":1271,"path":"0-1-154-155-196-1271-1273","orderNum":2,"bindId":null},{"id":1274,"knlg":"变更内容后失去焦点或按\n回车触发onchange <my定义>注意{(两件事情都要满足才触发)}\n<my示例>\n<div id=\"banner\">\n\n        <div>\n                <input id=\"ip\" type=\"text\">\n        </div>\n</div>\n<script>\n        const ip=document.getElementById('ip');\n\n        ip.onchange=function(){\n                console.log('输入框值变更为',ip.value);\n        }\n</script>\n</my示例>","pid":1271,"path":"0-1-154-155-196-1271-1274","orderNum":3,"bindId":null},{"id":1275,"knlg":"输入框值变化后立即触发oninput\n<my示例>\n<body>\n        <div id=\"banner\">\n\n                <div>\n                        <input id=\"ip\" type=\"text\">\n                </div>\n        </div>\n        <script>\n                const ip=document.getElementById('ip');\n\n                ip.oninput=function(){\n                        console.log('输入框值为',ip.value);\n                }\n        </script>\n</body>\n</my示例>","pid":1271,"path":"0-1-154-155-196-1271-1275","orderNum":4,"bindId":null},{"id":1276,"knlg":"按下键触发onkeydown","pid":1279,"path":"0-1-154-155-196-1271-1279-1276","orderNum":5,"bindId":null},{"id":1277,"knlg":"松开键触发onkeyup 常用","pid":1279,"path":"0-1-154-155-196-1271-1279-1277","orderNum":6,"bindId":null},{"id":1278,"knlg":"松开松开键触发onkeypress, 效果同keyup","pid":1279,"path":"0-1-154-155-196-1271-1279-1278","orderNum":7,"bindId":null},{"id":1279,"knlg":"键盘事件","pid":1271,"path":"0-1-154-155-196-1271-1279","orderNum":8,"bindId":null},{"id":1280,"knlg":"事件对象","pid":1279,"path":"0-1-154-155-196-1271-1279-1280","orderNum":4,"bindId":null},{"id":1281,"knlg":"一般通过key或keyCode来区分按键\n<my示例>\n<body>\n        <div id=\"banner\">\n\n                <div>\n                        <input id=\"ip\" type=\"text\">\n                </div>\n        </div>\n        <script>\n                const ip=document.getElementById('ip');\n\n                ip.onkeyup=function(e){\n                        if(e.key=='Enter'){\n                                console.log(1);\n                        }\n                }\n        </script>\n</body>\n</my示例>","pid":1280,"path":"0-1-154-155-196-1271-1279-1280-1281","orderNum":1,"bindId":null},{"id":1282,"knlg":"css属性都变成驼峰命名的变量\n<my示例>\nborder-color变成borderColor\n</my示例>","pid":1102,"path":"0-1-154-155-1102-1282","orderNum":2,"bindId":null},{"id":1283,"knlg":"双标签中的内容","pid":155,"path":"0-1-154-155-1283","orderNum":13,"bindId":null},{"id":1284,"knlg":"innerHTML获取的是内部的html代码","pid":1283,"path":"0-1-154-155-1283-1284","orderNum":1,"bindId":null},{"id":1285,"knlg":"innerText获取的是内部文字, <br>也会变成\\n","pid":1283,"path":"0-1-154-155-1283-1285","orderNum":2,"bindId":null},{"id":1286,"knlg":"兄弟元素","pid":1110,"path":"0-1-154-155-1096-1109-1114-1110-1286","orderNum":2,"bindId":null},{"id":1287,"knlg":"nextElementSibling","pid":1286,"path":"0-1-154-155-1096-1109-1114-1110-1286-1287","orderNum":1,"bindId":null},{"id":1288,"knlg":"解构在查找dom元素时的妙用\n<my示例>\n<body>\n        <div id=\"box\">\n                <button>-</button>\n                <span>5</span>\n                <button>+</button>\n        </div>\n        <script>\n                const [minus,span,add]=document.getElementById('box').children;\n\n                minus.onclick=function(){\n                        span.innerHTML>1&&span.innerText--;\n                }\n                add.onclick=function(){\n                        span.innerText++;\n                }\n\n\n        </script>\n</body>\n</my示例>","pid":155,"path":"0-1-154-155-1288","orderNum":14,"bindId":null},{"id":1290,"knlg":"表格<my切换>table</my切换>","pid":44,"path":"0-1-154-44-1290","orderNum":13,"bindId":null},{"id":1291,"knlg":"让表格单元格的边框合为一个","pid":1290,"path":"0-1-154-44-1290-1291","orderNum":1,"bindId":null},{"id":1292,"knlg":"border-collapse:collapse;","pid":1291,"path":"0-1-154-44-1290-1291-1292","orderNum":1,"bindId":null},{"id":1293,"knlg":"交流原因","pid":1147,"path":"0-1-1147-1293","orderNum":2,"bindId":null},{"id":1294,"knlg":"分享快乐","pid":1293,"path":"0-1-1147-1293-1294","orderNum":1,"bindId":null},{"id":1295,"knlg":"抱怨","pid":1293,"path":"0-1-1147-1293-1295","orderNum":2,"bindId":null},{"id":1296,"knlg":"实际说不出快乐原因","pid":1294,"path":"0-1-1147-1293-1294-1296","orderNum":1,"bindId":null},{"id":1297,"knlg":"实际问题都知道要怎么解决","pid":1295,"path":"0-1-1147-1293-1295-1297","orderNum":1,"bindId":null},{"id":1298,"knlg":"要别人帮忙","pid":1293,"path":"0-1-1147-1293-1298","orderNum":3,"bindId":null},{"id":1299,"knlg":"实际认为别人有不帮的可能, 无法确定别人一定帮","pid":1298,"path":"0-1-1147-1293-1298-1299","orderNum":1,"bindId":null},{"id":1414,"knlg":"事件冒泡","pid":155,"path":"0-1-154-155-1414","orderNum":15,"bindId":null},{"id":1415,"knlg":"子元素的事件会传到父元素上,\n无论位置关系如何","pid":1414,"path":"0-1-154-155-1414-1415","orderNum":1,"bindId":null},{"id":1416,"knlg":"获取触发事件的元素","pid":1414,"path":"0-1-154-155-1414-1416","orderNum":2,"bindId":null},{"id":1417,"knlg":"e.target","pid":1416,"path":"0-1-154-155-1414-1416-1417","orderNum":1,"bindId":null},{"id":1418,"knlg":"事件委托","pid":155,"path":"0-1-154-155-1418","orderNum":16,"bindId":null},{"id":1419,"knlg":"利用事件委托机制实现父元素代理子元素的事件","pid":1418,"path":"0-1-154-155-1418-1419","orderNum":1,"bindId":null},{"id":1421,"knlg":"获得触发事件的元素标签名","pid":1416,"path":"0-1-154-155-1414-1416-1421","orderNum":2,"bindId":null},{"id":1422,"knlg":"e.tagName","pid":1421,"path":"0-1-154-155-1414-1416-1421-1422","orderNum":1,"bindId":null},{"id":1423,"knlg":"阻止默认事件","pid":155,"path":"0-1-154-155-1423","orderNum":17,"bindId":null},{"id":1424,"knlg":"可用来阻止超链接默认点击跳转","pid":1423,"path":"0-1-154-155-1423-1424","orderNum":1,"bindId":null},{"id":1425,"knlg":"e.preventDefault()","pid":1424,"path":"0-1-154-155-1423-1424-1425","orderNum":1,"bindId":null},{"id":1426,"knlg":"阻止事件继续冒泡","pid":155,"path":"0-1-154-155-1426","orderNum":18,"bindId":null},{"id":1427,"knlg":"e.stopPropagation()","pid":1426,"path":"0-1-154-155-1426-1427","orderNum":1,"bindId":null},{"id":1428,"knlg":"鼠标坐标值","pid":155,"path":"0-1-154-155-1428","orderNum":19,"bindId":null},{"id":1429,"knlg":"e.x, e.y 相当于e.clientX 和 e.clientY","pid":1428,"path":"0-1-154-155-1428-1429","orderNum":1,"bindId":null},{"id":1430,"knlg":"e.offsetX和e.offsetY代表点击\n距离所在元素的左上角的偏移量","pid":1428,"path":"0-1-154-155-1428-1430","orderNum":2,"bindId":null},{"id":1431,"knlg":"e.screenX和e.screenY代表点击\n距离银幕的左上角的位置","pid":1428,"path":"0-1-154-155-1428-1431","orderNum":3,"bindId":null},{"id":1432,"knlg":"滚动事件","pid":155,"path":"0-1-154-155-1432","orderNum":20,"bindId":null},{"id":1433,"knlg":"滚动位置","pid":1432,"path":"0-1-154-155-1432-1433","orderNum":1,"bindId":null},{"id":1434,"knlg":"document.documentElement.scrollTop||document.body.scrollTop\n<my示例>\n        <style>\n                #box {\n                        background-color: olive;\n                        height: 2000px;\n                }\n\n                button {\n                        position: fixed;\n                        bottom: 50%;\n                        right: 0;\n                        display: none;\n                }\n        </style>\n\n</head>\n\n<body>\n        <div id=\"box\"></div>\n        <button>回到顶部</button>\n        <script>\n                const btn = document.querySelector('button')\n\n                btn.onclick = function () {\n                        document.documentElement.scrollTop = document.body.scrollTop = 0;\n                }\n                window.onscroll = function (e) {\n                        let y = document.documentElement.scrollTop || document.body.scrollTop;\n                        if (y > 500) {\n                                btn.style.display = 'inline';\n                        } else {\n                                btn.style.display = '';\n                        }\n                }\n        </script>\n</body>\n</my示例>","pid":1433,"path":"0-1-154-155-1432-1433-1434","orderNum":1,"bindId":null},{"id":1435,"knlg":"事件监听器","pid":155,"path":"0-1-154-155-1435","orderNum":21,"bindId":null},{"id":1436,"knlg":"返回最上面\n<my示例>\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n        <meta charset=\"UTF-8\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Document</title>\n\n        <style>\n                #box {\n                        background-color: olive;\n                        height: 2000px;\n                }\n\n                button {\n                        position: fixed;\n                        bottom: 50%;\n                        right: 0;\n                        display: none;\n                }\n        </style>\n\n</head>\n\n<body>\n        <div id=\"box\"></div>\n        <button>回到顶部</button>\n        <script>\n                const btn = document.querySelector('button')\n\n                btn.onclick = function () {\n                        document.documentElement.scrollTop = document.body.scrollTop = 0;\n                }\n                window.onscroll = function (e) {\n                        let y = document.documentElement.scrollTop || document.body.scrollTop;\n                        if (y > 500) {\n                                btn.style.display = 'inline';\n                        } else {\n                                btn.style.display = '';\n                        }\n                }\n        </script>\n</body>\n\n</html>\n</my示例>","pid":774,"path":"0-1-154-44-774-1436","orderNum":4,"bindId":null},{"id":1437,"knlg":"为同一个事件添加多个处理函数","pid":1435,"path":"0-1-154-155-1435-1437","orderNum":1,"bindId":null},{"id":1438,"knlg":"对象.addEventListener\n<my示例>\n<button>回到顶部</button>\n<script>\n        const btn = document.querySelector('button')\n\n        btn.addEventListener('click',function () {\n                console.log('11111')\n        })\n        btn.addEventListener('click',function () {\n                console.log('22222')\n        })\n        btn.addEventListener('click',function () {\n                console.log('33333')\n        })\n        \n</script>\n</my示例>","pid":1435,"path":"0-1-154-155-1435-1438","orderNum":2,"bindId":null},{"id":1439,"knlg":"删除事件监听\n<my示例>\n<button>回到顶部</button>\n<script>\n        const btn = document.querySelector('button')\n\n        let a = function () {\n                console.log('11111')\n        };\n        btn.addEventListener('click', a);\n\n        btn.removeEventListener('click', a);\n\n</script>\n</my示例>","pid":1435,"path":"0-1-154-155-1435-1439","orderNum":3,"bindId":null},{"id":1440,"knlg":"手动创建dom","pid":155,"path":"0-1-154-155-1440","orderNum":22,"bindId":null},{"id":1441,"knlg":"性能最好, 省去了浏览器解析HTML代码的步骤","pid":1440,"path":"0-1-154-155-1440-1441","orderNum":1,"bindId":null},{"id":1442,"knlg":"document.createElement\n<my示例>\n<script>\n        \n        const a=document.createElement('a');\n        a.href='http://www.baidu.com';\n        a.target='blank';\n        a.id=\"gty\";\n        a.className=\"ytfdr\"\n        a.innerHTML=\"ytfdcy\";\n\n        document.body.appendChild(a);\n\n</script>\n</my示例>","pid":1440,"path":"0-1-154-155-1440-1442","orderNum":2,"bindId":null},{"id":1443,"knlg":"文档片段","pid":155,"path":"0-1-154-155-1443","orderNum":23,"bindId":null},{"id":1444,"knlg":"document.createDocumentFragment()\n<my示例>\n<script>\n        \n        let frag=document.createDocumentFragment();\n        let a=document.createElement('a');\n        a.href='http://www.baidu.com';\n        a.target='blank';\n        a.innerHTML=\"ytufgtyf\"\n        frag.appendChild(a);\n\n        a=document.createElement('a');\n        a.href='http://www.baidu.com';\n        a.target='blank';\n        a.innerHTML=\"ytufgtyf\"\n        frag.appendChild(a);\n\n        a=document.createElement('a');\n        a.href='http://www.baidu.com';\n        a.target='blank';\n        a.innerHTML=\"ytufgtyf\"\n        frag.appendChild(a)\n\n\n        document.body.appendChild(frag);\n\n</script>\n</my示例>","pid":1443,"path":"0-1-154-155-1443-1444","orderNum":1,"bindId":null},{"id":1454,"knlg":"BOM","pid":154,"path":"0-1-154-1454","orderNum":16,"bindId":null},{"id":1455,"knlg":"操作浏览器的js代码","pid":1454,"path":"0-1-154-1454-1455","orderNum":1,"bindId":null},{"id":1456,"knlg":"通过代码跳转页面","pid":1454,"path":"0-1-154-1454-1456","orderNum":2,"bindId":null},{"id":1457,"knlg":"window.open","pid":1456,"path":"0-1-154-1454-1456-1457","orderNum":1,"bindId":null},{"id":1458,"knlg":"网易易盾  验证码","pid":154,"path":"0-1-154-1458","orderNum":17,"bindId":null},{"id":1459,"knlg":"在新标签页中打开","pid":1457,"path":"0-1-154-1454-1456-1457-1459","orderNum":1,"bindId":null},{"id":1460,"knlg":"window.open('http://www.baidu.com','target')","pid":1459,"path":"0-1-154-1454-1456-1457-1459-1460","orderNum":1,"bindId":null},{"id":1462,"knlg":"在当前页面打开","pid":1457,"path":"0-1-154-1454-1456-1457-1462","orderNum":2,"bindId":null},{"id":1463,"knlg":"window.open('http://www.baidu.com','_self')","pid":1462,"path":"0-1-154-1454-1456-1457-1462-1463","orderNum":1,"bindId":null},{"id":1464,"knlg":"获取浏览器的属性","pid":1454,"path":"0-1-154-1454-1464","orderNum":3,"bindId":null},{"id":1465,"knlg":"console.log(window.navigator)","pid":1464,"path":"0-1-154-1454-1464-1465","orderNum":1,"bindId":null},{"id":1466,"knlg":"查看系统","pid":1464,"path":"0-1-154-1454-1464-1466","orderNum":2,"bindId":null},{"id":1467,"knlg":"navigator.platform","pid":1466,"path":"0-1-154-1454-1464-1466-1467","orderNum":1,"bindId":null},{"id":1469,"knlg":"浏览器的网址信息","pid":1454,"path":"0-1-154-1454-1469","orderNum":4,"bindId":null},{"id":1470,"knlg":"console.log(window.location)","pid":1469,"path":"0-1-154-1454-1469-1470","orderNum":1,"bindId":null},{"id":1471,"knlg":"读取url中的查询字符串\n<my示例>\nconst params=new URLSearchParams(location.search);\nconst name=params.get('name');\nconsole.log(name)\n</my示例>","pid":1469,"path":"0-1-154-1454-1469-1471","orderNum":2,"bindId":null},{"id":1473,"knlg":"刷新","pid":1469,"path":"0-1-154-1454-1469-1473","orderNum":3,"bindId":null},{"id":1474,"knlg":"location.reload()","pid":1473,"path":"0-1-154-1454-1469-1473-1474","orderNum":1,"bindId":null},{"id":1475,"knlg":"替换浏览器中的网址","pid":1469,"path":"0-1-154-1454-1469-1475","orderNum":4,"bindId":null},{"id":1476,"knlg":"location.replace('http://www.baidu.com');","pid":1475,"path":"0-1-154-1454-1469-1475-1476","orderNum":1,"bindId":null},{"id":1477,"knlg":"历史操作","pid":1454,"path":"0-1-154-1454-1477","orderNum":5,"bindId":null},{"id":1478,"knlg":"前进","pid":1477,"path":"0-1-154-1454-1477-1478","orderNum":1,"bindId":null},{"id":1479,"knlg":"history.go(1) 可以前进多页","pid":1478,"path":"0-1-154-1454-1477-1478-1479","orderNum":1,"bindId":null},{"id":1480,"knlg":"后退","pid":1477,"path":"0-1-154-1454-1477-1480","orderNum":2,"bindId":null},{"id":1481,"knlg":"history.go(-1) 可以后退多页","pid":1480,"path":"0-1-154-1454-1477-1480-1481","orderNum":1,"bindId":null},{"id":1482,"knlg":"刷新","pid":1477,"path":"0-1-154-1454-1477-1482","orderNum":3,"bindId":null},{"id":1483,"knlg":"history.go(0)","pid":1482,"path":"0-1-154-1454-1477-1482-1483","orderNum":1,"bindId":null},{"id":1495,"knlg":".click()实际上是给查找到的所有元素添加\n一个事件监听","pid":54,"path":"0-1-154-1152-54-1495","orderNum":15,"bindId":null},{"id":1517,"knlg":"https://jquery.com/download/","pid":149,"path":"0-1-154-1152-54-149-1517","orderNum":1,"bindId":null},{"id":1518,"knlg":"https://releases.jquery.com","pid":149,"path":"0-1-154-1152-54-149-1518","orderNum":2,"bindId":null},{"id":1519,"knlg":"可下载压缩过的和未压缩过的","pid":149,"path":"0-1-154-1152-54-149-1519","orderNum":3,"bindId":null},{"id":1520,"knlg":"文档","pid":54,"path":"0-1-154-1152-54-1520","orderNum":16,"bindId":null},{"id":1521,"knlg":"https://jquery.cuishifeng.cn/","pid":1520,"path":"0-1-154-1152-54-1520-1521","orderNum":1,"bindId":null},{"id":1522,"knlg":"样式","pid":54,"path":"0-1-154-1152-54-1522","orderNum":17,"bindId":null},{"id":1523,"knlg":"$(selector).css('background-color','orange')","pid":1524,"path":"0-1-154-1152-54-1522-1524-1523","orderNum":1,"bindId":null},{"id":1524,"knlg":"修改一行","pid":1522,"path":"0-1-154-1152-54-1522-1524","orderNum":2,"bindId":null},{"id":1525,"knlg":"修改多行","pid":1522,"path":"0-1-154-1152-54-1522-1525","orderNum":2,"bindId":null},{"id":1526,"knlg":"$(selector).css({\n        'background-color': 'orange',\n        'border-radius': '50%'\n})","pid":1525,"path":"0-1-154-1152-54-1522-1525-1526","orderNum":1,"bindId":null},{"id":1527,"knlg":"获取样式","pid":1522,"path":"0-1-154-1152-54-1522-1527","orderNum":3,"bindId":null},{"id":1528,"knlg":"$(selector).css('background-color')","pid":1527,"path":"0-1-154-1152-54-1522-1527-1528","orderNum":1,"bindId":null},{"id":1529,"knlg":"操作类","pid":54,"path":"0-1-154-1152-54-1529","orderNum":18,"bindId":null},{"id":1530,"knlg":"变量前最好加$ , 如$this","pid":54,"path":"0-1-154-1152-54-1530","orderNum":19,"bindId":null},{"id":1531,"knlg":"添加class addClass('')","pid":1529,"path":"0-1-154-1152-54-1529-1531","orderNum":1,"bindId":null},{"id":1532,"knlg":"是否有指定class hasClass('')","pid":1529,"path":"0-1-154-1152-54-1529-1532","orderNum":2,"bindId":null},{"id":1533,"knlg":"移除class removeClass('')","pid":1529,"path":"0-1-154-1152-54-1529-1533","orderNum":3,"bindId":null},{"id":1534,"knlg":"切换class toggleClass('') (有就删除,没有就添加)","pid":1529,"path":"0-1-154-1152-54-1529-1534","orderNum":4,"bindId":null},{"id":1535,"knlg":"兄弟元素","pid":54,"path":"0-1-154-1152-54-1535","orderNum":20,"bindId":null},{"id":1536,"knlg":"$(selector).sibling()","pid":1562,"path":"0-1-154-1152-54-1535-1562-1536","orderNum":1,"bindId":null},{"id":1537,"knlg":"妙用\n<my示例>\n        <style>\n                #pages{\n                        background-color: lightgray;\n                        padding: 10px;\n                }\n                #pages>span{\n                        background-color: white;\n                        border-radius: 4px;\n                        width: 40px;\n                        line-height: 40px;\n                        text-align: center;\n                        font-size: 20px;\n                        display: inline-block;\n                        cursor: pointer;\n                        user-select: none;\n                }\n                #pages>span.current{\n                        background-color: #0aa1ed;\n                }\n\n        </style>\n\n</head>\n\n<body>\n        <div id=\"pages\">\n                <span class=\"current\">1</span>\n                <span>2</span>\n                <span>3</span>\n                <span>4</span>\n                <span>5</span>\n        </div>\n        <script src=\"./js/jquery-3.6.0.js\"></script>\n        <script>\n                $('#pages>span').click(function () {\n                        $(this).addClass('current').siblings('.current').removeClass('current');\n                })\n\n        </script>\n</body>\n</my示例>","pid":1536,"path":"0-1-154-1152-54-1535-1562-1536-1537","orderNum":1,"bindId":null},{"id":1548,"knlg":"attr是dom对象设置属性的旧方式","pid":286,"path":"0-1-154-1152-54-286-1548","orderNum":4,"bindId":null},{"id":1551,"knlg":"prop删除属性","pid":54,"path":"0-1-154-1152-54-1551","orderNum":21,"bindId":null},{"id":1552,"knlg":"直接设置空字符串'', removeProp已被弃用","pid":1551,"path":"0-1-154-1152-54-1551-1552","orderNum":1,"bindId":null},{"id":1553,"knlg":"自定义属性 还是dom方便","pid":54,"path":"0-1-154-1152-54-1553","orderNum":22,"bindId":null},{"id":1554,"knlg":"$(选择器).prop('dataset').属性名","pid":1553,"path":"0-1-154-1152-54-1553-1554","orderNum":1,"bindId":null},{"id":1555,"knlg":"$(选择器).attr('data-属性名')\n如: $('#yg').attr('data-color')","pid":1553,"path":"0-1-154-1152-54-1553-1555","orderNum":2,"bindId":null},{"id":1556,"knlg":"独有选择器","pid":54,"path":"0-1-154-1152-54-1556","orderNum":23,"bindId":null},{"id":1557,"knlg":":checkbox","pid":1556,"path":"0-1-154-1152-54-1556-1557","orderNum":1,"bindId":null},{"id":1558,"knlg":"相当于[type=checkbox]","pid":1557,"path":"0-1-154-1152-54-1556-1557-1558","orderNum":1,"bindId":null},{"id":1559,"knlg":"只需放在父元素中即可","pid":1134,"path":"0-1-154-44-1133-1134-1559","orderNum":1,"bindId":null},{"id":1560,"knlg":"切换标签栏\n<my示例>\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n        <meta charset=\"UTF-8\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Document</title>\n\n\n        <style>\n                #tabs{\n                        user-select: none;\n                }\n                #tabs>div:last-child>div{\n                        display: none;\n                }\n                #tabs>div:last-child>div.current{\n                        display: block;\n                }\n                #tabs>div:first-child{\n                        display: flex;\n                }\n                #tabs>div:first-child>span{\n                        box-sizing: border-box;\n                        width: 80px;\n                        line-height: 40px;\n                        padding-left:8px ;\n                        background-color: lightgray;\n                }\n                #tabs>div:first-child>span.current{\n                        background-color: indianred;\n                }\n\n        </style>\n\n</head>\n\n<body>\n        <div id=\"tabs\">\n                <div>\n                        <span data-id=\"#d1\" class=\"current\">电影</span>\n                        <span data-id=\"#d2\">预估</span>\n                        <span data-id=\"#d3\">大润发</span>\n                </div>\n                <div>\n                        <div id=\"d1\" class=\"current\">电影...</div>\n                        <div id=\"d2\">预估...</div>\n                        <div id=\"d3\">大润发...</div>\n                </div>\n        </div>\n        <script src=\"./js/jquery-3.6.0.js\"></script>\n        <script>\n                $('#tabs>div:first-child>span').click(function(){\n                        $(this).addClass('current').siblings('.current').removeClass('current');\n                        $(this.dataset.id).addClass('current').siblings('.current').removeClass('current')\n                })\n                \n\n        </script>\n</body>\n\n</html>\n</my示例>","pid":774,"path":"0-1-154-44-774-1560","orderNum":5,"bindId":null},{"id":1562,"knlg":"所有兄弟元素","pid":1535,"path":"0-1-154-1152-54-1535-1562","orderNum":2,"bindId":null},{"id":1563,"knlg":"上方所有prevAll","pid":1535,"path":"0-1-154-1152-54-1535-1563","orderNum":2,"bindId":null},{"id":1564,"knlg":"下方所有nextAll","pid":1535,"path":"0-1-154-1152-54-1535-1564","orderNum":3,"bindId":null},{"id":1565,"knlg":"上一个prev","pid":1535,"path":"0-1-154-1152-54-1535-1565","orderNum":4,"bindId":null},{"id":1566,"knlg":"下一个next","pid":1535,"path":"0-1-154-1152-54-1535-1566","orderNum":5,"bindId":null},{"id":1567,"knlg":"找到指定下标的元素 eq\n$('ul>li:eq(0)') 或\n$('ul>li').eq(0)","pid":1575,"path":"0-1-154-1152-54-1556-1575-1567","orderNum":24,"bindId":null},{"id":1570,"knlg":"大于gt","pid":1575,"path":"0-1-154-1152-54-1556-1575-1570","orderNum":3,"bindId":null},{"id":1571,"knlg":"小于lt","pid":1575,"path":"0-1-154-1152-54-1556-1575-1571","orderNum":4,"bindId":null},{"id":1572,"knlg":"奇数odd","pid":1575,"path":"0-1-154-1152-54-1556-1575-1572","orderNum":5,"bindId":null},{"id":1573,"knlg":"偶数even","pid":1575,"path":"0-1-154-1152-54-1556-1575-1573","orderNum":6,"bindId":null},{"id":1575,"knlg":"根据索引位置来选择","pid":1556,"path":"0-1-154-1152-54-1556-1575","orderNum":7,"bindId":null},{"id":1576,"knlg":"根据包含文本来选择","pid":1556,"path":"0-1-154-1152-54-1556-1576","orderNum":3,"bindId":null},{"id":1577,"knlg":"$('ul>li:contains(fdes)')","pid":1576,"path":"0-1-154-1152-54-1556-1576-1577","orderNum":1,"bindId":null},{"id":1578,"knlg":"根据是否包含标签\n<my示例>\n<ul>\n        <li></li>\n        <li></li>\n        <li class=\"hu\"></li>\n        <li></li>\n        <li></li>\n</ul>\n<script src=\"./js/jquery-3.6.0.js\"></script>\n<script>\n        $('ul:has(.hu)').mouseover(function(){\n                $(this).css({\n                        backgroundColor:'blue'\n                        \n                })\n        })\n\n        \n\n</script>\n</my示例>","pid":1556,"path":"0-1-154-1152-54-1556-1578","orderNum":4,"bindId":null},{"id":1579,"knlg":"空元素","pid":1556,"path":"0-1-154-1152-54-1556-1579","orderNum":5,"bindId":null},{"id":1580,"knlg":"$('ul:empty')","pid":1579,"path":"0-1-154-1152-54-1556-1579-1580","orderNum":1,"bindId":null},{"id":1581,"knlg":"非空元素","pid":1556,"path":"0-1-154-1152-54-1556-1581","orderNum":6,"bindId":null},{"id":1582,"knlg":"$('ul:parent')","pid":1581,"path":"0-1-154-1152-54-1556-1581-1582","orderNum":1,"bindId":null},{"id":1583,"knlg":"只能在选择器中写","pid":1576,"path":"0-1-154-1152-54-1556-1576-1583","orderNum":2,"bindId":null},{"id":1585,"knlg":"脚本位置及执行顺序","pid":155,"path":"0-1-154-155-1585","orderNum":24,"bindId":null},{"id":1586,"knlg":"script标签要放在html代码后面, 才能\n正常操作dom元素, 因为代码是按顺序执行的,\nstyle标签也满足这个规则","pid":1585,"path":"0-1-154-155-1585-1586","orderNum":1,"bindId":null},{"id":1587,"knlg":"无论是内联还是外部的都是这样执行","pid":1586,"path":"0-1-154-155-1585-1586-1587","orderNum":1,"bindId":null},{"id":1588,"knlg":"会执行window.onload","pid":1590,"path":"0-1-154-155-1585-1590-1588","orderNum":2,"bindId":null},{"id":1590,"knlg":"页面加载完毕时","pid":1585,"path":"0-1-154-155-1585-1590","orderNum":3,"bindId":null},{"id":1591,"knlg":"$(document).ready(function () {})","pid":1590,"path":"0-1-154-155-1585-1590-1591","orderNum":2,"bindId":null},{"id":1592,"knlg":"或者$(function () {})","pid":1591,"path":"0-1-154-155-1585-1590-1591-1592","orderNum":1,"bindId":null},{"id":1593,"knlg":"没有封装的事件","pid":54,"path":"0-1-154-1152-54-1593","orderNum":24,"bindId":null},{"id":1594,"knlg":"万能绑定on\n<my示例>\n$('ul').on('mouseover',function () {\n        $(this).css({\n                backgroundColor: 'blue'\n\n        })\n})\n</my示例>","pid":1593,"path":"0-1-154-1152-54-1593-1594","orderNum":1,"bindId":null},{"id":1595,"knlg":"输入框值","pid":54,"path":"0-1-154-1152-54-1595","orderNum":25,"bindId":null},{"id":1596,"knlg":"$('input').val()","pid":1595,"path":"0-1-154-1152-54-1595-1596","orderNum":1,"bindId":null},{"id":1597,"knlg":"事件委托","pid":54,"path":"0-1-154-1152-54-1597","orderNum":26,"bindId":null},{"id":1598,"knlg":"on\n<my示例>\n$('ul').on('mouseover','.hu',function () {\n        $(this).css({\n                backgroundColor: 'blue'\n\n        })\n})\n</my示例>","pid":1597,"path":"0-1-154-1152-54-1597-1598","orderNum":1,"bindId":null},{"id":1599,"knlg":"$('#d1').text() 相当于textContent","pid":54,"path":"0-1-154-1152-54-1599","orderNum":27,"bindId":null},{"id":1600,"knlg":"textContent中不会有换行符","pid":1283,"path":"0-1-154-155-1283-1600","orderNum":3,"bindId":null},{"id":1601,"knlg":"空的Promise对象使用Promise.resolve()生成\n<my示例>\nPromise.resolve().then(()=>console.log(87))\n</my示例>","pid":384,"path":"0-1-154-206-1602-384-1601","orderNum":4,"bindId":null},{"id":1602,"knlg":"异步","pid":206,"path":"0-1-154-206-1602","orderNum":40,"bindId":null},{"id":1603,"knlg":"两种方式通信","pid":1602,"path":"0-1-154-206-1602-1603","orderNum":1,"bindId":null},{"id":1604,"knlg":"回调函数","pid":1603,"path":"0-1-154-206-1602-1603-1604","orderNum":1,"bindId":null},{"id":1606,"knlg":"Promise对象","pid":1603,"path":"0-1-154-206-1602-1603-1606","orderNum":2,"bindId":null},{"id":1607,"knlg":"await和async <my定义>注意=>{(注意)}\n<my示例>\nasync function fun() {\n        function prom() {\n                return new Promise((resolve, reject) => {\n                        setTimeout(() => {\n                                console.log(1111)\n                                resolve(222);\n                        }, 1000)\n                })\n        }\n\n        //得到222\n        let result = await prom();\n        result = await prom();\n        result = await prom();\n}\n\nfun()\n</my示例>","pid":1610,"path":"0-1-154-206-1602-1610-1607","orderNum":3,"bindId":null},{"id":1610,"knlg":"最好的异步处理","pid":1602,"path":"0-1-154-206-1602-1610","orderNum":4,"bindId":null},{"id":1612,"knlg":"await要在async修饰的函数中才可用","pid":1607,"path":"0-1-154-206-1602-1610-1607-1612","orderNum":1,"bindId":null},{"id":1613,"knlg":"await会返回resolve的值","pid":1607,"path":"0-1-154-206-1602-1610-1607-1613","orderNum":2,"bindId":null},{"id":1614,"knlg":"reject的值要通过try...catch或\ncatch方法来获得\n<my示例>\nasync function fun() {\n        function prom() {\n                return new Promise((resolve, reject) => {\n                        setTimeout(() => {\n                                console.log(1111)\n                                reject(new Error(76578));\n                        }, 1000)\n                })\n        }\n        try {\n                let result = await prom();\n                result = await prom();\n                result = await prom();\n        }\n        catch(err){\n                throw err;\n        }\n}\n\nfun()\n\n//或\n\nasync function fun() {\n        function prom() {\n                return new Promise((resolve, reject) => {\n                        setTimeout(() => {\n                                console.log(1111)\n                                reject(new Error(76578));\n                        }, 1000)\n                })\n        }\n\n        let result = await prom().catch((err) => { throw err });\n        result = await prom().catch((err) => { throw err });\n        result = await prom().catch((err) => { throw err });\n}\n\nfun()\n</my示例>","pid":1607,"path":"0-1-154-206-1602-1610-1607-1614","orderNum":3,"bindId":null},{"id":1615,"knlg":"字符串拼接","pid":35,"path":"0-1-154-35-1615","orderNum":4,"bindId":null},{"id":1616,"knlg":"CONCAT\n<my示例>\nSELECT id FROM know WHERE pid LIKE CONCAT('%(',id,')%') limit 1;\n</my示例>","pid":1615,"path":"0-1-154-35-1615-1616","orderNum":1,"bindId":null},{"id":1617,"knlg":"子查询中调用父查询查出的结果","pid":35,"path":"0-1-154-35-1617","orderNum":5,"bindId":null},{"id":1618,"knlg":"如果子查询和父查询的表相同,\n则需要给父查询的表一个别名\n<my示例>\nSELECT `id`,(SELECT `path` FROM `know` WHERE `pid`=parent.id limit 1) AS \n`cid` FROM `know` AS parent WHERE `pid`=?\n</my示例>","pid":1617,"path":"0-1-154-35-1617-1618","orderNum":1,"bindId":null},{"id":1619,"knlg":"起别名 AS 可省略\n<my示例>\nSELECT `id` AS `cid` FROM `know` AS parent WHERE `pid`=?\n</my示例>","pid":35,"path":"0-1-154-35-1619","orderNum":6,"bindId":null},{"id":1620,"knlg":"mysql模块","pid":157,"path":"0-1-154-157-1620","orderNum":2,"bindId":null},{"id":1621,"knlg":"判断是否删除或修改或插入成功\n用result.affectedRows\n<my示例>\nrouter.put('/v1/dataObj', (req, res) => {\n    let obj = req.body;\n    let sql = 'UPDATE `know` SET ? WHERE `id`=?';\n\n    pool.query(sql, [obj, obj.id], (err, result) => {\n        if (err) throw err;\n        if (result.affectedRows > 0) {\n            res.send('1');\n        } else {\n            res.send('0');\n        }\n    })\n})\n</my示例>","pid":1620,"path":"0-1-154-157-1620-1621","orderNum":1,"bindId":null},{"id":1622,"knlg":"判断是否查到结果\n用result.length\n<my示例>\nrouter.get('/v1/dataObj', (req, res) => {\n\n    let sql = 'SELECT * FROM `know`';\n\n    pool.query(sql, (err, result) => {\n        if (err) throw err;\n        if (result.length > 0) {\n            res.send(result);\n        } else {\n            res.send('没有查找到');\n        }\n    })\n})\n</my示例>","pid":1620,"path":"0-1-154-157-1620-1622","orderNum":2,"bindId":null},{"id":1623,"knlg":"当本工序会影响到上一道工序施工\n结果时要对上一道工序做成品保护，\n一般用薄膜","pid":989,"path":"0-1-1031-989-1623","orderNum":14,"bindId":null},{"id":1624,"knlg":"保温","pid":989,"path":"0-1-1031-989-1624","orderNum":15,"bindId":null},{"id":1625,"knlg":"保温板不能泡水","pid":1624,"path":"0-1-1031-989-1624-1625","orderNum":1,"bindId":null},{"id":1626,"knlg":"材料","pid":1629,"path":"0-1-1031-989-1629-1626","orderNum":16,"bindId":null},{"id":1627,"knlg":"钢筋","pid":1626,"path":"0-1-1031-989-1629-1626-1627","orderNum":1,"bindId":null},{"id":1628,"knlg":"钢筋品种、级别、规格要变更时，要联系单","pid":1627,"path":"0-1-1031-989-1629-1626-1627-1628","orderNum":1,"bindId":null},{"id":1629,"knlg":"强制性","pid":989,"path":"0-1-1031-989-1629","orderNum":17,"bindId":null},{"id":1631,"knlg":"设计没具体要求时，一、二、三级抗震\n要用抗震钢筋","pid":1627,"path":"0-1-1031-989-1629-1626-1627-1631","orderNum":2,"bindId":null},{"id":1632,"knlg":"进场钢筋要取样到试验室检验，\n抽样细节看监理的抽样检验方案","pid":1627,"path":"0-1-1031-989-1629-1626-1627-1632","orderNum":3,"bindId":null},{"id":1633,"knlg":"VBA","pid":154,"path":"0-1-154-1633","orderNum":18,"bindId":null},{"id":1634,"knlg":"sub类似于宏，没有返回值，\nSub本身不是一个变量","pid":1633,"path":"0-1-154-1633-1634","orderNum":1,"bindId":null},{"id":1635,"knlg":"Function有返回值，Function\n本身也是一个变量","pid":1633,"path":"0-1-154-1633-1635","orderNum":2,"bindId":null},{"id":1636,"knlg":"=符号可以用来判断是否等于，\n也可以用来赋值","pid":1633,"path":"0-1-154-1633-1636","orderNum":3,"bindId":null},{"id":1637,"knlg":":=用来给函数或Sub的参数赋值","pid":1633,"path":"0-1-154-1633-1637","orderNum":4,"bindId":null},{"id":1638,"knlg":"变量声明 Dim 变量名 AS 类型","pid":1633,"path":"0-1-154-1633-1638","orderNum":5,"bindId":null},{"id":1639,"knlg":"数组API","pid":206,"path":"0-1-154-206-1639","orderNum":40,"bindId":null},{"id":1640,"knlg":"splice <my定义>注意{(参数千万要写下标)}\n<my切换>\n删除元素\n</my切换>\n<my示例>\nbindList.splice(bindList.indexOf(branch), 1);\n</my示例>","pid":1639,"path":"0-1-154-206-1639-1640","orderNum":1,"bindId":null},{"id":1642,"knlg":"会修改数组本身","pid":1640,"path":"0-1-154-206-1639-1640-1642","orderNum":1,"bindId":null},{"id":1643,"knlg":"新增子元素","pid":54,"path":"0-1-154-1152-54-1643","orderNum":28,"bindId":null},{"id":1644,"knlg":"$('').append(子元素)","pid":1643,"path":"0-1-154-1152-54-1643-1644","orderNum":1,"bindId":null},{"id":1645,"knlg":"删除自身","pid":54,"path":"0-1-154-1152-54-1645","orderNum":29,"bindId":null},{"id":1646,"knlg":"$('').remove()","pid":1645,"path":"0-1-154-1152-54-1645-1646","orderNum":1,"bindId":null},{"id":1647,"knlg":"映射实现","pid":206,"path":"0-1-154-206-1647","orderNum":41,"bindId":null},{"id":1648,"knlg":"Map对象","pid":1647,"path":"0-1-154-206-1647-1648","orderNum":1,"bindId":null},{"id":1649,"knlg":"Object","pid":1647,"path":"0-1-154-206-1647-1649","orderNum":2,"bindId":null},{"id":1651,"knlg":"Map对象和Object区别","pid":1647,"path":"0-1-154-206-1647-1651","orderNum":3,"bindId":null},{"id":1653,"knlg":"Map可遍历所有元素","pid":1651,"path":"0-1-154-206-1647-1651-1653","orderNum":1,"bindId":null},{"id":1654,"knlg":"Map可支持所有类型做key, Object只\n支持String做key","pid":1651,"path":"0-1-154-206-1647-1651-1654","orderNum":2,"bindId":null},{"id":1655,"knlg":"Object在一开始就有几个key (Prototype中的)","pid":1651,"path":"0-1-154-206-1647-1651-1655","orderNum":3,"bindId":null},{"id":1656,"knlg":"在元素前添加","pid":54,"path":"0-1-154-1152-54-1656","orderNum":30,"bindId":null},{"id":1657,"knlg":"$('').before()","pid":1656,"path":"0-1-154-1152-54-1656-1657","orderNum":1,"bindId":null},{"id":1658,"knlg":"在元素后添加","pid":54,"path":"0-1-154-1152-54-1658","orderNum":31,"bindId":null},{"id":1659,"knlg":"$('').after($('<h1></h1>'))","pid":1658,"path":"0-1-154-1152-54-1658-1659","orderNum":1,"bindId":null},{"id":1660,"knlg":"创建元素$('元素')\n<my示例>\n$('<h1>sdefd</h1>')\n</my示例>","pid":54,"path":"0-1-154-1152-54-1660","orderNum":32,"bindId":null},{"id":1661,"knlg":"$('').after('<h1></h1>')","pid":1658,"path":"0-1-154-1152-54-1658-1661","orderNum":2,"bindId":null},{"id":1662,"knlg":"清空子元素","pid":54,"path":"0-1-154-1152-54-1662","orderNum":33,"bindId":null},{"id":1663,"knlg":"$('').empty()","pid":1662,"path":"0-1-154-1152-54-1662-1663","orderNum":1,"bindId":null},{"id":1664,"knlg":"delegate已被淘汰","pid":1597,"path":"0-1-154-1152-54-1597-1664","orderNum":2,"bindId":null},{"id":1665,"knlg":"应该使用Object.Create(null)创建,\n这样不会继承任何属性,便于当映射用","pid":1649,"path":"0-1-154-206-1647-1649-1665","orderNum":1,"bindId":null},{"id":1666,"knlg":"显示元素","pid":54,"path":"0-1-154-1152-54-1666","orderNum":34,"bindId":null},{"id":1667,"knlg":"$('').show()","pid":1666,"path":"0-1-154-1152-54-1666-1667","orderNum":1,"bindId":null},{"id":1668,"knlg":"隐藏元素","pid":54,"path":"0-1-154-1152-54-1668","orderNum":35,"bindId":null},{"id":1669,"knlg":"$('').hide()","pid":1668,"path":"0-1-154-1152-54-1668-1669","orderNum":1,"bindId":null},{"id":1670,"knlg":"动画","pid":54,"path":"0-1-154-1152-54-1670","orderNum":36,"bindId":null},{"id":1671,"knlg":"隐藏或显示动画$('').show(<my定义>速度{('fast' 'slow')},回调函数)\n<my示例>\n$('').hide('slow',()=>{})\n</my示例>","pid":1670,"path":"0-1-154-1152-54-1670-1671","orderNum":3,"bindId":null},{"id":1672,"knlg":"滑动动画\n<my示例>\n$('').slideUp('slow',()=>{})\n</my示例>","pid":1670,"path":"0-1-154-1152-54-1670-1672","orderNum":4,"bindId":null},{"id":1673,"knlg":"隐藏slideUp","pid":1672,"path":"0-1-154-1152-54-1670-1672-1673","orderNum":1,"bindId":null},{"id":1674,"knlg":"显示slideDown","pid":1672,"path":"0-1-154-1152-54-1670-1672-1674","orderNum":2,"bindId":null},{"id":1675,"knlg":"切换slideToggle","pid":1672,"path":"0-1-154-1152-54-1670-1672-1675","orderNum":3,"bindId":null},{"id":1676,"knlg":"动画队列","pid":1670,"path":"0-1-154-1152-54-1670-1676","orderNum":3,"bindId":null},{"id":1677,"knlg":"动画会放入动画队列, 直到执行完成","pid":1676,"path":"0-1-154-1152-54-1670-1676-1677","orderNum":1,"bindId":null},{"id":1678,"knlg":".stop()可停止正在执行的动画\n<my示例>\n$('').stop().slideUp('slow',()=>{})\n</my示例>","pid":1676,"path":"0-1-154-1152-54-1670-1676-1678","orderNum":2,"bindId":null},{"id":1679,"knlg":"渐进渐出(淡入淡出)动画","pid":1670,"path":"0-1-154-1152-54-1670-1679","orderNum":4,"bindId":null},{"id":1680,"knlg":"fadeTo(时长, 目标透明度)\n<my示例>\n$('').fadeTo(1000,0.5)\n</my示例>","pid":1679,"path":"0-1-154-1152-54-1670-1679-1680","orderNum":1,"bindId":null},{"id":1681,"knlg":"fadeIn","pid":1679,"path":"0-1-154-1152-54-1670-1679-1681","orderNum":2,"bindId":null},{"id":1682,"knlg":"fadeOut","pid":1679,"path":"0-1-154-1152-54-1670-1679-1682","orderNum":3,"bindId":null},{"id":1683,"knlg":"fadeToggle","pid":1679,"path":"0-1-154-1152-54-1670-1679-1683","orderNum":4,"bindId":null},{"id":1684,"knlg":"自定义动画\n可以使用动画队列\n<my示例>\n<button>yug</button>\n<div id=\"box\">\n\n</div>\n<script src=\"./js/jquery-3.6.0.js\"></script>\n<script>\n        $('button').click(function(){\n                $('#box').animate({\n                        borderRadius:'50%',\n                        width:'100px',\n                        height:'100px'\n                },500);\n                $('#box').animate({\n                        borderRadius:'100%',\n                        width:'200px',\n                        height:'200px'\n                },1000);\n        })\n\n</script>\n</my示例>","pid":1670,"path":"0-1-154-1152-54-1670-1684","orderNum":5,"bindId":null},{"id":1686,"knlg":".stop(<my定义>参数1{(是否清空动画队列, 默认false)}, <my定义>参数2{(结束当前动画时, 是否直接跳到最终状态)})\n\n<my示例>\n$('#box').stop(true,false);\n\n</my示例>","pid":1670,"path":"0-1-154-1152-54-1670-1686","orderNum":6,"bindId":null},{"id":1688,"knlg":"免费的接口网址","pid":154,"path":"0-1-154-1688","orderNum":19,"bindId":null},{"id":1689,"knlg":"https://api.apiopen.top/api.html","pid":1688,"path":"0-1-154-1688-1689","orderNum":1,"bindId":null},{"id":1690,"knlg":"解决基本图片防盗链","pid":154,"path":"0-1-154-1690","orderNum":20,"bindId":null},{"id":1691,"knlg":"加上<meta name=\"referrer\" content=\"no-referrer\">","pid":1690,"path":"0-1-154-1690-1691","orderNum":1,"bindId":null},{"id":1692,"knlg":"ajax","pid":54,"path":"0-1-154-1152-54-1692","orderNum":37,"bindId":null},{"id":1693,"knlg":"$.get\n<my示例>\nconst url='https://api.apiopen.top/getImages'\n$.get(url,data=>{\n\n        let {result}=data;\n        \n\n        let arr=result.map(value=>{\n                \n                let {img,time}=value\n                console.log(img)\n\n                return `\n                <div>\n                        <img src=\"${img}\" alt=\"\">\n                        <p>${time}</p>\n                </div>\n                `\n        })\n        $('#box').html(arr.join(''))\n})\n</my示例>","pid":1692,"path":"0-1-154-1152-54-1692-1693","orderNum":1,"bindId":null},{"id":1694,"knlg":"Live Sass Compiler(RitWick Dey) 和 Sass(Syler)","pid":1088,"path":"0-1-154-1150-919-1088-1694","orderNum":2,"bindId":null},{"id":1695,"knlg":"下方状态栏点Watch sass,\n即可当sass用","pid":1694,"path":"0-1-154-1150-919-1088-1694-1695","orderNum":1,"bindId":null},{"id":1696,"knlg":"借用其他网站接口","pid":154,"path":"0-1-154-1696","orderNum":21,"bindId":null},{"id":1697,"knlg":"f12 Network>Fetch Data>header中就可获取接口地址,\n但会遇到跨域问题","pid":1696,"path":"0-1-154-1696-1697","orderNum":1,"bindId":null},{"id":1698,"knlg":"写网页的步骤","pid":154,"path":"0-1-154-1698","orderNum":22,"bindId":null},{"id":1699,"knlg":"先写假数据, 写样式, 图片用边框来代替, \n再请求数据后显示在页面上","pid":1698,"path":"0-1-154-1698-1699","orderNum":1,"bindId":null},{"id":1700,"knlg":"数组的forEach等遍历函数的回调\n函数不要用async,因为它本事调用此\n回调函数时就没有await, 因此会造成异步\n不排队, 改用for循环代替","pid":1701,"path":"0-1-154-206-1602-1701-1700","orderNum":5,"bindId":null},{"id":1701,"knlg":"注意","pid":1602,"path":"0-1-154-206-1602-1701","orderNum":5,"bindId":null},{"id":1702,"knlg":"水泥保质期","pid":989,"path":"0-1-1031-989-1702","orderNum":17,"bindId":null},{"id":1703,"knlg":"三个月，超过后就不能用到高\n等级混凝土","pid":1702,"path":"0-1-1031-989-1702-1703","orderNum":1,"bindId":null},{"id":1704,"knlg":"钢筋","pid":989,"path":"0-1-1031-989-1704","orderNum":18,"bindId":null},{"id":1705,"knlg":"黄色锈蚀就算了，带磷锈蚀有问题，\n要检测","pid":1704,"path":"0-1-1031-989-1704-1705","orderNum":1,"bindId":null},{"id":1706,"knlg":"钢筋上一般不允许涂光滑材料如油漆，\n可涂模板剂","pid":1704,"path":"0-1-1031-989-1704-1706","orderNum":19,"bindId":null},{"id":1707,"knlg":"模板","pid":989,"path":"0-1-1031-989-1707","orderNum":19,"bindId":null},{"id":1708,"knlg":"模板一般翻三四次就破了","pid":1707,"path":"0-1-1031-989-1707-1708","orderNum":1,"bindId":null},{"id":1709,"knlg":"水灰比","pid":1817,"path":"0-1-1031-989-1817-1709","orderNum":20,"bindId":null},{"id":1711,"knlg":"公区精装修","pid":1032,"path":"0-1-1031-1032-1711","orderNum":2,"bindId":null},{"id":1712,"knlg":"吊顶","pid":1711,"path":"0-1-1031-1032-1711-1712","orderNum":1,"bindId":null},{"id":1713,"knlg":"石膏板","pid":1712,"path":"0-1-1031-1032-1711-1712-1713","orderNum":1,"bindId":null},{"id":1714,"knlg":"12厚防水","pid":1713,"path":"0-1-1031-1032-1711-1712-1713-1714","orderNum":1,"bindId":null},{"id":1715,"knlg":"高低处和暗藏灯带处","pid":1712,"path":"0-1-1031-1032-1711-1712-1715","orderNum":2,"bindId":null},{"id":1716,"knlg":"18厚阻燃板","pid":1715,"path":"0-1-1031-1032-1711-1712-1715-1716","orderNum":1,"bindId":null},{"id":1717,"knlg":"涂料","pid":1712,"path":"0-1-1031-1032-1711-1712-1717","orderNum":3,"bindId":null},{"id":1718,"knlg":"白色防水无机涂料","pid":1717,"path":"0-1-1031-1032-1711-1712-1717-1718","orderNum":1,"bindId":null},{"id":1719,"knlg":"角部","pid":1712,"path":"0-1-1031-1032-1711-1712-1719","orderNum":4,"bindId":null},{"id":1720,"knlg":"护角","pid":1719,"path":"0-1-1031-1032-1711-1712-1719-1720","orderNum":1,"bindId":null},{"id":1721,"knlg":"文本固定几行,超出用...\n<my示例>\ntext-overflow: -o-ellipsis-lastline;\noverflow: hidden;\ntext-overflow: ellipsis;\ndisplay: -webkit-box;\n\n//以下写行数\n-webkit-line-clamp: 2;\nline-clamp: 2;\n-webkit-box-orient: vertical;\n</my示例>","pid":44,"path":"0-1-154-44-1721","orderNum":14,"bindId":null},{"id":1723,"knlg":"百度查css的方法","pid":44,"path":"0-1-154-44-1723","orderNum":15,"bindId":null},{"id":1724,"knlg":"css 要查的内容\n如css 2行","pid":1723,"path":"0-1-154-44-1723-1724","orderNum":1,"bindId":null},{"id":1725,"knlg":"$.post\n<my示例>\n<script src=\"./js/jquery-3.6.0.js\"></script>\n<script>\n        const url='http://www.codeboy.com:9999/data/user/login.php'\n\n        const params={uname:'doudou',upwd:'123456'}\n\n        $.post(url,params,data=>{\n                console.log(data)\n        })\n</script>\n</my示例>","pid":1692,"path":"0-1-154-1152-54-1692-1725","orderNum":2,"bindId":null},{"id":1726,"knlg":"借用登录接口","pid":1696,"path":"0-1-154-1696-1726","orderNum":2,"bindId":null},{"id":1727,"knlg":"故意写错用户名密码, 执行同样操作","pid":1726,"path":"0-1-154-1696-1726-1727","orderNum":1,"bindId":null},{"id":1728,"knlg":"$('').append(子元素数组)\n或$('').append(字符串数组)","pid":1643,"path":"0-1-154-1152-54-1643-1728","orderNum":2,"bindId":null},{"id":1729,"knlg":"windows 7 支持的最高版本是12","pid":157,"path":"0-1-154-157-1729","orderNum":3,"bindId":null},{"id":1730,"knlg":"学子商城其它部分网址","pid":1,"path":"0-1-1730","orderNum":11,"bindId":null},{"id":1731,"knlg":"http://www.codeboy.com:9999/mfresh/data/news_select.php","pid":1730,"path":"0-1-1730-1731","orderNum":1,"bindId":null},{"id":1732,"knlg":"切换到国内下载源","pid":1739,"path":"0-1-154-157-1738-1739-1732","orderNum":4,"bindId":null},{"id":1733,"knlg":"npm config set registry https://registry.npm.taobao.org","pid":1732,"path":"0-1-154-157-1738-1739-1732-1733","orderNum":1,"bindId":null},{"id":1734,"knlg":"查看当前下载源","pid":1739,"path":"0-1-154-157-1738-1739-1734","orderNum":5,"bindId":null},{"id":1735,"knlg":"npm config get registry","pid":1734,"path":"0-1-154-157-1738-1739-1734-1735","orderNum":1,"bindId":null},{"id":1736,"knlg":"默认下载源","pid":1739,"path":"0-1-154-157-1738-1739-1736","orderNum":6,"bindId":null},{"id":1737,"knlg":"https://registry.npmjs.org/","pid":1736,"path":"0-1-154-157-1738-1739-1736-1737","orderNum":1,"bindId":null},{"id":1738,"knlg":"配置","pid":157,"path":"0-1-154-157-1738","orderNum":7,"bindId":null},{"id":1739,"knlg":"下载源","pid":1738,"path":"0-1-154-157-1738-1739","orderNum":1,"bindId":null},{"id":1740,"knlg":"安装包步骤","pid":1738,"path":"0-1-154-157-1738-1740","orderNum":2,"bindId":null},{"id":1741,"knlg":"npm init -y \n<my切换>初始化package.json</my切换>","pid":1740,"path":"0-1-154-157-1738-1740-1741","orderNum":1,"bindId":null},{"id":1742,"knlg":"npm i 包名\n<my切换>\n安装包\n</my切换>\n<my示例>\nnpm i express\n</my示例>","pid":1740,"path":"0-1-154-157-1738-1740-1742","orderNum":2,"bindId":null},{"id":1743,"knlg":"解决每次修改后要重启服务器","pid":157,"path":"0-1-154-157-1743","orderNum":5,"bindId":null},{"id":1744,"knlg":"安装插件npm i -g nodemon","pid":1743,"path":"0-1-154-157-1743-1744","orderNum":1,"bindId":null},{"id":1745,"knlg":"使用插件启动服务器nodemon app.js","pid":1743,"path":"0-1-154-157-1743-1745","orderNum":2,"bindId":null},{"id":1746,"knlg":"由于前后端分离, 前端和后端服务器要分离, \n所以必须解决跨域问题","pid":126,"path":"0-1-154-1152-54-126-1746","orderNum":6,"bindId":null},{"id":1747,"knlg":"最常见三种解决方案","pid":136,"path":"0-1-154-1152-54-126-136-1747","orderNum":5,"bindId":null},{"id":1749,"knlg":"适合php","pid":140,"path":"0-1-154-1152-54-126-136-1747-140-1749","orderNum":1,"bindId":null},{"id":1750,"knlg":"后端服务器返回一个响应头告诉浏览器,\n允许其它来源访问","pid":142,"path":"0-1-154-1152-54-126-136-1747-142-1750","orderNum":2,"bindId":null},{"id":1751,"knlg":"只允许指定ip访问跨域\n<my示例>\nconst express=require('express')\nconst app=express()\n\n\napp.use(express.static('public'))\n\n\n\napp.listen(3000,()=>{\n    console.log('服务器已启动,端口3000')\n})\n\n//此处拦截所有请求,统一提交响应头\n//*是通配符匹配所有的请求\n//有next的是拦截器\napp.all('*',(req,res,next)=>{\n\n    //只允许http://127.0.0.1:5500\n    res.setHeader('Access-Control-Allow-Origin','http://127.0.0.1:5500');\n    next()\n})\n\n\n\napp.get('/skills',(req,res)=>{\n    const skills=['HTML','CSS','JS','VUE','DOM'];\n    res.send(skills);\n})\n</my示例>","pid":142,"path":"0-1-154-1152-54-126-136-1747-142-1751","orderNum":3,"bindId":null},{"id":1752,"knlg":"允许多个指定ip访问","pid":142,"path":"0-1-154-1152-54-126-136-1747-142-1752","orderNum":4,"bindId":null},{"id":1753,"knlg":"用CORS模块npm i cors","pid":1752,"path":"0-1-154-1152-54-126-136-1747-142-1752-1753","orderNum":1,"bindId":null},{"id":1754,"knlg":"第三方CORS模块cors","pid":142,"path":"0-1-154-1152-54-126-136-1747-142-1754","orderNum":5,"bindId":null},{"id":1755,"knlg":"安装npm i cors","pid":1754,"path":"0-1-154-1152-54-126-136-1747-142-1754-1755","orderNum":1,"bindId":null},{"id":1756,"knlg":"直接中间件中使用就可以跨域了\n<my示例>\nconst express=require('express')\nconst app=express()\nconst cors=require('cors')\n\n\napp.use(express.static('public'))\n\n//直接使用就看跨域\napp.use(cors())\n\n\napp.listen(3000,()=>{\n    console.log('服务器已启动,端口3000')\n})\n\n\n\n\napp.get('/skills',(req,res)=>{\n    const skills=['HTML','CSS','JS','VUE','DOM'];\n    res.send(skills);\n})\n</my示例>","pid":1754,"path":"0-1-154-1152-54-126-136-1747-142-1754-1756","orderNum":2,"bindId":null},{"id":1757,"knlg":"允许多个指定ip访问\n<my示例>\nconst express=require('express')\nconst app=express()\nconst cors=require('cors')\n\n\napp.use(express.static('public'))\n\n//写入允许的地址\napp.use(cors({\n    origin:['http://127.0.0.1:5500','http://localhost:5500']\n}))\n\n\napp.listen(3000,()=>{\n    console.log('服务器已启动,端口3000')\n})\n\n\n\n\napp.get('/skills',(req,res)=>{\n    const skills=['HTML','CSS','JS','VUE','DOM'];\n    res.send(skills);\n})\n</my示例>","pid":1754,"path":"0-1-154-1152-54-126-136-1747-142-1754-1757","orderNum":3,"bindId":null},{"id":1759,"knlg":"代理服务器","pid":1747,"path":"0-1-154-1152-54-126-136-1747-1759","orderNum":3,"bindId":null},{"id":1760,"knlg":"代理服务器和普通服务器的区别","pid":1759,"path":"0-1-154-1152-54-126-136-1747-1759-1760","orderNum":1,"bindId":null},{"id":1761,"knlg":"普通服务器流程","pid":1760,"path":"0-1-154-1152-54-126-136-1747-1759-1760-1761","orderNum":1,"bindId":null},{"id":1762,"knlg":"前端->服务器->数据库","pid":1761,"path":"0-1-154-1152-54-126-136-1747-1759-1760-1761-1762","orderNum":1,"bindId":null},{"id":1763,"knlg":"代理服务器流程","pid":1760,"path":"0-1-154-1152-54-126-136-1747-1759-1760-1763","orderNum":2,"bindId":null},{"id":1764,"knlg":"前端->代理服务器->服务器->数据库","pid":1763,"path":"0-1-154-1152-54-126-136-1747-1759-1760-1763-1764","orderNum":1,"bindId":null},{"id":1765,"knlg":"原理","pid":1759,"path":"0-1-154-1152-54-126-136-1747-1759-1765","orderNum":2,"bindId":null},{"id":1766,"knlg":"服务器与服务器之间没有同源策略","pid":1765,"path":"0-1-154-1152-54-126-136-1747-1759-1765-1766","orderNum":1,"bindId":null},{"id":1767,"knlg":"操作","pid":1759,"path":"0-1-154-1152-54-126-136-1747-1759-1767","orderNum":3,"bindId":null},{"id":1768,"knlg":"安装npm i express-http-proxy","pid":1767,"path":"0-1-154-1152-54-126-136-1747-1759-1767-1768","orderNum":1,"bindId":null},{"id":1769,"knlg":"示例斗鱼","pid":1767,"path":"0-1-154-1152-54-126-136-1747-1759-1767-1769","orderNum":2,"bindId":null},{"id":1770,"knlg":"html\n<my示例>\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <h1>欢迎使用</h1>\n\n    <div id=\"skills\"></div>\n    <div id=\"names\"></div>\n\n    <script src=\"./js/jquery-3.6.0.js\"></script>\n\n    <script>\n        const url='http://localhost:3000/dy/api/room/list?page=2&type=yz'\n\n        $.get(url,data=>{\n            console.log(data)\n        })\n    </script>\n</body>\n</html>\n</my示例>","pid":1769,"path":"0-1-154-1152-54-126-136-1747-1759-1767-1769-1770","orderNum":1,"bindId":null},{"id":1771,"knlg":"app.js\n<my示例>\nconst express=require('express')\nconst cors=require('cors')\nconst proxy=require('express-http-proxy')\n\nconst app=express()\n\napp.use(express.static('public'))\n\napp.use(cors())\n\n//直接使用就看跨域\napp.use('/dy',proxy('https://m.douyu.com'))\n\n\napp.listen(3000,()=>{\n    console.log('服务器已启动,端口3000')\n})\n</my示例>","pid":1769,"path":"0-1-154-1152-54-126-136-1747-1759-1767-1769-1771","orderNum":2,"bindId":null},{"id":1772,"knlg":"注意","pid":1767,"path":"0-1-154-1152-54-126-136-1747-1759-1767-1772","orderNum":3,"bindId":null},{"id":1773,"knlg":"自己服务器上的跨域要写在代理前面\n<my示例>\napp.use(cors())\napp.use('/dy',proxy('https://m.douyu.com'))\n\n而不是\n\napp.use('/dy',proxy('https://m.douyu.com'))\napp.use(cors())\n</my示例>","pid":1772,"path":"0-1-154-1152-54-126-136-1747-1759-1767-1772-1773","orderNum":1,"bindId":null},{"id":1774,"knlg":"$(选择器).data('属性名')","pid":1553,"path":"0-1-154-1152-54-1553-1774","orderNum":3,"bindId":null},{"id":1776,"knlg":"原理","pid":174,"path":"0-1-154-1152-174-1776","orderNum":36,"bindId":null},{"id":1777,"knlg":"拦截器","pid":1776,"path":"0-1-154-1152-174-1776-1777","orderNum":1,"bindId":null},{"id":1778,"knlg":"set方法中拦截内容","pid":1777,"path":"0-1-154-1152-174-1776-1777-1778","orderNum":1,"bindId":null},{"id":1780,"knlg":"订阅","pid":1776,"path":"0-1-154-1152-174-1776-1780","orderNum":2,"bindId":null},{"id":1781,"knlg":"对象属性和dom元素属性绑定","pid":1780,"path":"0-1-154-1152-174-1776-1780-1781","orderNum":1,"bindId":null},{"id":1783,"knlg":"Vue对象\n<my示例>\n<body>\n        <div id=\"app\">\n                <p>msg:{{9*9}}</p>\n        </div>\n\n        <script src=\"js/vue.js\"></script>\n        <script>\n                var v=new Vue({\n                        el:'#app',\n                        data:{msg:'ytfgu'}\n                })\n                console.log(v)\n        </script>\n\n\n\n</body>\n</my示例>","pid":174,"path":"0-1-154-1152-174-1783","orderNum":37,"bindId":null},{"id":1784,"knlg":"el 设置挂载点\n<my切换>指定Vue要管理的对象, 一般用id选择器</my切换>","pid":1783,"path":"0-1-154-1152-174-1783-1784","orderNum":1,"bindId":null},{"id":1786,"knlg":"data<my切换>用于存储el中用到的数据</my切换>","pid":1783,"path":"0-1-154-1152-174-1783-1786","orderNum":2,"bindId":null},{"id":1787,"knlg":"其中的属性会被自动放入Vue对象","pid":1786,"path":"0-1-154-1152-174-1783-1786-1787","orderNum":1,"bindId":null},{"id":1788,"knlg":"{{}}\n<my切换>\n用于绑定双标签内容, 但在网络差\n的情况会显示{{}}, 用户体验不好\n</my切换>\n<my示例>\n<body>\n        <div id=\"app\">\n                <p>msg:{{9*9}}{{msg}}</p>\n        </div>\n\n        <script src=\"js/vue.js\"></script>\n        <script>\n                var v=new Vue({\n                        el:'#app',\n                        data:{msg:'ytfgu'}\n                })\n                console.log(v)\n        </script>\n</body>\n</my示例>","pid":1793,"path":"0-1-154-1152-174-1793-1788","orderNum":3,"bindId":null},{"id":1789,"knlg":"data中的值会被自动添加get set","pid":1786,"path":"0-1-154-1152-174-1783-1786-1789","orderNum":2,"bindId":null},{"id":1790,"knlg":"如果值发生变化,则会自动更新\n绑定的DOM元素","pid":1786,"path":"0-1-154-1152-174-1783-1786-1790","orderNum":3,"bindId":null},{"id":1791,"knlg":"类似模板字符串, 里面可写js语句","pid":1788,"path":"0-1-154-1152-174-1793-1788-1791","orderNum":1,"bindId":null},{"id":1793,"knlg":"绑定","pid":174,"path":"0-1-154-1152-174-1793","orderNum":38,"bindId":null},{"id":1794,"knlg":"v-bind:或:<my切换>绑定属性</my切换>\n<my示例>\n<body>\n        <div id=\"app\">\n                <a :href=\"href\">{{content}}</a>\n        </div>\n\n        <script src=\"js/vue.js\"></script>\n        <script>\n                var v=new Vue({\n                        el:'#app',\n                        data:{\n                                content:'链接',\n                                href:'http://www.baidu.com'\n                        }\n                })\n                console.log(v)\n        </script>\n</body>\n</my示例>","pid":1793,"path":"0-1-154-1152-174-1793-1794","orderNum":2,"bindId":null},{"id":1795,"knlg":"methods\n<my示例>\n<body>\n    <div id=\"app\">\n            <div @click=\"show\">{{content}}</a>\n    </div>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\n    <script>\n            var v=new Vue({\n                    el:'#app',\n                    data:{\n                            content:'链接',\n                            href:'http://www.baidu.com'\n                    },\n                    methods:{\n                        show(){\n                            alert('')\n                        }\n                    }\n            })\n            console.log(v)\n    </script>\n</body>\n</my示例>","pid":1783,"path":"0-1-154-1152-174-1783-1795","orderNum":3,"bindId":null},{"id":1796,"knlg":"其中的函数会被自动放入Vue对象","pid":1795,"path":"0-1-154-1152-174-1783-1795-1796","orderNum":1,"bindId":null},{"id":1797,"knlg":"访问data时直接用this调用即可","pid":1795,"path":"0-1-154-1152-174-1783-1795-1797","orderNum":2,"bindId":null},{"id":1798,"knlg":"v-on:或@\n<my切换>绑定事件</my切换>\n<my示例>\n<body>\n    <div id=\"app\">\n            <div @click=\"show\">{{content}}</a>\n    </div>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\n    <script>\n            var v=new Vue({\n                    el:'#app',\n                    data:{\n                            content:'链接',\n                            href:'http://www.baidu.com'\n                    },\n                    methods:{\n                        show(){\n                            alert('')\n                        }\n                    }\n            })\n            console.log(v)\n    </script>\n</body>\n</my示例>","pid":1793,"path":"0-1-154-1152-174-1793-1798","orderNum":3,"bindId":null},{"id":1800,"knlg":"api文档","pid":174,"path":"0-1-154-1152-174-1800","orderNum":39,"bindId":null},{"id":1801,"knlg":"https://cn.vuejs.org/v2/api/","pid":1800,"path":"0-1-154-1152-174-1800-1801","orderNum":1,"bindId":null},{"id":1802,"knlg":"里面可写js语句","pid":1794,"path":"0-1-154-1152-174-1793-1794-1802","orderNum":1,"bindId":null},{"id":1803,"knlg":"示例","pid":174,"path":"0-1-154-1152-174-1803","orderNum":40,"bindId":null},{"id":1804,"knlg":"加减数量效果最简实现\n<my示例>\n<div id=\"app\">\n    <button @click=\"num--\" :disabled=\"num==1\">-</button>\n    <span>{{num}}</span>\n    <button @click=\"num++\">+</button>\n</div>\n\n<script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\n<script>\n    var v = new Vue({\n        el: '#app',\n        data:{\n            num:1\n        }\n    })\n</script>\n</my示例>","pid":1803,"path":"0-1-154-1152-174-1803-1804","orderNum":1,"bindId":null},{"id":1805,"knlg":"事件函数参数","pid":174,"path":"0-1-154-1152-174-1805","orderNum":41,"bindId":null},{"id":1806,"knlg":"如果不加小括号,则默认传事件对象\n<my示例>\n<body>\n    <div id=\"app\">\n        <button @click=\"show\">按钮</button>\n    </div>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\n    <script>\n        var v = new Vue({\n            el: '#app',\n            data: {\n\n            },\n            methods: {\n                show(e) {\n                    console.log(e)\n                }\n            }\n\n        })\n    </script>\n</body>\n</my示例>","pid":1805,"path":"0-1-154-1152-174-1805-1806","orderNum":1,"bindId":null},{"id":1807,"knlg":"如果加小括号,则不传事件对象, 传自定义参数\n<my示例>\n<body>\n    <div id=\"app\">\n        <button @click=\"show\">按钮</button>\n    </div>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\n    <script>\n        var v = new Vue({\n            el: '#app',\n            data: {\n\n            },\n            methods: {\n                show(e) {\n                    //e是undefined\n                    console.log(e)\n                }\n            }\n\n        })\n    </script>\n</body>\n</my示例>","pid":1805,"path":"0-1-154-1152-174-1805-1807","orderNum":2,"bindId":null},{"id":1808,"knlg":"$event代表事件对象\n<my示例>\n<body>\n    <div id=\"app\">\n        <button @click=\"show('aaa',$event)\">按钮</button>\n    </div>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\n    <script>\n        var v = new Vue({\n            el: '#app',\n            data: {\n\n            },\n            methods: {\n                show(str,e) {\n                    console.log(e)\n                }\n            }\n\n        })\n    </script>\n</body>\n</my示例>","pid":1805,"path":"0-1-154-1152-174-1805-1808","orderNum":3,"bindId":null},{"id":1809,"knlg":"可以在自定义参数中传入","pid":1808,"path":"0-1-154-1152-174-1805-1808-1809","orderNum":1,"bindId":null},{"id":1810,"knlg":"绑定内联样式\n<my示例>\n<body>\n    <div id=\"app\">\n        <button @click=\"num++\" :style=\"{fontSize:num+'px'}\" :class=\"{active:num<10,disabled:num>=10}\">按钮</button>\n    </div>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\n    <script>\n        var v = new Vue({\n            el: '#app',\n            data: {\n                num:4\n            }\n\n        })\n    </script>\n</body>\n</my示例>","pid":1793,"path":"0-1-154-1152-174-1793-1810","orderNum":4,"bindId":null},{"id":1811,"knlg":"绑定class\n<my示例>\n<body>\n    <div id=\"app\">\n        <button @click=\"num++\" :style=\"{fontSize:num+'px'}\" :class=\"{active:num<10,disabled:num>=10}\">按钮</button>\n    </div>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\n    <script>\n        var v = new Vue({\n            el: '#app',\n            data: {\n                num:4\n            }\n\n        })\n    </script>\n</body>\n</my示例>","pid":1793,"path":"0-1-154-1152-174-1793-1811","orderNum":5,"bindId":null},{"id":1812,"knlg":"样式也可以写带-的, 要用''包含起来\n如'background-color' 相当于backgroundColor","pid":1810,"path":"0-1-154-1152-174-1793-1810-1812","orderNum":1,"bindId":null},{"id":1813,"knlg":"v-for<my切换>绑定数组</my切换>\n<my示例>\n<body>\n    <div id=\"app\">\n        <div id=\"pages\">\n            <span v-for=\"(num,i) of items\" :key=\"i\" @click=\"current=num\" :class=\"{active:current==num}\">1</span>\n        </div>\n    </div>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\n    <script>\n        new Vue({\n            el: '#app',\n            data: {\n                items:[1,2,3,4,5],\n                current:1\n            }\n\n        })\n    </script>\n</body>\n</my示例>","pid":1793,"path":"0-1-154-1152-174-1793-1813","orderNum":6,"bindId":null},{"id":1814,"knlg":"of 也可以写成in, 效果一样","pid":1813,"path":"0-1-154-1152-174-1793-1813-1814","orderNum":1,"bindId":null},{"id":1816,"knlg":"也可直接遍历数字,\n数字从1开始\n<my示例>\n<body>\n    <div id=\"app\">\n        <div id=\"pages\">\n            <span v-for=\"num of 8\" @click=\"current=num\" :class=\"{active:current==num}\">{{num}}</span>\n        </div>\n    </div>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\n    <script>\n        new Vue({\n            el: '#app',\n            data: {\n                current:1\n            }\n\n        })\n    </script>\n</body>\n</my示例>","pid":1813,"path":"0-1-154-1152-174-1793-1813-1816","orderNum":2,"bindId":null},{"id":1817,"knlg":"混凝土","pid":989,"path":"0-1-1031-989-1817","orderNum":21,"bindId":null},{"id":1818,"knlg":"一盘混凝土","pid":1817,"path":"0-1-1031-989-1817-1818","orderNum":1,"bindId":null},{"id":1819,"knlg":"搅拌机搅拌一次的混凝土","pid":1818,"path":"0-1-1031-989-1817-1818-1819","orderNum":1,"bindId":null},{"id":1820,"knlg":"黄砂一般用粗砂，粗砂比较不粘","pid":1824,"path":"0-1-1031-989-1817-1824-1820","orderNum":3,"bindId":null},{"id":1821,"knlg":"长期处于潮湿环境的混凝土，\n要进行碱活性检验","pid":1817,"path":"0-1-1031-989-1817-1821","orderNum":4,"bindId":null},{"id":1822,"knlg":"碳化原因","pid":1817,"path":"0-1-1031-989-1817-1822","orderNum":5,"bindId":null},{"id":1823,"knlg":"水泥是碱性的，与空气中的碳酸\n反应，产生碳酸钙","pid":1822,"path":"0-1-1031-989-1817-1822-1823","orderNum":1,"bindId":null},{"id":1824,"knlg":"黄砂","pid":1817,"path":"0-1-1031-989-1817-1824","orderNum":6,"bindId":null},{"id":1825,"knlg":"用来填入混凝土孔隙，降低混凝土成本","pid":1824,"path":"0-1-1031-989-1817-1824-1825","orderNum":2,"bindId":null},{"id":1826,"knlg":"将多个jQuery对象合并add\n<my示例>\n$year.add($month).add($date).on('input',function () {\n    alert('')\n})\n</my示例>","pid":54,"path":"0-1-154-1152-54-1826","orderNum":38,"bindId":null},{"id":1827,"knlg":"轻钢结构和钢结构不同","pid":989,"path":"0-1-1031-989-1827","orderNum":21,"bindId":null},{"id":1828,"knlg":"轻钢结构主要是组装，不用焊缝探伤","pid":1827,"path":"0-1-1031-989-1827-1828","orderNum":1,"bindId":null},{"id":1829,"knlg":"钢结构要焊缝探伤","pid":1827,"path":"0-1-1031-989-1827-1829","orderNum":2,"bindId":null},{"id":1830,"knlg":"浏览器缓存","pid":154,"path":"0-1-154-1830","orderNum":23,"bindId":null},{"id":1831,"knlg":"localStorage","pid":1830,"path":"0-1-154-1830-1831","orderNum":1,"bindId":null},{"id":1832,"knlg":"sessionStorage","pid":1830,"path":"0-1-154-1830-1832","orderNum":2,"bindId":null},{"id":1833,"knlg":"cookie","pid":1830,"path":"0-1-154-1830-1833","orderNum":3,"bindId":null},{"id":1834,"knlg":"通过window调用","pid":1831,"path":"0-1-154-1830-1831-1834","orderNum":1,"bindId":null},{"id":1835,"knlg":"通过window调用","pid":1832,"path":"0-1-154-1830-1832-1835","orderNum":1,"bindId":null},{"id":1836,"knlg":"在浏览器中f12 Application中查看","pid":1832,"path":"0-1-154-1830-1832-1836","orderNum":2,"bindId":null},{"id":1837,"knlg":"在浏览器中f12 Application中查看","pid":1831,"path":"0-1-154-1830-1831-1837","orderNum":2,"bindId":null},{"id":1838,"knlg":"误区","pid":44,"path":"0-1-154-44-1838","orderNum":16,"bindId":null},{"id":1839,"knlg":"不要行内元素加padding撑起来就完事了,\n要改成行内块, 不然设置的padding会被下方的元素\n占用","pid":1838,"path":"0-1-154-44-1838-1839","orderNum":1,"bindId":null},{"id":1841,"knlg":"v-html<my切换>对应html, 相当于.innerHTML=</my切换>","pid":1793,"path":"0-1-154-1152-174-1793-1841","orderNum":7,"bindId":null},{"id":1842,"knlg":"v-text<my切换>相当于.innerText, 和{{}}作用相同,  可以用在网络差的情况</my切换>","pid":1793,"path":"0-1-154-1152-174-1793-1842","orderNum":8,"bindId":null},{"id":1843,"knlg":"v-show<my切换>放布尔值, 切换显示和隐藏</my切换>","pid":1793,"path":"0-1-154-1152-174-1793-1843","orderNum":9,"bindId":null},{"id":1844,"knlg":"v-if及v-else-if和v-else<my切换>根据条件显示元素</my切换>\n<my示例>\n<body>\n    <div id=\"app\">\n        <button @click=\"score+=10\">+10</button>\n        <button @click=\"score-=10\">-10</button>\n        <p v-if=\"score==100\">满分</p>\n        <p v-else-if=\"score<100&&score>=80\">接近完美</p>\n        <p v-else=\"score<100\">不完美</p>\n    </div>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\n    <script>\n        new Vue({\n            el: '#app',\n            data: {\n                score:100\n            }\n\n        })\n    </script>\n</body>\n</my示例>","pid":1793,"path":"0-1-154-1152-174-1793-1844","orderNum":10,"bindId":null},{"id":1845,"knlg":"是通过删除dom元素的方式来隐藏元素","pid":1844,"path":"0-1-154-1152-174-1793-1844-1845","orderNum":1,"bindId":null},{"id":1846,"knlg":"v-model<my切换>双向绑定, input中值改变时绑定的变量也会变</my切换>\n<my示例>\n<body>\n    <div id=\"app\">\n        <input v-model=\"kw\" type=\"text\">\n        <div>{{kw}}</div>\n    </div>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\n    <script>\n        new Vue({\n            el: '#app',\n            data: {\n                kw:0\n            }\n\n        })\n    </script>\n</body>\n</my示例>","pid":1793,"path":"0-1-154-1152-174-1793-1846","orderNum":11,"bindId":null},{"id":1847,"knlg":"多选框的双向绑定\n<my示例>\n<body>\n    <div id=\"app\">\n        <label><span>是否同意</span><input type=\"checkbox\" v-model=\"agree\"></label>\n        <button :disabled=\"!agree\">提交</button>\n    </div>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\n    <script>\n        new Vue({\n            el: '#app',\n            data: {\n                agree:false\n            }\n\n        })\n    </script>\n</body>\n</my示例>","pid":1846,"path":"0-1-154-1152-174-1793-1846-1847","orderNum":1,"bindId":null},{"id":1848,"knlg":"单个绑定变量\n<my示例>\n<body>\n    <div id=\"app\">\n        <label><span>是否同意</span><input type=\"checkbox\" v-model=\"agree\"></label>\n        <button :disabled=\"!agree\">提交</button>\n    </div>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\n    <script>\n        new Vue({\n            el: '#app',\n            data: {\n                agree:false\n            }\n\n        })\n    </script>\n</body>\n</my示例>","pid":1847,"path":"0-1-154-1152-174-1793-1846-1847-1848","orderNum":1,"bindId":null},{"id":1849,"knlg":"多个绑定数组\n<my示例>\n<body>\n    <div id=\"app\">\n        <label><span>选项1</span><input type=\"checkbox\" v-model=\"options\" value=\"o1\"></label>\n        <label><span>选项2</span><input type=\"checkbox\" v-model=\"options\" value=\"o2\"></label>\n        <label><span>选项3</span><input type=\"checkbox\" v-model=\"options\" value=\"o3\"></label>\n        <button @click=\"show\">输出</button>\n    </div>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\n    <script>\n        new Vue({\n            el: '#app',\n            data: {\n                options:[]\n            },\n            methods:{\n                show(){\n                    console.log(this.options)\n                }\n            }\n\n        })\n    </script>\n</body>\n</my示例>","pid":1847,"path":"0-1-154-1152-174-1793-1846-1847-1849","orderNum":2,"bindId":null},{"id":1850,"knlg":"列表框的双向绑定\n<my示例>\n<body>\n    <div id=\"app\">\n        <p>car:{{car}}</p>\n\n        <select v-model=\"car\">\n            <option value=\"0\">car1</option>\n            <option value=\"1\">car2</option>\n            <option value=\"2\">car3</option>\n            <option value=\"3\">car4</option>\n        </select>\n    </div>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\n    <script>\n        new Vue({\n            el: '#app',\n            data: {\n                car:0\n            },\n            methods:{\n                show(){\n                    console.log(this.options)\n                }\n            }\n\n        })\n    </script>\n</body>\n</my示例>","pid":1846,"path":"0-1-154-1152-174-1793-1846-1850","orderNum":2,"bindId":null},{"id":1851,"knlg":"单选框的双向绑定\n<my示例>\n<body>\n    <div id=\"app\">\n        <label><span>男</span><input type=\"radio\" v-model=\"gender\" value=\"1\" name=\"gender\"></label>\n        <label><span>女</span><input type=\"radio\" v-model=\"gender\" value=\"0\" name=\"gender\"></label>\n        <div>{{gender}}</div>\n    </div>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\n    <script>\n        new Vue({\n            el: '#app',\n            data: {\n                gender:3\n            }\n\n        })\n    </script>\n</body>\n</my示例>","pid":1846,"path":"0-1-154-1152-174-1793-1846-1851","orderNum":3,"bindId":null},{"id":1852,"knlg":"脚手架","pid":989,"path":"0-1-1031-989-1852","orderNum":22,"bindId":null},{"id":1853,"knlg":"安全网","pid":1852,"path":"0-1-1031-989-1852-1853","orderNum":1,"bindId":null},{"id":1854,"knlg":"第一步1.8米可以没有安全网，\n其余都要有","pid":1853,"path":"0-1-1031-989-1852-1853-1854","orderNum":1,"bindId":null},{"id":1855,"knlg":"产品形成过程","pid":1147,"path":"0-1-1147-1855","orderNum":3,"bindId":null},{"id":1856,"knlg":"需求","pid":1855,"path":"0-1-1147-1855-1856","orderNum":1,"bindId":null},{"id":1857,"knlg":"想象","pid":1855,"path":"0-1-1147-1855-1857","orderNum":2,"bindId":null},{"id":1858,"knlg":"逻辑来调整","pid":1855,"path":"0-1-1147-1855-1858","orderNum":3,"bindId":null},{"id":1859,"knlg":"科学相当于cpu指令","pid":1865,"path":"0-1-1147-1865-1859","orderNum":4,"bindId":null},{"id":1860,"knlg":"技术相当于计算机函数","pid":1865,"path":"0-1-1147-1865-1860","orderNum":5,"bindId":null},{"id":1861,"knlg":"制度也相当于产品","pid":1147,"path":"0-1-1147-1861","orderNum":6,"bindId":null},{"id":1862,"knlg":"最初需求是解决原始社会家庭子女\n的土地分配问题。已经各个家族的\n资源抢夺（庞大的家族会抢夺小家族\n的资源）","pid":1861,"path":"0-1-1147-1861-1862","orderNum":1,"bindId":null},{"id":1863,"knlg":"现代社会信息化发达，理论应该和\n实际相同。需要实际遇到的问题迅\n速反馈，理论也迅速修改。理论应\n该是当前时间最好的做法。","pid":1864,"path":"0-1-1147-1864-1863","orderNum":7,"bindId":null},{"id":1864,"knlg":"理论和实际","pid":1147,"path":"0-1-1147-1864","orderNum":8,"bindId":null},{"id":1865,"knlg":"科学和技术","pid":1147,"path":"0-1-1147-1865","orderNum":8,"bindId":null},{"id":1868,"knlg":"反馈能重新产生新需求，并再次\n经历产品开发过程","pid":1147,"path":"0-1-1147-1868","orderNum":7,"bindId":null},{"id":1869,"knlg":"开口型脚手架两端必须设置连墙件，\n每层设置 也不能大于4m","pid":1852,"path":"0-1-1031-989-1852-1869","orderNum":2,"bindId":null},{"id":1870,"knlg":"reverse会修改数组本身","pid":1639,"path":"0-1-154-206-1639-1870","orderNum":2,"bindId":null},{"id":1871,"knlg":"如要添加元素则在指定下标前添加,\n而不是后添加","pid":1640,"path":"0-1-154-206-1639-1640-1871","orderNum":2,"bindId":null},{"id":1872,"knlg":"权力靠暴力机构产生，钱是一种\n协议，也是由暴力机构提供支撑","pid":1147,"path":"0-1-1147-1872","orderNum":8,"bindId":null},{"id":1873,"knlg":"场外","pid":989,"path":"0-1-1031-989-1873","orderNum":23,"bindId":null},{"id":1874,"knlg":"电管由电力局开挖铺设","pid":1873,"path":"0-1-1031-989-1873-1874","orderNum":1,"bindId":null},{"id":1875,"knlg":"自来水管由自来水公司开挖铺设","pid":1873,"path":"0-1-1031-989-1873-1875","orderNum":2,"bindId":null},{"id":1876,"knlg":"取消css内联样式","pid":54,"path":"0-1-154-1152-54-1876","orderNum":39,"bindId":null},{"id":1877,"knlg":"直接设置属性:'' ,\n就会移除该css属性\n<my示例>\n $('#detail>.top>.left>.imgs>.container>img').css({\n    width:''\n})  \n</my示例>","pid":1876,"path":"0-1-154-1152-54-1876-1877","orderNum":1,"bindId":null},{"id":1878,"knlg":"查看元素的宽度","pid":155,"path":"0-1-154-155-1878","orderNum":25,"bindId":null},{"id":1879,"knlg":"元素.clientWidth\n<my示例>\ndocument.querySelector('#detail>.top>.left>.imgs').clientWidth\n</my示例>","pid":1878,"path":"0-1-154-155-1878-1879","orderNum":1,"bindId":null},{"id":1880,"knlg":"媒体查询","pid":155,"path":"0-1-154-155-1880","orderNum":26,"bindId":null},{"id":1881,"knlg":"window.matchMedia('(max-width:767px)').matches\n里面的括号必须要写,不然无效\n<my示例>\nif(window.matchMedia('(max-width:767px)').matches){\n    $('#detail>.top>.left>.imgs>.container>img').css({\n        width:document.querySelector('#detail>.top>.left>.imgs').clientWidth+'px'\n    })\n}else{\n     $('#detail>.top>.left>.imgs>.container>img').css({\n        width:''\n    })       \n}\n</my示例>","pid":1880,"path":"0-1-154-155-1880-1881","orderNum":1,"bindId":null},{"id":1883,"knlg":"key值可以在删除数组元素时不用全部更新一遍,\n只更新指定元素, 提示效率","pid":1813,"path":"0-1-154-1152-174-1793-1813-1883","orderNum":3,"bindId":null},{"id":1884,"knlg":"key能不用index就不用index,\n因为在数组元素交换时可能会不好用","pid":1813,"path":"0-1-154-1152-174-1793-1813-1884","orderNum":4,"bindId":null},{"id":1886,"knlg":"指令v开头的","pid":174,"path":"0-1-154-1152-174-1886","orderNum":42,"bindId":null},{"id":1887,"knlg":"给属性赋非字符串值 :属性=\"值\"\n<my示例>\n:abc=\"7\" abc的值是数字\n</my示例>","pid":1794,"path":"0-1-154-1152-174-1793-1794-1887","orderNum":2,"bindId":null},{"id":1888,"knlg":"更好的写法, data写成函数\n<my示例>\n<body>\n        <div id=\"app\">\n                <p>msg:{{msg}}</p>\n        </div>\n\n        <script src=\"js/vue.js\"></script>\n        <script>\n                var v = new Vue({\n                        el: '#app',\n                        data() { return { msg: 'ytfgu' } }\n                })\n                console.log(v)\n        </script>\n</body>\n</my示例>","pid":1786,"path":"0-1-154-1152-174-1783-1786-1888","orderNum":4,"bindId":null},{"id":1889,"knlg":"计算属性\n<my示例>\n<body>\n        <div id=\"app\">\n                <p>sum {{sum}}</p>\n        </div>\n\n        <script src=\"js/vue.js\"></script>\n        <script>\n                var v = new Vue({\n                        el: '#app',\n                        data() {\n                                return {\n                                        n: 546\n                                }\n                        },\n                        computed: {\n                                sum() {\n                                        let sum = 0\n                                        for (let i = 0; i < 5; i++) {\n                                                sum += this.n;\n                                                this.n++;\n                                        }\n                                        return sum;\n                                }\n                        }\n                })\n        </script>\n</body>\n</my示例>","pid":174,"path":"0-1-154-1152-174-1889","orderNum":43,"bindId":null},{"id":1890,"knlg":"用来得到复杂运算后的结果","pid":1893,"path":"0-1-154-1152-174-1889-1893-1890","orderNum":1,"bindId":null},{"id":1891,"knlg":"使用时才会执行函数","pid":1895,"path":"0-1-154-1152-174-1889-1895-1891","orderNum":2,"bindId":null},{"id":1892,"knlg":"如果计算属性其中的data变量(依赖)发生改变,\n计算属性会重新执行\n<my示例>\n<body>\n        <div id=\"app\">\n                <p>sum {{sum}}</p>\n                <button @click=\"n++\">改变</button>\n        </div>\n\n        <script src=\"js/vue.js\"></script>\n        <script>\n                var v = new Vue({\n                        el: '#app',\n                        data() {\n                                return {\n                                        n: 546\n                                }\n                        },\n                        computed: {\n                                sum() {\n                                        let sum = 0\n                                        console.log('执行了1遍')\n                                        for (let i = 0; i < 5; i++) {\n                                                sum += this.n;\n                                                this.n++;\n                                        }\n                                        return sum;\n                                }\n                        }\n                })\n        </script>\n</body>\n</my示例>","pid":1895,"path":"0-1-154-1152-174-1889-1895-1892","orderNum":3,"bindId":null},{"id":1893,"knlg":"作用","pid":1889,"path":"0-1-154-1152-174-1889-1893","orderNum":4,"bindId":null},{"id":1895,"knlg":"执行特点","pid":1889,"path":"0-1-154-1152-174-1889-1895","orderNum":4,"bindId":null},{"id":1897,"knlg":"计算属性的结果会保存在缓存中,\n如果其中的依赖变量不改变, 则后面会\n一直用缓存\n<my示例>\n<body>\n        <div id=\"app\">\n\n                <p>sum {{sum}}</p>\n                <p>sum {{sum}}</p>\n                <button @click=\"n++\">改变</button>\n        </div>\n\n        <script src=\"js/vue.js\"></script>\n        <script>\n                var v = new Vue({\n                        el: '#app',\n                        data() {\n                                return {\n                                        n: 546\n                                }\n                        },\n                        computed: {\n                                sum() {\n\n                                        let sum = 0\n                                        console.log('执行了1遍')\n                                        for (let i = 0; i < 5; i++) {\n                                                sum += this.n;\n                                                this.n++;\n                                        }\n                                        return sum;\n\n                                }\n                        }\n                })\n        </script>\n</body>\n</my示例>","pid":1889,"path":"0-1-154-1152-174-1889-1897","orderNum":3,"bindId":null},{"id":1898,"knlg":"计算属性的结果会保存在缓存中,\n如果其中的依赖变量不改变, 则后面会\n一直用缓存\n<my示例>\n<body>\n        <div id=\"app\">\n\n                <p>sum {{sum}}</p>\n                <p>sum {{sum}}</p>\n                <button @click=\"n++\">改变</button>\n        </div>\n\n        <script src=\"js/vue.js\"></script>\n        <script>\n                var v = new Vue({\n                        el: '#app',\n                        data() {\n                                return {\n                                        n: 546\n                                }\n                        },\n                        computed: {\n                                sum() {\n\n                                        let sum = 0\n                                        console.log('执行了1遍')\n                                        for (let i = 0;; i++) {\n                                                sum += this.n;\n                                                this.n++;\n                                        }\n                                        return sum;\n\n                                }\n                        }\n                })\n        </script>\n</body>\n</my示例>","pid":1889,"path":"0-1-154-1152-174-1889-1898","orderNum":4,"bindId":null},{"id":1899,"knlg":"侦听\n<my示例>\n<body>\n        <div id=\"app\">\n\n                <button @click=\"n++\">改变</button>\n        </div>\n\n        <script src=\"js/vue.js\"></script>\n        <script>\n                var v = new Vue({\n                        el: '#app',\n                        data() {\n                                return {\n                                        n: 546\n                                }\n                        },\n                        watch: {\n                                n(newVal,oldVal) {\n\n                                        console.log('n发生了改变');\n\n                                }\n                        }\n                })\n        </script>\n</body>\n</my示例>","pid":174,"path":"0-1-154-1152-174-1899","orderNum":44,"bindId":null},{"id":1900,"knlg":"参数发生改变时触发","pid":1899,"path":"0-1-154-1152-174-1899-1900","orderNum":1,"bindId":null},{"id":1901,"knlg":"函数名要与要侦听的变量名相同","pid":1899,"path":"0-1-154-1152-174-1899-1901","orderNum":2,"bindId":null},{"id":1902,"knlg":"参数1是改变后的值, 参数2是改变前的值","pid":1899,"path":"0-1-154-1152-174-1899-1902","orderNum":3,"bindId":null},{"id":1903,"knlg":"完整写法\n<my示例>\n<body>\n        <div id=\"app\">\n\n                <button @click=\"n.num++\">改变</button>\n        </div>\n\n        <script src=\"js/vue.js\"></script>\n        <script>\n                var v = new Vue({\n                        el: '#app',\n                        data() {\n                                return {\n                                        n: {num:765}\n                                }\n                        },\n                        watch: {\n                                n: {\n                                        immediate:true,\n                                        deep:true,\n                                        handler(newVal, oldVal) {\n\n                                                console.log('n.num发生了改变');\n\n                                        }\n                                }\n                        }\n                })\n        </script>\n</body>\n</my示例>","pid":1899,"path":"0-1-154-1152-174-1899-1903","orderNum":4,"bindId":null},{"id":1904,"knlg":"immediate 代表一开始执行一次\n(实际上是数据从undefined变成值)","pid":1903,"path":"0-1-154-1152-174-1899-1903-1904","orderNum":1,"bindId":null},{"id":1905,"knlg":"deep是深度侦听, 针对对象, 对象属性\n改变时也会触发侦听","pid":1903,"path":"0-1-154-1152-174-1899-1903-1905","orderNum":2,"bindId":null},{"id":1906,"knlg":"侦听对象中的一个属性\n<my示例>\n<body>\n        <div id=\"app\">\n\n                <button @click=\"n.num++\">改变</button>\n        </div>\n\n        <script src=\"js/vue.js\"></script>\n        <script>\n                var v = new Vue({\n                        el: '#app',\n                        data() {\n                                return {\n                                        n: {num:765}\n                                }\n                        },\n                        watch: {\n                                'n.num': {\n                                        handler() {\n\n                                                console.log('n.num发生了改变');\n\n                                        }\n                                }\n                        }\n                })\n        </script>\n</body>\n</my示例>","pid":1899,"path":"0-1-154-1152-174-1899-1906","orderNum":5,"bindId":null},{"id":1907,"knlg":"脚手架","pid":174,"path":"0-1-154-1152-174-1907","orderNum":45,"bindId":null},{"id":1908,"knlg":"安装","pid":1907,"path":"0-1-154-1152-174-1907-1908","orderNum":1,"bindId":null},{"id":1909,"knlg":"npm install -g @vue/cli","pid":1908,"path":"0-1-154-1152-174-1907-1908-1909","orderNum":1,"bindId":null},{"id":1910,"knlg":"查看安装版本","pid":1907,"path":"0-1-154-1152-174-1907-1910","orderNum":2,"bindId":null},{"id":1911,"knlg":"vue -V 注意大写","pid":1910,"path":"0-1-154-1152-174-1907-1910-1911","orderNum":1,"bindId":null},{"id":1912,"knlg":"指定安装版本","pid":1907,"path":"0-1-154-1152-174-1907-1912","orderNum":3,"bindId":null},{"id":1913,"knlg":"npm install -g @vue/cli@4  安装\n4大版本, 小版本区别不大, 大版本区别大","pid":1912,"path":"0-1-154-1152-174-1907-1912-1913","orderNum":1,"bindId":null},{"id":1914,"knlg":"创建项目 <my定义>注意{(创建项目的目录下不\n能有vue.js 文件, 否则会报错)}","pid":1907,"path":"0-1-154-1152-174-1907-1914","orderNum":4,"bindId":null},{"id":1915,"knlg":"在指定位置vue create 项目名","pid":1914,"path":"0-1-154-1152-174-1907-1914-1915","orderNum":1,"bindId":null},{"id":1916,"knlg":"> Default ([Vue 2] babel, eslint)\n  Default (Vue 3) ([Vue 3] babel, eslint)\n  Manually select features\n\n前两个是套餐, 要选择最后一个手动安装","pid":1914,"path":"0-1-154-1152-174-1907-1914-1916","orderNum":2,"bindId":null},{"id":1917,"knlg":"? Please pick a preset: Manually select features\n? Check the features needed for your project: (Press <space> to select, <a> to toggle all, <i> to invert selection)\n>(*) Choose Vue version\n (*) Babel\n ( ) TypeScript\n ( ) Progressive Web App (PWA) Support\n ( ) Router\n ( ) Vuex\n ( ) CSS Pre-processors\n (*) Linter / Formatter\n ( ) Unit Testing\n ( ) E2E Testing\n\n选择Babel  Router  VueX  要用空格键选择\n如果有Choose Vue version(不自动更新) 则也选上","pid":1914,"path":"0-1-154-1152-174-1907-1914-1917","orderNum":3,"bindId":null},{"id":1918,"knlg":"? Choose a version of Vue.js that you want to start the project with (Use arrow keys)\n> 2.x\n  3.x\n\n选择2.x","pid":1914,"path":"0-1-154-1152-174-1907-1914-1918","orderNum":4,"bindId":null},{"id":1919,"knlg":"Use history mode for router? (Requires proper server setup for index fallback in production) (Y/n)\n\n选择n\nhistory模式路径没有#  hash模式路径有#","pid":1914,"path":"0-1-154-1152-174-1907-1914-1919","orderNum":5,"bindId":null},{"id":1920,"knlg":"? Where do you prefer placing config for Babel, ESLint, etc.? (Use arrow keys)\n> In dedicated config files\n  In package.json\n\n选择In package.json","pid":1914,"path":"0-1-154-1152-174-1907-1914-1920","orderNum":6,"bindId":null},{"id":1921,"knlg":"? Save this as a preset for future projects? (y/N)\n\n选择N","pid":1914,"path":"0-1-154-1152-174-1907-1914-1921","orderNum":7,"bindId":null},{"id":1922,"knlg":"require和import的区别","pid":206,"path":"0-1-154-206-1922","orderNum":42,"bindId":null},{"id":1923,"knlg":"require是运行时引入\nimport是编译前引入, \nimport效率更高","pid":1922,"path":"0-1-154-206-1922-1923","orderNum":1,"bindId":null},{"id":1924,"knlg":"引入import\n<my示例>\nimport store from './store'\n</my示例>","pid":1907,"path":"0-1-154-1152-174-1907-1924","orderNum":5,"bindId":null},{"id":1925,"knlg":"如果引入的是css, 则不必要写变量名","pid":1924,"path":"0-1-154-1152-174-1907-1924-1925","orderNum":1,"bindId":null},{"id":1926,"knlg":"页面解释","pid":1907,"path":"0-1-154-1152-174-1907-1926","orderNum":6,"bindId":null},{"id":1927,"knlg":"main.js\n<my示例>\nimport Vue from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport store from './store'\n\nVue.config.productionTip = false\n\nnew Vue({\n  router,\n  store,\n\n  //相当于创建了App这个组件\n  render: h => h(App)\n  \n})\n//相当于el:'#app' 挂载点\n.$mount('#app')\n</my示例>","pid":1926,"path":"0-1-154-1152-174-1907-1926-1927","orderNum":1,"bindId":null},{"id":1928,"knlg":"App.vue\n<my示例>\n<template>\n  <div id=\"app\">\n    <div id=\"nav\">\n      <!-- router-link 会改变地址栏, 改变显示的内容\n      但不会进行跳转(刷新整个页面) -->\n      <router-link to=\"/\">Home</router-link> |\n      <router-link to=\"/about\">About</router-link>\n    </div>\n    <router-view/>\n  </div>\n</template>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\n#nav {\n  padding: 30px;\n}\n\n#nav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n\n#nav a.router-link-exact-active {\n  color: #42b983;\n}\n</style>\n</my示例>","pid":1926,"path":"0-1-154-1152-174-1907-1926-1928","orderNum":2,"bindId":null},{"id":1929,"knlg":"导出export default\n<my示例>\nexport default {\n  name: 'Home',\n  components: {\n    HelloWorld\n  }\n}\n</my示例>","pid":1907,"path":"0-1-154-1152-174-1907-1929","orderNum":7,"bindId":null},{"id":1930,"knlg":"Home.vue\n<my示例>\n<template>\n  <div class=\"home\">\n    <img alt=\"Vue logo\" src=\"../assets/logo.png\">\n    <HelloWorld msg=\"Welcome to Your Vue.js App\"/>\n  </div>\n</template>\n\n<script>\n\nimport HelloWorld from '@/components/HelloWorld.vue'\n\n//实际上导出了Vue组件\nexport default {\n  name: 'Home',\n  components: {\n    HelloWorld\n  }\n}\n</script>\n</my示例>","pid":1926,"path":"0-1-154-1152-174-1907-1926-1930","orderNum":3,"bindId":null},{"id":1931,"knlg":"路由字典 router/index.js\n<my示例>\nimport Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport Home from '../views/Home.vue'\n\nVue.use(VueRouter)\n\nconst routes = [\n  {\n    path: '/', //访问的路由地址\n    name: 'Home', //通过路由的push方法跳转时, 使用的组件名称\n    component: Home  //跳转时使用的组件实例\n  },\n  {\n    path: '/about',\n    name: 'About',\n\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/About.vue')\n  }\n]\n\nconst router = new VueRouter({\n  routes\n})\n\nexport default router\n</my示例>","pid":1926,"path":"0-1-154-1152-174-1907-1926-1931","orderNum":4,"bindId":null},{"id":1932,"knlg":"组件文件名要用大驼峰命名法","pid":1907,"path":"0-1-154-1152-174-1907-1932","orderNum":8,"bindId":null},{"id":1933,"knlg":"组件的name最好写上, 写上更清晰","pid":1907,"path":"0-1-154-1152-174-1907-1933","orderNum":9,"bindId":null},{"id":1934,"knlg":"建立组件与路径的对应关系","pid":1931,"path":"0-1-154-1152-174-1907-1926-1931-1934","orderNum":1,"bindId":null},{"id":1935,"knlg":"绍兴中标信息查询","pid":1031,"path":"0-1-1031-1935","orderNum":4,"bindId":null},{"id":1936,"knlg":"http://ggb.sx.gov.cn/","pid":1935,"path":"0-1-1031-1935-1936","orderNum":1,"bindId":null},{"id":1937,"knlg":"绍兴市政府规范文件查询","pid":1031,"path":"0-1-1031-1937","orderNum":5,"bindId":null},{"id":1938,"knlg":"http://sxcj.sx.gov.cn/col/col1229427844/index.html","pid":1937,"path":"0-1-1031-1937-1938","orderNum":1,"bindId":null},{"id":1939,"knlg":"子组件","pid":1907,"path":"0-1-154-1152-174-1907-1939","orderNum":10,"bindId":null},{"id":1940,"knlg":"一般创建在以父组件名称为文件夹的里面\n<my示例>\n<my原生>\n<img src=\"img/子组件创建.png\" alt=\"\">\n</my原生>\n</my示例>","pid":1939,"path":"0-1-154-1152-174-1907-1939-1940","orderNum":1,"bindId":null},{"id":1941,"knlg":"引入, 父组件components\n<my示例>\n<template>\n  <p>\n    tfgtyhfdg\n    <my-child></my-child>\n  </p>\n</template>\n<script>\nimport MyChild from \"../components/MyVue/MyChild.vue\";\nexport default {\n  name: \"MyVue\",\n  components: {\n    //左边是要变成的标签名\n    \"my-child\": MyChild,\n  },\n};\n</script>\n\n</my示例>","pid":1939,"path":"0-1-154-1152-174-1907-1939-1941","orderNum":2,"bindId":null},{"id":1942,"knlg":"绝对路径","pid":1907,"path":"0-1-154-1152-174-1907-1942","orderNum":11,"bindId":null},{"id":1943,"knlg":"@代表src目录的绝对路径\n<my示例>\n<template>\n  <p>\n    tfgtyhfdg\n    <my-child></my-child>\n  </p>\n</template>\n<script>\nimport MyChild from \"@/components/MyVue/MyChild.vue\";\nexport default {\n  name: \"MyVue\",\n  components: {\n    //左边是要变成的标签名\n    \"my-child\": MyChild,\n  },\n};\n</script>\n</my示例>","pid":1942,"path":"0-1-154-1152-174-1907-1942-1943","orderNum":1,"bindId":null},{"id":1945,"knlg":"组件只能有一个最外层的元素","pid":1907,"path":"0-1-154-1152-174-1907-1945","orderNum":12,"bindId":null},{"id":1946,"knlg":"vue中驼峰命名和下划线命名\n效果一样, 因此可简写\n<my示例>\n<template>\n  <p>\n    tfgtyhfdg\n    <my-child></my-child>\n  </p>\n</template>\n<script>\nimport MyChild from \"../components/MyVue/MyChild.vue\";\nexport default {\n  name: \"MyVue\",\n  components: {\n    //简写\n    MyChild,\n  },\n};\n</script>\n</my示例>","pid":1941,"path":"0-1-154-1152-174-1907-1939-1941-1946","orderNum":3,"bindId":null},{"id":1947,"knlg":"样式","pid":1907,"path":"0-1-154-1152-174-1907-1947","orderNum":13,"bindId":null},{"id":1948,"knlg":"组件的样式会合并, 因此会相互影响","pid":1947,"path":"0-1-154-1152-174-1907-1947-1948","orderNum":1,"bindId":null},{"id":1949,"knlg":"如果不想互相影响, 则加上scoped\n<my示例>\n<template>\n    <p>子组件</p>\n</template>\n<script>\nexport default {\n    name:'MyChild'\n}\n</script>\n\n//加上scoped\n<style scoped>\ndiv{\n    width:200px;\n}\n</style>\n</my示例>","pid":1947,"path":"0-1-154-1152-174-1907-1947-1949","orderNum":2,"bindId":null},{"id":1950,"knlg":"margin left 中写的百分比都是父元素的百分比","pid":44,"path":"0-1-154-44-1950","orderNum":17,"bindId":null},{"id":1951,"knlg":"element.style 代表的是内联样式\n很大可能是js中加入的样式","pid":44,"path":"0-1-154-44-1951","orderNum":18,"bindId":null},{"id":1952,"knlg":"组件生命周期","pid":1907,"path":"0-1-154-1152-174-1907-1952","orderNum":14,"bindId":null},{"id":1953,"knlg":"生命周期图\n<my来源>https://cn.vuejs.org/v2/guide/instance.html</my来源>","pid":1952,"path":"0-1-154-1152-174-1907-1952-1953","orderNum":1,"bindId":null},{"id":1955,"knlg":"beforeCreate\n<my示例>\n<template>\n  <p>\n    tfgtyhfdg\n    <my-child></my-child>\n  </p>\n</template>\n<script>\nexport default {\n  name: \"MyVue\",\n  beforeCreate(){\n      console.log(7777)\n  }\n};\n</script>\n</my示例>","pid":1952,"path":"0-1-154-1152-174-1907-1952-1955","orderNum":2,"bindId":null},{"id":1956,"knlg":"数据及方法都还没有初始化","pid":1955,"path":"0-1-154-1152-174-1907-1952-1955-1956","orderNum":1,"bindId":null},{"id":1957,"knlg":"作用","pid":1955,"path":"0-1-154-1152-174-1907-1952-1955-1957","orderNum":2,"bindId":null},{"id":1958,"knlg":"额外安装的插件的初始化可在这里完成","pid":1957,"path":"0-1-154-1152-174-1907-1952-1955-1957-1958","orderNum":1,"bindId":null},{"id":1959,"knlg":"created\n<my示例>\n<template>\n  <p>\n    tfgtyhfdg\n  </p>\n</template>\n<script>\nexport default {\n  name: \"MyVue\",\n  data(){\n      return{\n          a:'dgfg'\n      }\n  },\n  created(){\n      console.log(this.a)\n      this.a='yugfvh'\n      \n  }\n\n};\n</script>\n</my示例>","pid":1952,"path":"0-1-154-1152-174-1907-1952-1959","orderNum":3,"bindId":null},{"id":1960,"knlg":"数据及方法已初始化完成\n可以把后台获取的数值赋值给变量","pid":1959,"path":"0-1-154-1152-174-1907-1952-1959-1960","orderNum":1,"bindId":null},{"id":1961,"knlg":"dom结构也没有初始化完成","pid":1955,"path":"0-1-154-1152-174-1907-1952-1955-1961","orderNum":3,"bindId":null},{"id":1962,"knlg":"组件操作dom","pid":1907,"path":"0-1-154-1152-174-1907-1962","orderNum":15,"bindId":null},{"id":1963,"knlg":"dom结构还没有初始化完成","pid":1959,"path":"0-1-154-1152-174-1907-1952-1959-1963","orderNum":2,"bindId":null},{"id":1964,"knlg":"beforeMount","pid":1952,"path":"0-1-154-1152-174-1907-1952-1964","orderNum":4,"bindId":null},{"id":1965,"knlg":"dom结构还没有初始化完成","pid":1964,"path":"0-1-154-1152-174-1907-1952-1964-1965","orderNum":1,"bindId":null},{"id":1966,"knlg":"作用","pid":1964,"path":"0-1-154-1152-174-1907-1952-1964-1966","orderNum":2,"bindId":null},{"id":1967,"knlg":"没作用, 一般不用","pid":1966,"path":"0-1-154-1152-174-1907-1952-1964-1966-1967","orderNum":1,"bindId":null},{"id":1968,"knlg":"mounted","pid":1952,"path":"0-1-154-1152-174-1907-1952-1968","orderNum":5,"bindId":null},{"id":1969,"knlg":"dom结构初始化完成","pid":1968,"path":"0-1-154-1152-174-1907-1952-1968-1969","orderNum":1,"bindId":null},{"id":1970,"knlg":"作用","pid":1968,"path":"0-1-154-1152-174-1907-1952-1968-1970","orderNum":2,"bindId":null},{"id":1971,"knlg":"数据与dom的联动操作","pid":1970,"path":"0-1-154-1152-174-1907-1952-1968-1970-1971","orderNum":1,"bindId":null},{"id":1972,"knlg":"作用","pid":1959,"path":"0-1-154-1152-174-1907-1952-1959-1972","orderNum":3,"bindId":null},{"id":1973,"knlg":"处理数据","pid":1972,"path":"0-1-154-1152-174-1907-1952-1959-1972-1973","orderNum":1,"bindId":null},{"id":1974,"knlg":"一般用的少","pid":1957,"path":"0-1-154-1152-174-1907-1952-1955-1957-1974","orderNum":2,"bindId":null},{"id":1975,"knlg":"ref 及$ref\n<my示例>\n<template>\n  <p ref=\"pp\">\n    tfgtyhfdg\n  </p>\n</template>\n<script>\nexport default {\n  name: \"MyVue\",\n  mounted(){\n      this.$refs.pp.innerHTML='欢迎'\n  }\n\n};\n</script>\n</my示例>","pid":1962,"path":"0-1-154-1152-174-1907-1962-1975","orderNum":1,"bindId":null},{"id":1976,"knlg":"beforeUpdate","pid":1952,"path":"0-1-154-1152-174-1907-1952-1976","orderNum":6,"bindId":null},{"id":1977,"knlg":"updated","pid":1952,"path":"0-1-154-1152-174-1907-1952-1977","orderNum":7,"bindId":null},{"id":1978,"knlg":"只有改变数据, 触发页面数据更新, 两个条件\n都满足才会触发更新钩子函数","pid":1976,"path":"0-1-154-1152-174-1907-1952-1976-1978","orderNum":1,"bindId":null},{"id":1979,"knlg":"一般针对于css的计算","pid":1976,"path":"0-1-154-1152-174-1907-1952-1976-1979","orderNum":2,"bindId":null},{"id":1980,"knlg":"beforeDestroy","pid":1952,"path":"0-1-154-1152-174-1907-1952-1980","orderNum":8,"bindId":null},{"id":1981,"knlg":"destroyed","pid":1952,"path":"0-1-154-1152-174-1907-1952-1981","orderNum":9,"bindId":null},{"id":1982,"knlg":"此时功能正常","pid":1980,"path":"0-1-154-1152-174-1907-1952-1980-1982","orderNum":1,"bindId":null},{"id":1983,"knlg":"作用","pid":1980,"path":"0-1-154-1152-174-1907-1952-1980-1983","orderNum":2,"bindId":null},{"id":1984,"knlg":"解决内存泄漏,\n安全","pid":1983,"path":"0-1-154-1152-174-1907-1952-1980-1983-1984","orderNum":1,"bindId":null},{"id":1985,"knlg":"销毁周期性定时器","pid":1984,"path":"0-1-154-1152-174-1907-1952-1980-1983-1984-1985","orderNum":1,"bindId":null},{"id":1986,"knlg":"销毁闭包","pid":1984,"path":"0-1-154-1152-174-1907-1952-1980-1983-1984-1986","orderNum":2,"bindId":null},{"id":1987,"knlg":"数据、方法都还没销毁","pid":1981,"path":"0-1-154-1152-174-1907-1952-1981-1987","orderNum":1,"bindId":null},{"id":1988,"knlg":"属性与模板的联系已被取消","pid":1981,"path":"0-1-154-1152-174-1907-1952-1981-1988","orderNum":2,"bindId":null},{"id":1989,"knlg":"销毁组件","pid":1907,"path":"0-1-154-1152-174-1907-1989","orderNum":16,"bindId":null},{"id":1990,"knlg":"this.$destroy,\n要在mounted之后使用","pid":1989,"path":"0-1-154-1152-174-1907-1989-1990","orderNum":1,"bindId":null},{"id":1991,"knlg":"在避免矛盾的情况下最大程度发挥\n人的本性","pid":1147,"path":"0-1-1147-1991","orderNum":9,"bindId":null},{"id":1992,"knlg":"算法","pid":154,"path":"0-1-154-1992","orderNum":24,"bindId":null},{"id":1993,"knlg":"哈希值最好是素数, 而且不接近2^n","pid":1992,"path":"0-1-154-1992-1993","orderNum":1,"bindId":null},{"id":1994,"knlg":"代码可读性","pid":154,"path":"0-1-154-1994","orderNum":25,"bindId":null},{"id":1995,"knlg":"不要复制2行以上的代码","pid":1994,"path":"0-1-154-1994-1995","orderNum":1,"bindId":null},{"id":1996,"knlg":"删除注释后的旧代码, 改用git解决","pid":1994,"path":"0-1-154-1994-1996","orderNum":2,"bindId":null},{"id":1997,"knlg":"常量不要直接写, 要用常量声明","pid":1994,"path":"0-1-154-1994-1997","orderNum":3,"bindId":null},{"id":1998,"knlg":"能用api函数就用api函数","pid":1994,"path":"0-1-154-1994-1998","orderNum":4,"bindId":null},{"id":1999,"knlg":"尽量不要if嵌套太多层, \n或者可改成if(...)return的方法","pid":1994,"path":"0-1-154-1994-1999","orderNum":5,"bindId":null},{"id":2000,"knlg":"一个函数只写一个功能","pid":1994,"path":"0-1-154-1994-2000","orderNum":6,"bindId":null},{"id":2001,"knlg":"屋面","pid":989,"path":"0-1-1031-989-2001","orderNum":24,"bindId":null},{"id":2002,"knlg":"防水","pid":2001,"path":"0-1-1031-989-2001-2002","orderNum":1,"bindId":null},{"id":2003,"knlg":"不得有渗漏或积水现象","pid":2002,"path":"0-1-1031-989-2001-2002-2003","orderNum":1,"bindId":null},{"id":2004,"knlg":"禁用滚动条效果","pid":774,"path":"0-1-154-44-774-2004","orderNum":6,"bindId":null},{"id":2005,"knlg":"css\n<my示例>\nbody{\n    &.scroll-y-disabled{\n        overflow-y: scroll;\n        position: fixed;\n        width: 100%;\n        left: 0;\n    }\n}\n</my示例>","pid":2004,"path":"0-1-154-44-774-2004-2005","orderNum":1,"bindId":null},{"id":2006,"knlg":"js","pid":2004,"path":"0-1-154-44-774-2004-2006","orderNum":2,"bindId":null},{"id":2007,"knlg":"禁用\n<my示例>\n$('body').css('top',-$('html').scrollTop()+'px').addClass('scroll-y-disabled')\n</my示例>","pid":2006,"path":"0-1-154-44-774-2004-2006-2007","orderNum":1,"bindId":null},{"id":2008,"knlg":"获得进度条位置后放到top中","pid":2007,"path":"0-1-154-44-774-2004-2006-2007-2008","orderNum":1,"bindId":null},{"id":2009,"knlg":"启用\n<my示例>\n$('body').removeClass('scroll-y-disabled')\n$('html').scrollTop(-($('body').css('top').slice(0, -2)));\n$('body').css('top', '')\n</my示例>","pid":2006,"path":"0-1-154-44-774-2004-2006-2009","orderNum":2,"bindId":null},{"id":2010,"knlg":"获得top数值设置进度条位置","pid":2009,"path":"0-1-154-44-774-2004-2006-2009-2010","orderNum":1,"bindId":null},{"id":2011,"knlg":"只适用chrome的滚动条scroll定制","pid":44,"path":"0-1-154-44-2011","orderNum":19,"bindId":null},{"id":2012,"knlg":"必须设置进度条宽才会生效\n<my示例>\nbody::-webkit-scrollbar {\n    width: 18px;\n}\n\nbody::-webkit-scrollbar-track {\n    border-radius: px;\n    background: #c9cacc;\n}\n\nbody::-webkit-scrollbar-track:hover {\n    background: #78797a;\n}\n\nbody::-webkit-scrollbar-thumb {\n    background: #3d5585;\n    border-radius: 10px;\n\n}\n\nbody::-webkit-scrollbar-thumb:hover {\n    background: #01143b;\n}\n</my示例>","pid":2011,"path":"0-1-154-44-2011-2012","orderNum":1,"bindId":null},{"id":2016,"knlg":"初始化项目","pid":1907,"path":"0-1-154-1152-174-1907-2016","orderNum":17,"bindId":null},{"id":2017,"knlg":"删除components文件夹下的文件","pid":2016,"path":"0-1-154-1152-174-1907-2016-2017","orderNum":1,"bindId":null},{"id":2018,"knlg":"删除assets文件夹下的文件","pid":2016,"path":"0-1-154-1152-174-1907-2016-2018","orderNum":2,"bindId":null},{"id":2019,"knlg":"修改index.js\n<my示例>\nimport Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport Home from '../views/Home.vue'\n\nVue.use(VueRouter)\n\nconst routes = [\n  {\n    path: '/',\n    name: 'Home',\n    component: Home\n  }\n]\n\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n})\n\nexport default router\n</my示例>","pid":2016,"path":"0-1-154-1152-174-1907-2016-2019","orderNum":3,"bindId":null},{"id":2020,"knlg":"修改App.vue\n<my示例>\n<template>\n    <router-view/>\n</template>\n</my示例>","pid":2016,"path":"0-1-154-1152-174-1907-2016-2020","orderNum":4,"bindId":null},{"id":2021,"knlg":"修改Home.vue\n<my示例>\n<template>\n  <div>\n    Home\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'Home'\n}\n</script>\n</my示例>","pid":2016,"path":"0-1-154-1152-174-1907-2016-2021","orderNum":5,"bindId":null},{"id":2022,"knlg":"子组件写法\n<my示例>\n<template>\n    <div>标题</div>\n</template>\n</my示例>","pid":1939,"path":"0-1-154-1152-174-1907-1939-2022","orderNum":3,"bindId":null},{"id":2025,"knlg":"插槽<my切换>组件标签能写内容的方法</my切换>\n<my示例>\n<template>\n  <div>\n    <HomeTitle>想写内容, 但不会显示</HomeTitle>\n\n  </div>\n</template>\n</my示例>","pid":1907,"path":"0-1-154-1152-174-1907-2025","orderNum":18,"bindId":null},{"id":2027,"knlg":"默认插槽","pid":2025,"path":"0-1-154-1152-174-1907-2025-2027","orderNum":1,"bindId":null},{"id":2028,"knlg":"示例","pid":2027,"path":"0-1-154-1152-174-1907-2025-2027-2028","orderNum":1,"bindId":null},{"id":2029,"knlg":"父组件\n<my示例>\n<template>\n  <div>\n    <HomeTitle>yghy</HomeTitle>\n  </div>\n</template>\n</my示例>","pid":2028,"path":"0-1-154-1152-174-1907-2025-2027-2028-2029","orderNum":1,"bindId":null},{"id":2030,"knlg":"子组件\n<my示例>\n<template>\n  <div>\n    标题\n    <slot></slot>\n    <slot></slot>\n  </div>\n</template>\n</my示例>","pid":2028,"path":"0-1-154-1152-174-1907-2025-2027-2028-2030","orderNum":2,"bindId":null},{"id":2031,"knlg":"没有指定名称的内容会被放到每个匿名插槽","pid":2027,"path":"0-1-154-1152-174-1907-2025-2027-2031","orderNum":2,"bindId":null},{"id":2032,"knlg":"具名插槽","pid":2025,"path":"0-1-154-1152-174-1907-2025-2032","orderNum":2,"bindId":null},{"id":2033,"knlg":"示例","pid":2032,"path":"0-1-154-1152-174-1907-2025-2032-2033","orderNum":1,"bindId":null},{"id":2034,"knlg":"父组件\n<my示例>\n<template>\n  <div>\n    <HomeTitle>\n      <template v-slot:age>\n        15岁\n      </template>\n    </HomeTitle>\n  </div>\n</template>\n</my示例>","pid":2033,"path":"0-1-154-1152-174-1907-2025-2032-2033-2034","orderNum":1,"bindId":null},{"id":2035,"knlg":"子组件\n<my示例>\n<template>\n  <div>\n    标题\n    <slot name=\"age\"></slot>\n  </div>\n</template>\n</my示例>","pid":2033,"path":"0-1-154-1152-174-1907-2025-2032-2033-2035","orderNum":2,"bindId":null},{"id":2036,"knlg":"指定名称的内容会被放到每个对应的具名插槽","pid":2032,"path":"0-1-154-1152-174-1907-2025-2032-2036","orderNum":2,"bindId":null},{"id":2037,"knlg":"父组件给子组件传值\n通过:","pid":1939,"path":"0-1-154-1152-174-1907-1939-2037","orderNum":4,"bindId":null},{"id":2038,"knlg":"示例","pid":2037,"path":"0-1-154-1152-174-1907-1939-2037-2038","orderNum":1,"bindId":null},{"id":2039,"knlg":"父组件\n<my示例>\n<template>\n  <div>\n    <child :pData=\"pData\"></child>\n  </div>\n</template>\n\n<script>\nimport Child from '../components/Child.vue'\nexport default {\n  name: 'Home',\n  data(){\n    return {\n      pData:'ubgyug'\n    }\n  },\n  components:{Child}\n}\n</script>\n</my示例>","pid":2038,"path":"0-1-154-1152-174-1907-1939-2037-2038-2039","orderNum":1,"bindId":null},{"id":2040,"knlg":"子组件\n<my示例>\n<template>\n  <div>\n      {{pData}}\n  </div>\n</template>\n\n<script>\n\nexport default {\n    name:'Child',\n    props:['pData']\n}\n</script>\n</my示例>","pid":2038,"path":"0-1-154-1152-174-1907-1939-2037-2038-2040","orderNum":2,"bindId":null},{"id":2041,"knlg":"属性名要保持一致","pid":2037,"path":"0-1-154-1152-174-1907-1939-2037-2041","orderNum":2,"bindId":null},{"id":2042,"knlg":"在绝对定位的left和top属性设置后, right\n和bottom属性不起作用","pid":44,"path":"0-1-154-44-2042","orderNum":20,"bindId":null},{"id":2043,"knlg":"把left和top设置成auto","pid":2042,"path":"0-1-154-44-2042-2043","orderNum":1,"bindId":null},{"id":2044,"knlg":"子元素设置成固定定位后 z-index还受父\n元素影响","pid":44,"path":"0-1-154-44-2044","orderNum":21,"bindId":null},{"id":2045,"knlg":"把父元素z-index设置成auto","pid":2044,"path":"0-1-154-44-2044-2045","orderNum":1,"bindId":null},{"id":2046,"knlg":"地面","pid":989,"path":"0-1-1031-989-2046","orderNum":24,"bindId":null},{"id":2047,"knlg":"有防水要求的地面工程，浇筑前\n必须对立管、套管、地漏与楼板\n节点密封处理，并应隐蔽验收","pid":2046,"path":"0-1-1031-989-2046-2047","orderNum":1,"bindId":null},{"id":2048,"knlg":"translate和margin之类的区别","pid":44,"path":"0-1-154-44-2048","orderNum":22,"bindId":null},{"id":2049,"knlg":"translate是用gpu的, 其它是用cpu的","pid":2048,"path":"0-1-154-44-2048-2049","orderNum":1,"bindId":null}]